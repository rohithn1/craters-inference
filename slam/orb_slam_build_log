Scanning dependencies of target g2o
[  3%] Building CXX object Thirdparty/g2o/CMakeFiles/g2o.dir/g2o/types/types_seven_dof_expmap.cpp.o
[  3%] Building CXX object Thirdparty/g2o/CMakeFiles/g2o.dir/g2o/types/types_six_dof_expmap.cpp.o
[  3%] Building CXX object Thirdparty/g2o/CMakeFiles/g2o.dir/g2o/types/types_sba.cpp.o
Scanning dependencies of target ORB_SLAM3
[  3%] Building CXX object CMakeFiles/ORB_SLAM3.dir/src/System.cc.o
In file included from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.h:30:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.cpp:27:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:62:74: warning: ‘Eigen::AlignedBit’ is deprecated [-Wdeprecated-declarations]
     typedef Eigen::Map<Matrix<double, D, D>, Matrix<double,D,D>::Flags & AlignedBit ? Aligned : Unaligned >  HessianBlockType;
                                                                          ^~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:360:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/util/Constants.h:166:37: note: declared here
 EIGEN_DEPRECATED const unsigned int AlignedBit = 0x80;
                                     ^~~~~~~~~~
In file included from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:62:74: warning: ‘Eigen::AlignedBit’ is deprecated [-Wdeprecated-declarations]
     typedef Eigen::Map<Matrix<double, D, D>, Matrix<double,D,D>::Flags & AlignedBit ? Aligned : Unaligned >  HessianBlockType;
                                                                          ^~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:360:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/util/Constants.h:166:37: note: declared here
 EIGEN_DEPRECATED const unsigned int AlignedBit = 0x80;
                                     ^~~~~~~~~~
In file included from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.h:30:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.cpp:27:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h: In instantiation of ‘class g2o::BaseVertex<3, Eigen::Matrix<double, 3, 1> >’:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.h:40:35:   required from here
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:62:72: warning: ‘Eigen::AlignedBit’ is deprecated [-Wdeprecated-declarations]
     typedef Eigen::Map<Matrix<double, D, D>, Matrix<double,D,D>::Flags & AlignedBit ? Aligned : Unaligned >  HessianBlockType;
                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:360:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/util/Constants.h:166:37: note: declared here
 EIGEN_DEPRECATED const unsigned int AlignedBit = 0x80;
                                     ^~~~~~~~~~
In file included from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:62:74: warning: ‘Eigen::AlignedBit’ is deprecated [-Wdeprecated-declarations]
     typedef Eigen::Map<Matrix<double, D, D>, Matrix<double,D,D>::Flags & AlignedBit ? Aligned : Unaligned >  HessianBlockType;
                                                                          ^~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:360:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/util/Constants.h:166:37: note: declared here
 EIGEN_DEPRECATED const unsigned int AlignedBit = 0x80;
                                     ^~~~~~~~~~
In file included from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:35:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.h:59:82: warning: ‘Eigen::AlignedBit’ is deprecated [-Wdeprecated-declarations]
       typedef Eigen::Map<Matrix<double, Di, Dj>, Matrix<double, Di, Dj>::Flags & AlignedBit ? Aligned : Unaligned > HessianBlockType;
                                                                                  ^~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:360:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/util/Constants.h:166:37: note: declared here
 EIGEN_DEPRECATED const unsigned int AlignedBit = 0x80;
                                     ^~~~~~~~~~
In file included from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:35:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.h:60:82: warning: ‘Eigen::AlignedBit’ is deprecated [-Wdeprecated-declarations]
       typedef Eigen::Map<Matrix<double, Dj, Di>, Matrix<double, Dj, Di>::Flags & AlignedBit ? Aligned : Unaligned > HessianBlockTransposedType;
                                                                                  ^~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:360:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/util/Constants.h:166:37: note: declared here
 EIGEN_DEPRECATED const unsigned int AlignedBit = 0x80;
                                     ^~~~~~~~~~
In file included from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:38:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.h:59:82: warning: ‘Eigen::AlignedBit’ is deprecated [-Wdeprecated-declarations]
       typedef Eigen::Map<Matrix<double, Di, Dj>, Matrix<double, Di, Dj>::Flags & AlignedBit ? Aligned : Unaligned > HessianBlockType;
                                                                                  ^~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:360:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/util/Constants.h:166:37: note: declared here
 EIGEN_DEPRECATED const unsigned int AlignedBit = 0x80;
                                     ^~~~~~~~~~
In file included from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:38:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.h:60:82: warning: ‘Eigen::AlignedBit’ is deprecated [-Wdeprecated-declarations]
       typedef Eigen::Map<Matrix<double, Dj, Di>, Matrix<double, Dj, Di>::Flags & AlignedBit ? Aligned : Unaligned > HessianBlockTransposedType;
                                                                                  ^~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:360:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/util/Constants.h:166:37: note: declared here
 EIGEN_DEPRECATED const unsigned int AlignedBit = 0x80;
                                     ^~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::Map<const Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::Map<const Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::Map<const Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::Map<const Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::Map<const Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::Map<const Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Map<const Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >; Derived = Eigen::Matrix<double, 3, 1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.h:55:20:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:710:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:327:20:   required from ‘Derived& Eigen::DenseBase<Derived>::setConstant(const Scalar&) [with Derived = Eigen::Matrix<double, 3, 1>; Eigen::DenseBase<Derived>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:317:14:   required from ‘void Eigen::DenseBase<Derived>::fill(const Scalar&) [with Derived = Eigen::Matrix<double, 3, 1>; Eigen::DenseBase<Derived>::Scalar = double]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.h:49:24:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::Matrix<double, 3, 3>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::Matrix<double, 3, 3>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::Matrix<double, 3, 3>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 3>; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:278:27:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.hpp:37:25:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 3; T = Eigen::Matrix<double, 3, 1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.cpp:56:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::Matrix<double, 3, 1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::Matrix<double, 3, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::Matrix<double, 3, 1>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 1>; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:278:27:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.hpp:41:25:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 3; T = Eigen::Matrix<double, 3, 1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.cpp:56:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> > > > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> > > > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> > > >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> > > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> > > >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> > > >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:537:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> > > >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:379:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> > > >; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.hpp:37:25:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 3; T = Eigen::Matrix<double, 3, 1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.cpp:56:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h: In instantiation of ‘class g2o::BaseVertex<3, Eigen::Matrix<double, 3, 1> >’:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.h:40:35:   required from here
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:62:72: warning: ‘Eigen::AlignedBit’ is deprecated [-Wdeprecated-declarations]
     typedef Eigen::Map<Matrix<double, D, D>, Matrix<double,D,D>::Flags & AlignedBit ? Aligned : Unaligned >  HessianBlockType;
                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:360:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/util/Constants.h:166:37: note: declared here
 EIGEN_DEPRECATED const unsigned int AlignedBit = 0x80;
                                     ^~~~~~~~~~
In file included from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h: In instantiation of ‘class g2o::BaseVertex<3, Eigen::Matrix<double, 3, 1> >’:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.h:40:35:   required from here
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:62:72: warning: ‘Eigen::AlignedBit’ is deprecated [-Wdeprecated-declarations]
     typedef Eigen::Map<Matrix<double, D, D>, Matrix<double,D,D>::Flags & AlignedBit ? Aligned : Unaligned >  HessianBlockType;
                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:360:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/util/Constants.h:166:37: note: declared here
 EIGEN_DEPRECATED const unsigned int AlignedBit = 0x80;
                                     ^~~~~~~~~~
In file included from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h: In instantiation of ‘class g2o::BaseVertex<6, g2o::SE3Quat>’:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:59:33:   required from here
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:62:72: warning: ‘Eigen::AlignedBit’ is deprecated [-Wdeprecated-declarations]
     typedef Eigen::Map<Matrix<double, D, D>, Matrix<double,D,D>::Flags & AlignedBit ? Aligned : Unaligned >  HessianBlockType;
                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:360:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/util/Constants.h:166:37: note: declared here
 EIGEN_DEPRECATED const unsigned int AlignedBit = 0x80;
                                     ^~~~~~~~~~
In file included from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h: In instantiation of ‘class g2o::BaseVertex<6, g2o::SE3Quat>’:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:59:33:   required from here
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:62:72: warning: ‘Eigen::AlignedBit’ is deprecated [-Wdeprecated-declarations]
     typedef Eigen::Map<Matrix<double, D, D>, Matrix<double,D,D>::Flags & AlignedBit ? Aligned : Unaligned >  HessianBlockType;
                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:360:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/util/Constants.h:166:37: note: declared here
 EIGEN_DEPRECATED const unsigned int AlignedBit = 0x80;
                                     ^~~~~~~~~~
In file included from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:35:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.h: In instantiation of ‘class g2o::BaseBinaryEdge<6, g2o::SE3Quat, g2o::VertexSE3Expmap, g2o::VertexSE3Expmap>’:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:83:24:   required from here
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.h:59:80: warning: ‘Eigen::AlignedBit’ is deprecated [-Wdeprecated-declarations]
       typedef Eigen::Map<Matrix<double, Di, Dj>, Matrix<double, Di, Dj>::Flags & AlignedBit ? Aligned : Unaligned > HessianBlockType;
                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:360:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/util/Constants.h:166:37: note: declared here
 EIGEN_DEPRECATED const unsigned int AlignedBit = 0x80;
                                     ^~~~~~~~~~
In file included from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:35:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.h:60:80: warning: ‘Eigen::AlignedBit’ is deprecated [-Wdeprecated-declarations]
       typedef Eigen::Map<Matrix<double, Dj, Di>, Matrix<double, Dj, Di>::Flags & AlignedBit ? Aligned : Unaligned > HessianBlockTransposedType;
                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:360:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/util/Constants.h:166:37: note: declared here
 EIGEN_DEPRECATED const unsigned int AlignedBit = 0x80;
                                     ^~~~~~~~~~
In file included from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:38:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.h: In instantiation of ‘class g2o::BaseBinaryEdge<6, g2o::SE3Quat, g2o::VertexSE3Expmap, g2o::VertexSE3Expmap>’:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:83:24:   required from here
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.h:59:80: warning: ‘Eigen::AlignedBit’ is deprecated [-Wdeprecated-declarations]
       typedef Eigen::Map<Matrix<double, Di, Dj>, Matrix<double, Di, Dj>::Flags & AlignedBit ? Aligned : Unaligned > HessianBlockType;
                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:360:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/util/Constants.h:166:37: note: declared here
 EIGEN_DEPRECATED const unsigned int AlignedBit = 0x80;
                                     ^~~~~~~~~~
In file included from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:38:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.h:60:80: warning: ‘Eigen::AlignedBit’ is deprecated [-Wdeprecated-declarations]
       typedef Eigen::Map<Matrix<double, Dj, Di>, Matrix<double, Dj, Di>::Flags & AlignedBit ? Aligned : Unaligned > HessianBlockTransposedType;
                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:360:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/util/Constants.h:166:37: note: declared here
 EIGEN_DEPRECATED const unsigned int AlignedBit = 0x80;
                                     ^~~~~~~~~~
In file included from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:35:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.h: In instantiation of ‘class g2o::BaseBinaryEdge<2, Eigen::Matrix<double, 2, 1>, g2o::VertexSBAPointXYZ, g2o::VertexSE3Expmap>’:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:114:35:   required from here
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.h:59:80: warning: ‘Eigen::AlignedBit’ is deprecated [-Wdeprecated-declarations]
       typedef Eigen::Map<Matrix<double, Di, Dj>, Matrix<double, Di, Dj>::Flags & AlignedBit ? Aligned : Unaligned > HessianBlockType;
                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:360:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/util/Constants.h:166:37: note: declared here
 EIGEN_DEPRECATED const unsigned int AlignedBit = 0x80;
                                     ^~~~~~~~~~
In file included from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:35:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.h:60:80: warning: ‘Eigen::AlignedBit’ is deprecated [-Wdeprecated-declarations]
       typedef Eigen::Map<Matrix<double, Dj, Di>, Matrix<double, Dj, Di>::Flags & AlignedBit ? Aligned : Unaligned > HessianBlockTransposedType;
                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:360:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/util/Constants.h:166:37: note: declared here
 EIGEN_DEPRECATED const unsigned int AlignedBit = 0x80;
                                     ^~~~~~~~~~
In file included from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:38:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.h: In instantiation of ‘class g2o::BaseBinaryEdge<2, Eigen::Matrix<double, 2, 1>, g2o::VertexSBAPointXYZ, g2o::VertexSE3Expmap>’:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:114:35:   required from here
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.h:59:80: warning: ‘Eigen::AlignedBit’ is deprecated [-Wdeprecated-declarations]
       typedef Eigen::Map<Matrix<double, Di, Dj>, Matrix<double, Di, Dj>::Flags & AlignedBit ? Aligned : Unaligned > HessianBlockType;
                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:360:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/util/Constants.h:166:37: note: declared here
 EIGEN_DEPRECATED const unsigned int AlignedBit = 0x80;
                                     ^~~~~~~~~~
In file included from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:38:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.h:60:80: warning: ‘Eigen::AlignedBit’ is deprecated [-Wdeprecated-declarations]
       typedef Eigen::Map<Matrix<double, Dj, Di>, Matrix<double, Dj, Di>::Flags & AlignedBit ? Aligned : Unaligned > HessianBlockTransposedType;
                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:360:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/util/Constants.h:166:37: note: declared here
 EIGEN_DEPRECATED const unsigned int AlignedBit = 0x80;
                                     ^~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 3, 1> > >, Eigen::internal::div_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 3, 1> > >, Eigen::internal::div_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, 1, false>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 3, 1> >; Functor = Eigen::internal::div_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, 1, false>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 3, 1> >; Functor = Eigen::internal::div_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, 1, false>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 3, 1> >; Func = Eigen::internal::div_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, 1, false>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 3, 1> >; Func = Eigen::internal::div_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:45:28:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:396:68:   required from ‘static bool Eigen::internal::LLT_Traits<MatrixType, 1>::inplace_decomposition(MatrixType&) [with MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:443:42:   required from ‘Eigen::LLT<MatrixType, _UpLo>& Eigen::LLT<MatrixType, UpLo>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1]’
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:96:14:   required from ‘Eigen::LLT<MatrixType, UpLo>::LLT(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1]’
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:517:10:   required from ‘const Eigen::LLT<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::llt() const [with Derived = Eigen::Matrix<double, 3, 3>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, 3, 3>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.hpp:41:40:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 3; T = Eigen::Matrix<double, 3, 1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.cpp:56:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 3, 1> > >, Eigen::internal::div_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 3, 1> > >, Eigen::internal::div_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, 1, false>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 3, 1> >; Functor = Eigen::internal::div_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, 1, false>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 3, 1> >; Functor = Eigen::internal::div_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, 1, false>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 3, 1> >; Func = Eigen::internal::div_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, 1, false>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 3, 1> >; Func = Eigen::internal::div_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:45:28:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:396:68:   required from ‘static bool Eigen::internal::LLT_Traits<MatrixType, 1>::inplace_decomposition(MatrixType&) [with MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:443:42:   required from ‘Eigen::LLT<MatrixType, _UpLo>& Eigen::LLT<MatrixType, UpLo>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1]’
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:96:14:   required from ‘Eigen::LLT<MatrixType, UpLo>::LLT(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1]’
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:517:10:   required from ‘const Eigen::LLT<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::llt() const [with Derived = Eigen::Matrix<double, 3, 3>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, 3, 3>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.hpp:41:40:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 3; T = Eigen::Matrix<double, 3, 1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.cpp:56:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:35:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.h: In instantiation of ‘class g2o::BaseBinaryEdge<3, Eigen::Matrix<double, 3, 1>, g2o::VertexSBAPointXYZ, g2o::VertexSE3Expmap>’:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:146:41:   required from here
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.h:59:80: warning: ‘Eigen::AlignedBit’ is deprecated [-Wdeprecated-declarations]
       typedef Eigen::Map<Matrix<double, Di, Dj>, Matrix<double, Di, Dj>::Flags & AlignedBit ? Aligned : Unaligned > HessianBlockType;
                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:360:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/util/Constants.h:166:37: note: declared here
 EIGEN_DEPRECATED const unsigned int AlignedBit = 0x80;
                                     ^~~~~~~~~~
In file included from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:35:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.h:60:80: warning: ‘Eigen::AlignedBit’ is deprecated [-Wdeprecated-declarations]
       typedef Eigen::Map<Matrix<double, Dj, Di>, Matrix<double, Dj, Di>::Flags & AlignedBit ? Aligned : Unaligned > HessianBlockTransposedType;
                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:360:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/util/Constants.h:166:37: note: declared here
 EIGEN_DEPRECATED const unsigned int AlignedBit = 0x80;
                                     ^~~~~~~~~~
In file included from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:38:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.h: In instantiation of ‘class g2o::BaseBinaryEdge<3, Eigen::Matrix<double, 3, 1>, g2o::VertexSBAPointXYZ, g2o::VertexSE3Expmap>’:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:146:41:   required from here
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.h:59:80: warning: ‘Eigen::AlignedBit’ is deprecated [-Wdeprecated-declarations]
       typedef Eigen::Map<Matrix<double, Di, Dj>, Matrix<double, Di, Dj>::Flags & AlignedBit ? Aligned : Unaligned > HessianBlockType;
                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:360:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/util/Constants.h:166:37: note: declared here
 EIGEN_DEPRECATED const unsigned int AlignedBit = 0x80;
                                     ^~~~~~~~~~
In file included from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:38:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.h:60:80: warning: ‘Eigen::AlignedBit’ is deprecated [-Wdeprecated-declarations]
       typedef Eigen::Map<Matrix<double, Dj, Di>, Matrix<double, Dj, Di>::Flags & AlignedBit ? Aligned : Unaligned > HessianBlockTransposedType;
                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:360:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/util/Constants.h:166:37: note: declared here
 EIGEN_DEPRECATED const unsigned int AlignedBit = 0x80;
                                     ^~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, 3, 3>, 1, -1, false> >, 1> >, Eigen::internal::sub_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, 3, 3>, 1, -1, false> >, 1> >, Eigen::internal::sub_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, 1, false>; SrcXprType = Eigen::Product<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, 3, 3>, 1, -1, false> >, 1>; Functor = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, 1, false>; SrcXprType = Eigen::Product<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, 3, 3>, 1, -1, false> >, 1>; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, 1, false>; Src = Eigen::Product<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, 3, 3>, 1, -1, false> >, 1>; Func = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:405:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::subTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, 1, false>; Lhs = Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>; Rhs = Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, 3, 3>, 1, -1, false> >]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:178:42:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:396:68:   required from ‘static bool Eigen::internal::LLT_Traits<MatrixType, 1>::inplace_decomposition(MatrixType&) [with MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:443:42:   required from ‘Eigen::LLT<MatrixType, _UpLo>& Eigen::LLT<MatrixType, UpLo>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1]’
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:96:14:   required from ‘Eigen::LLT<MatrixType, UpLo>::LLT(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1]’
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:517:10:   required from ‘const Eigen::LLT<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::llt() const [with Derived = Eigen::Matrix<double, 3, 3>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, 3, 3>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.hpp:41:40:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 3; T = Eigen::Matrix<double, 3, 1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.cpp:56:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, -1, false>, Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, 1, -1, false> >, 1> >, Eigen::internal::sub_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, -1, false>, Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, 1, -1, false> >, 1> >, Eigen::internal::sub_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, 1, false>; SrcXprType = Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, -1, false>, Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, 1, -1, false> >, 1>; Functor = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, 1, false>; SrcXprType = Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, -1, false>, Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, 1, -1, false> >, 1>; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, 1, false>; Src = Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, -1, false>, Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, 1, -1, false> >, 1>; Func = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:405:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::subTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, 1, false>; Lhs = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, -1, false>; Rhs = Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, 1, -1, false> >]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:178:42:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:396:68:   required from ‘static bool Eigen::internal::LLT_Traits<MatrixType, 1>::inplace_decomposition(MatrixType&) [with MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:443:42:   required from ‘Eigen::LLT<MatrixType, _UpLo>& Eigen::LLT<MatrixType, UpLo>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1]’
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:96:14:   required from ‘Eigen::LLT<MatrixType, UpLo>::LLT(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1]’
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:517:10:   required from ‘const Eigen::LLT<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::llt() const [with Derived = Eigen::Matrix<double, 3, 3>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, 3, 3>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.hpp:41:40:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 3; T = Eigen::Matrix<double, 3, 1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.cpp:56:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h: In instantiation of ‘class g2o::BaseVertex<7, g2o::Sim3>’:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:48:35:   required from here
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:62:72: warning: ‘Eigen::AlignedBit’ is deprecated [-Wdeprecated-declarations]
     typedef Eigen::Map<Matrix<double, D, D>, Matrix<double,D,D>::Flags & AlignedBit ? Aligned : Unaligned >  HessianBlockType;
                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:360:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/util/Constants.h:166:37: note: declared here
 EIGEN_DEPRECATED const unsigned int AlignedBit = 0x80;
                                     ^~~~~~~~~~
In file included from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:35:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.h: In instantiation of ‘class g2o::BaseBinaryEdge<7, g2o::Sim3, g2o::VertexSim3Expmap, g2o::VertexSim3Expmap>’:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:99:27:   required from here
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.h:59:80: warning: ‘Eigen::AlignedBit’ is deprecated [-Wdeprecated-declarations]
       typedef Eigen::Map<Matrix<double, Di, Dj>, Matrix<double, Di, Dj>::Flags & AlignedBit ? Aligned : Unaligned > HessianBlockType;
                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:360:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/util/Constants.h:166:37: note: declared here
 EIGEN_DEPRECATED const unsigned int AlignedBit = 0x80;
                                     ^~~~~~~~~~
In file included from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:35:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.h:60:80: warning: ‘Eigen::AlignedBit’ is deprecated [-Wdeprecated-declarations]
       typedef Eigen::Map<Matrix<double, Dj, Di>, Matrix<double, Dj, Di>::Flags & AlignedBit ? Aligned : Unaligned > HessianBlockTransposedType;
                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:360:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/util/Constants.h:166:37: note: declared here
 EIGEN_DEPRECATED const unsigned int AlignedBit = 0x80;
                                     ^~~~~~~~~~
In file included from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:35:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.h: In instantiation of ‘class g2o::BaseBinaryEdge<2, Eigen::Matrix<double, 2, 1>, g2o::VertexSBAPointXYZ, g2o::VertexSim3Expmap>’:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:130:36:   required from here
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.h:59:80: warning: ‘Eigen::AlignedBit’ is deprecated [-Wdeprecated-declarations]
       typedef Eigen::Map<Matrix<double, Di, Dj>, Matrix<double, Di, Dj>::Flags & AlignedBit ? Aligned : Unaligned > HessianBlockType;
                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:360:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/util/Constants.h:166:37: note: declared here
 EIGEN_DEPRECATED const unsigned int AlignedBit = 0x80;
                                     ^~~~~~~~~~
In file included from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:35:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.h:60:80: warning: ‘Eigen::AlignedBit’ is deprecated [-Wdeprecated-declarations]
       typedef Eigen::Map<Matrix<double, Dj, Di>, Matrix<double, Dj, Di>::Flags & AlignedBit ? Aligned : Unaligned > HessianBlockTransposedType;
                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:360:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/util/Constants.h:166:37: note: declared here
 EIGEN_DEPRECATED const unsigned int AlignedBit = 0x80;
                                     ^~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>; SrcXprType = Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>; SrcXprType = Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>; Src = Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>; Src = Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:396:68:   required from ‘static bool Eigen::internal::LLT_Traits<MatrixType, 1>::inplace_decomposition(MatrixType&) [with MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:443:42:   required from ‘Eigen::LLT<MatrixType, _UpLo>& Eigen::LLT<MatrixType, UpLo>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1]’
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:96:14:   required from ‘Eigen::LLT<MatrixType, UpLo>::LLT(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1]’
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:517:10:   required from ‘const Eigen::LLT<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::llt() const [with Derived = Eigen::Matrix<double, 3, 3>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, 3, 3>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.hpp:41:40:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 3; T = Eigen::Matrix<double, 3, 1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.cpp:56:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::Matrix<double, 3, 3>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::Matrix<double, 3, 3>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::Matrix<double, 3, 3>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 3>; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:278:27:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3_ops.hpp:37:12:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::Matrix<double, 3, 1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::Matrix<double, 3, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::Matrix<double, 3, 1>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 1>; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:278:27:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3_ops.hpp:46:12:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 2, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 2, 1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 2, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 2, 1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 2, 1>; SrcXprType = Eigen::Matrix<double, 2, 1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 2, 1>; SrcXprType = Eigen::Matrix<double, 2, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 2, 1>; Src = Eigen::Matrix<double, 2, 1>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 2, 1>; Derived = Eigen::Matrix<double, 2, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:278:27:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = 2; int _Cols = 1; int _Options = 0; int _MaxRows = 2; int _MaxCols = 1]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3_ops.hpp:54:12:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 4, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 4, 1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 4, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 4, 1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 4, 1>; SrcXprType = Eigen::Matrix<double, 4, 1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 4, 1>; SrcXprType = Eigen::Matrix<double, 4, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 4, 1>; Src = Eigen::Matrix<double, 4, 1>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 4, 1>; Derived = Eigen::Matrix<double, 4, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:278:27:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = 4; int _Cols = 1; int _Options = 0; int _MaxRows = 4; int _MaxCols = 1]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3_ops.hpp:82:12:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::Matrix<double, 3, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::Matrix<double, 3, 1>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::Matrix<double, 3, 1>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::Matrix<double, 3, 1>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 1>; Derived = Eigen::Matrix<double, 3, 1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:106:29:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 7, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 7, 1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 7, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 7, 1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 7, 1>; SrcXprType = Eigen::Matrix<double, 7, 1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 7, 1>; SrcXprType = Eigen::Matrix<double, 7, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 7, 1>; Src = Eigen::Matrix<double, 7, 1>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 7, 1>; Derived = Eigen::Matrix<double, 7, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:278:27:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = 7; int _Cols = 1; int _Options = 0; int _MaxRows = 7; int _MaxCols = 1]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:147:16:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 1>; SrcXprType = Eigen::Matrix<double, 6, 1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 1>; SrcXprType = Eigen::Matrix<double, 6, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 6, 1>; Src = Eigen::Matrix<double, 6, 1>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 6, 1>; Derived = Eigen::Matrix<double, 6, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:278:27:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = 6; int _Cols = 1; int _Options = 0; int _MaxRows = 6; int _MaxCols = 1]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:163:16:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 6> >, Eigen::internal::evaluator<Eigen::Matrix<double, 6, 6> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 6> >, Eigen::internal::evaluator<Eigen::Matrix<double, 6, 6> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 6>; SrcXprType = Eigen::Matrix<double, 6, 6>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 6>; SrcXprType = Eigen::Matrix<double, 6, 6>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 6, 6>; Src = Eigen::Matrix<double, 6, 6>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 6, 6>; Derived = Eigen::Matrix<double, 6, 6>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:278:27:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = 6; int _Cols = 6; int _Options = 0; int _MaxRows = 6; int _MaxCols = 6]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:267:16:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 4, 4> >, Eigen::internal::evaluator<Eigen::Matrix<double, 4, 4> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 4, 4> >, Eigen::internal::evaluator<Eigen::Matrix<double, 4, 4> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 4, 4>; SrcXprType = Eigen::Matrix<double, 4, 4>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 4, 4>; SrcXprType = Eigen::Matrix<double, 4, 4>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 4, 4>; Src = Eigen::Matrix<double, 4, 4>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 4, 4>; Derived = Eigen::Matrix<double, 4, 4>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:278:27:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = 4; int _Cols = 4; int _Options = 0; int _MaxRows = 4; int _MaxCols = 4]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:277:16:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 4, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 1> > >, Eigen::internal::mul_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 4, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 1> > >, Eigen::internal::mul_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 4, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 1> >; Functor = Eigen::internal::mul_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 4, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 1> >; Functor = Eigen::internal::mul_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 4, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 1> >; Func = Eigen::internal::mul_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 4, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 1> >; Func = Eigen::internal::mul_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:21:28:   required from ‘Derived& Eigen::DenseBase<Derived>::operator*=(const Scalar&) [with Derived = Eigen::Matrix<double, 4, 1>; Eigen::DenseBase<Derived>::Scalar = double]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:282:27:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::Map<const Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::Map<const Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::Map<const Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::Map<const Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::Map<const Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::Map<const Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Map<const Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >; Derived = Eigen::Matrix<double, 3, 1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.h:55:20:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 12, 12, 0, 12, 12> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 12, 12, 0, 12, 12> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 12, 12, 0, 12, 12> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 12, 12, 0, 12, 12> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 12, 12, 0, 12, 12>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 12, 12, 0, 12, 12> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 12, 12, 0, 12, 12>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 12, 12, 0, 12, 12> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 12, 12, 0, 12, 12>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 12, 12, 0, 12, 12> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 12, 12, 0, 12, 12>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 12, 12, 0, 12, 12> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:396:68:   required from ‘static bool Eigen::internal::LLT_Traits<MatrixType, 1>::inplace_decomposition(MatrixType&) [with MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:443:42:   required from ‘Eigen::LLT<MatrixType, _UpLo>& Eigen::LLT<MatrixType, UpLo>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1]’
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:96:14:   required from ‘Eigen::LLT<MatrixType, UpLo>::LLT(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1]’
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:517:10:   required from ‘const Eigen::LLT<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::llt() const [with Derived = Eigen::Matrix<double, 3, 3>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, 3, 3>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.hpp:41:40:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 3; T = Eigen::Matrix<double, 3, 1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.cpp:56:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:537:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:379:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> >; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:120:22:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>; SrcXprType = Eigen::Matrix<double, 3, 3>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>; SrcXprType = Eigen::Matrix<double, 3, 3>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>; Src = Eigen::Matrix<double, 3, 3>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>; Src = Eigen::Matrix<double, 3, 3>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>; Src = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 3>; Derived = Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:263:30:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> >]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> >; Derived = Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:266:48:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 4, 4>, -1, -1, false> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 4, 4>, -1, -1, false> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 4, 4>, -1, -1, false>; SrcXprType = Eigen::Matrix<double, 3, 3>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 4, 4>, -1, -1, false>; SrcXprType = Eigen::Matrix<double, 3, 3>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, 4, 4>, -1, -1, false>; Src = Eigen::Matrix<double, 3, 3>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, 4, 4>, -1, -1, false>; Src = Eigen::Matrix<double, 3, 3>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Matrix<double, 4, 4>, -1, -1, false>; Src = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 3>; Derived = Eigen::Block<Eigen::Matrix<double, 4, 4>, -1, -1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:274:65:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 4, 4>, 4, 1, true>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 4, 4>, 4, 1, true>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 4, 4>, 4, 1, true>, -1, 1, false>; SrcXprType = Eigen::Matrix<double, 3, 1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 4, 4>, 4, 1, true>, -1, 1, false>; SrcXprType = Eigen::Matrix<double, 3, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 4, 4>, 4, 1, true>, -1, 1, false>; Src = Eigen::Matrix<double, 3, 1>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 4, 4>, 4, 1, true>, -1, 1, false>; Src = Eigen::Matrix<double, 3, 1>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 4, 4>, 4, 1, true>, -1, 1, false>; Src = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 1>; Derived = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 4, 4>, 4, 1, true>, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:275:57:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, true> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, true> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, true>; SrcXprType = Eigen::Matrix<double, 3, 1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, true>; SrcXprType = Eigen::Matrix<double, 3, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, true>; Src = Eigen::Matrix<double, 3, 1>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, true>; Src = Eigen::Matrix<double, 3, 1>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, true>; Src = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 1>; Derived = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, true>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:293:44:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::evaluator<Eigen::Map<const Eigen::Matrix<double, 6, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::evaluator<Eigen::Map<const Eigen::Matrix<double, 6, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 1>; SrcXprType = Eigen::Map<const Eigen::Matrix<double, 6, 1>, 0, Eigen::Stride<0, 0> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 1>; SrcXprType = Eigen::Map<const Eigen::Matrix<double, 6, 1>, 0, Eigen::Stride<0, 0> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 6, 1>; Src = Eigen::Map<const Eigen::Matrix<double, 6, 1>, 0, Eigen::Stride<0, 0> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Map<const Eigen::Matrix<double, 6, 1>, 0, Eigen::Stride<0, 0> >; Derived = Eigen::Matrix<double, 6, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:537:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Map<const Eigen::Matrix<double, 6, 1>, 0, Eigen::Stride<0, 0> >; Derived = Eigen::Matrix<double, 6, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:379:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Map<const Eigen::Matrix<double, 6, 1>, 0, Eigen::Stride<0, 0> >; _Scalar = double; int _Rows = 6; int _Cols = 1; int _Options = 0; int _MaxRows = 6; int _MaxCols = 1]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:75:36:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Matrix<double, 2, 3, 0, 2, 3> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Matrix<double, 2, 3, 0, 2, 3> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Matrix<double, 2, 3, 0, 2, 3>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Matrix<double, 2, 3, 0, 2, 3>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >; Src = Eigen::Matrix<double, 2, 3, 0, 2, 3>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:797:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 3, 0, 2, 3> >, const Eigen::Matrix<double, 2, 3, 0, 2, 3> >, Eigen::Matrix<double, 3, 3>, 0>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 3, 0, 2, 3> >, const Eigen::Matrix<double, 2, 3, 0, 2, 3> >, Eigen::Matrix<double, 3, 3>, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 3, 0, 2, 3> >, const Eigen::Matrix<double, 2, 3, 0, 2, 3> >, Eigen::Matrix<double, 3, 3>, 0>; Derived = Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:164:67:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:710:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> >; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:192:21:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0> > > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0> > > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0> > >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0> > >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0> > >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0> > >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:710:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0> > >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0> > >; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:194:74:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:710:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:250:52:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 4, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 1> > >, Eigen::internal::div_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 4, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 1> > >, Eigen::internal::div_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 4, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 1> >; Functor = Eigen::internal::div_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 4, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 1> >; Functor = Eigen::internal::div_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 4, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 1> >; Func = Eigen::internal::div_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 4, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 1> >; Func = Eigen::internal::div_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:45:28:   required from ‘Derived& Eigen::DenseBase<Derived>::operator/=(const Scalar&) [with Derived = Eigen::Matrix<double, 4, 1>; Eigen::DenseBase<Derived>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/Dot.h:147:15:   required from ‘void Eigen::MatrixBase<Derived>::normalize() [with Derived = Eigen::Matrix<double, 4, 1>]’
/usr/local/include/eigen3/Eigen/src/Geometry/Quaternion.h:124:47:   required from ‘void Eigen::QuaternionBase<Derived>::normalize() [with Derived = Eigen::Quaternion<double>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:284:22:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 2, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Matrix<double, 2, 1> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 2, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Matrix<double, 2, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 2, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Matrix<double, 2, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 2, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Matrix<double, 2, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 2, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Matrix<double, 2, 1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 2, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Matrix<double, 2, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, 2, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Matrix<double, 2, 1> >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:710:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Matrix<double, 2, 1> >; Derived = Eigen::Matrix<double, 2, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Matrix<double, 2, 1> >; _Scalar = double; int _Rows = 2; int _Cols = 1; int _Options = 0; int _MaxRows = 2; int _MaxCols = 1]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:128:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:710:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> >; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:160:69:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> > > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> > > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> > >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> > >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> > >; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:537:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> > >; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:379:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> > >; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Geometry/RotationBase.h:128:32:   required from ‘static Eigen::internal::rotation_base_generic_product_selector<RotationDerived, OtherVectorType, true>::ReturnType Eigen::internal::rotation_base_generic_product_selector<RotationDerived, OtherVectorType, true>::run(const RotationDerived&, const OtherVectorType&) [with RotationDerived = Eigen::Quaternion<double>; OtherVectorType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> > >; Eigen::internal::rotation_base_generic_product_selector<RotationDerived, OtherVectorType, true>::ReturnType = Eigen::Matrix<double, 3, 1>; typename RotationDerived::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Geometry/RotationBase.h:72:89:   required from ‘typename Eigen::internal::rotation_base_generic_product_selector<Derived, OtherDerived, OtherDerived:: IsVectorAtCompileTime>::ReturnType Eigen::RotationBase<Derived, _Dim>::operator*(const Eigen::EigenBase<OtherDerived>&) const [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> > >; Derived = Eigen::Quaternion<double>; int _Dim = 3; typename Eigen::internal::rotation_base_generic_product_selector<Derived, OtherDerived, OtherDerived:: IsVectorAtCompileTime>::ReturnType = Eigen::Matrix<double, 3, 1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:126:30:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::swap_assign_op<double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::swap_assign_op<double>, 1>’
/usr/local/include/eigen3/Eigen/src/Core/Swap.h:19:7:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::swap_assign_op<double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::Matrix<double, 3, 1>; Functor = Eigen::internal::swap_assign_op<double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::Matrix<double, 3, 1>; Functor = Eigen::internal::swap_assign_op<double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::Matrix<double, 3, 1>; Func = Eigen::internal::swap_assign_op<double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::Matrix<double, 3, 1>; Func = Eigen::internal::swap_assign_op<double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/DenseBase.h:429:22:   required from ‘void Eigen::DenseBase<Derived>::swap(Eigen::PlainObjectBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 1>; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:1013:5:   required from ‘static void Eigen::internal::matrix_swap_impl<MatrixTypeA, MatrixTypeB, SwapPointers>::run(MatrixTypeA&, MatrixTypeB&) [with MatrixTypeA = Eigen::Matrix<double, 3, 1>; MatrixTypeB = Eigen::Matrix<double, 3, 1>; bool SwapPointers = false]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:885:81:   required from ‘void Eigen::PlainObjectBase<Derived>::swap(Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 1>; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:283:7:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:126:30:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false>; SrcXprType = Eigen::Matrix<double, 3, 3>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false>; SrcXprType = Eigen::Matrix<double, 3, 3>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false>; Src = Eigen::Matrix<double, 3, 3>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false>; Src = Eigen::Matrix<double, 3, 3>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false>; Src = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 3>; Derived = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false>]’
/usr/local/include/eigen3/Eigen/src/Geometry/Transform.h:1030:12:   required from ‘Eigen::Transform<Scalar, Dim, Mode, Options>& Eigen::Transform<Scalar, Dim, Mode, _Options>::operator=(const Eigen::RotationBase<Derived, Dim>&) [with Derived = Eigen::Quaternion<double>; _Scalar = double; int _Dim = 3; int _Mode = 1; int _Options = 0]’
/usr/local/include/eigen3/Eigen/src/Geometry/Transform.h:282:11:   required from ‘Eigen::Transform<Scalar, Dim, Mode, _Options>::Transform(const Eigen::RotationBase<Derived, Dim>&) [with Derived = Eigen::Quaternion<double>; _Scalar = double; int _Dim = 3; int _Mode = 1; int _Options = 0]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:292:65:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::swap_assign_op<double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::swap_assign_op<double>, 1>’
/usr/local/include/eigen3/Eigen/src/Core/Swap.h:19:7:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::swap_assign_op<double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 1>; SrcXprType = Eigen::Matrix<double, 6, 1>; Functor = Eigen::internal::swap_assign_op<double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 1>; SrcXprType = Eigen::Matrix<double, 6, 1>; Functor = Eigen::internal::swap_assign_op<double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 6, 1>; Src = Eigen::Matrix<double, 6, 1>; Func = Eigen::internal::swap_assign_op<double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 6, 1>; Src = Eigen::Matrix<double, 6, 1>; Func = Eigen::internal::swap_assign_op<double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/DenseBase.h:429:22:   required from ‘void Eigen::DenseBase<Derived>::swap(Eigen::PlainObjectBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 6, 1>; Derived = Eigen::Matrix<double, 6, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:1013:5:   required from ‘static void Eigen::internal::matrix_swap_impl<MatrixTypeA, MatrixTypeB, SwapPointers>::run(MatrixTypeA&, MatrixTypeB&) [with MatrixTypeA = Eigen::Matrix<double, 6, 1>; MatrixTypeB = Eigen::Matrix<double, 6, 1>; bool SwapPointers = false]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:885:81:   required from ‘void Eigen::PlainObjectBase<Derived>::swap(Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 6, 1>; Derived = Eigen::Matrix<double, 6, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:283:7:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = 6; int _Cols = 1; int _Options = 0; int _MaxRows = 6; int _MaxCols = 1]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:98:25:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:710:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> >; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:327:20:   required from ‘Derived& Eigen::DenseBase<Derived>::setConstant(const Scalar&) [with Derived = Eigen::Matrix<double, 3, 3>; Eigen::DenseBase<Derived>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:317:14:   required from ‘void Eigen::DenseBase<Derived>::fill(const Scalar&) [with Derived = Eigen::Matrix<double, 3, 3>; Eigen::DenseBase<Derived>::Scalar = double]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3_ops.hpp:30:14:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:710:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:327:20:   required from ‘Derived& Eigen::DenseBase<Derived>::setConstant(const Scalar&) [with Derived = Eigen::Matrix<double, 3, 1>; Eigen::DenseBase<Derived>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:501:21:   required from ‘Derived& Eigen::DenseBase<Derived>::setZero() [with Derived = Eigen::Matrix<double, 3, 1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:55:20:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> > >, const Eigen::Matrix<double, 3, 1> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> > >, const Eigen::Matrix<double, 3, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> > >, const Eigen::Matrix<double, 3, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> > >, const Eigen::Matrix<double, 3, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> > >, const Eigen::Matrix<double, 3, 1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> > >, const Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:537:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> > >, const Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:379:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> > >, const Eigen::Matrix<double, 3, 1> >; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Geometry/Quaternion.h:480:53:   required from ‘Eigen::QuaternionBase<Derived>::Vector3 Eigen::QuaternionBase<Derived>::_transformVector(const Vector3&) const [with Derived = Eigen::Quaternion<double>; Eigen::QuaternionBase<Derived>::Vector3 = Eigen::Matrix<double, 3, 1>; typename Eigen::internal::traits<T>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Geometry/RotationBase.h:128:32:   required from ‘static Eigen::internal::rotation_base_generic_product_selector<RotationDerived, OtherVectorType, true>::ReturnType Eigen::internal::rotation_base_generic_product_selector<RotationDerived, OtherVectorType, true>::run(const RotationDerived&, const OtherVectorType&) [with RotationDerived = Eigen::Quaternion<double>; OtherVectorType = Eigen::Matrix<double, 3, 1>; Eigen::internal::rotation_base_generic_product_selector<RotationDerived, OtherVectorType, true>::ReturnType = Eigen::Matrix<double, 3, 1>; typename RotationDerived::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Geometry/RotationBase.h:72:89:   required from ‘typename Eigen::internal::rotation_base_generic_product_selector<Derived, OtherDerived, OtherDerived:: IsVectorAtCompileTime>::ReturnType Eigen::RotationBase<Derived, _Dim>::operator*(const Eigen::EigenBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<double, 3, 1>; Derived = Eigen::Quaternion<double>; int _Dim = 3; typename Eigen::internal::rotation_base_generic_product_selector<Derived, OtherDerived, OtherDerived:: IsVectorAtCompileTime>::ReturnType = Eigen::Matrix<double, 3, 1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:106:29:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 1>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:391:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, 3, 3>; Lhs = Eigen::Matrix<double, 3, 3>; Rhs = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:148:43:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<double, 3, 3>; Lhs = Eigen::Matrix<double, 3, 3>; Rhs = Eigen::Matrix<double, 3, 3>; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0>; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:537:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0>; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:379:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0>; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:246:35:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 1>, 1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 1>, 1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 1>, 1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 1>, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 1>, 1>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:391:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, 3, 1>; Lhs = Eigen::Matrix<double, 3, 3>; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:148:43:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<double, 3, 1>; Lhs = Eigen::Matrix<double, 3, 3>; Rhs = Eigen::Matrix<double, 3, 1>; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 1>, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 1>, 0>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 1>, 0>; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:537:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 1>, 0>; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:379:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 1>, 0>; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:256:48:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, true>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, true>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, true>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, true>]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:327:20:   required from ‘Derived& Eigen::DenseBase<Derived>::setConstant(const Scalar&) [with Derived = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, true>; Eigen::DenseBase<Derived>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:501:21:   required from ‘Derived& Eigen::DenseBase<Derived>::setZero() [with Derived = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, true>]’
/usr/local/include/eigen3/Eigen/src/Geometry/Transform.h:1031:3:   required from ‘Eigen::Transform<Scalar, Dim, Mode, Options>& Eigen::Transform<Scalar, Dim, Mode, _Options>::operator=(const Eigen::RotationBase<Derived, Dim>&) [with Derived = Eigen::Quaternion<double>; _Scalar = double; int _Dim = 3; int _Mode = 1; int _Options = 0]’
/usr/local/include/eigen3/Eigen/src/Geometry/Transform.h:282:11:   required from ‘Eigen::Transform<Scalar, Dim, Mode, _Options>::Transform(const Eigen::RotationBase<Derived, Dim>&) [with Derived = Eigen::Quaternion<double>; _Scalar = double; int _Dim = 3; int _Mode = 1; int _Options = 0]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:292:65:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 4, 4> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 4> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 4, 4> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 4> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 4, 4>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 4> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 4, 4>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 4> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 4, 4>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 4> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 4, 4>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 4> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 4> >; _Scalar = double; int _Rows = 4; int _Cols = 4; int _Options = 0; int _MaxRows = 4; int _MaxCols = 4]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:327:20:   required from ‘Derived& Eigen::DenseBase<Derived>::setConstant(const Scalar&) [with Derived = Eigen::Matrix<double, 4, 4>; Eigen::DenseBase<Derived>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:501:21:   required from ‘Derived& Eigen::DenseBase<Derived>::setZero() [with Derived = Eigen::Matrix<double, 4, 4>]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:757:5:   required from ‘static Derived& Eigen::internal::setIdentity_impl<Derived, true>::run(Derived&) [with Derived = Eigen::Matrix<double, 4, 4>]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:776:50:   required from ‘Derived& Eigen::MatrixBase<Derived>::setIdentity() [with Derived = Eigen::Matrix<double, 4, 4>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:273:40:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:217:29:   required from ‘static void Eigen::internal::assignment_from_xpr_op_product<DstXprType, OtherXpr, ProductType, Func1, Func2>::run(DstXprType&, const SrcXprType&, const InitialFunc&) [with SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0> >; InitialFunc = Eigen::internal::assign_op<double, double>; DstXprType = Eigen::Matrix<double, 3, 3>; OtherXpr = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >; ProductType = Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0>; Func1 = Eigen::internal::assign_op<double, double>; Func2 = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0> >; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0> >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:710:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0> >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0> >; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:240:58:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 4, 4>, 1, 3, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, 3> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 4, 4>, 1, 3, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, 3> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 4, 4>, 1, 3, false>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, 3> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 4, 4>, 1, 3, false>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, 3> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, 4, 4>, 1, 3, false>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, 3> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, 4, 4>, 1, 3, false>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, 3> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:501:21:   required from ‘Derived& Eigen::DenseBase<Derived>::setZero() [with Derived = Eigen::Block<Eigen::Matrix<double, 4, 4>, 1, 3, false>]’
/usr/local/include/eigen3/Eigen/src/Geometry/Transform.h:1149:5:   required from ‘static void Eigen::internal::transform_make_affine<Mode>::run(MatrixType&) [with MatrixType = Eigen::Matrix<double, 4, 4>; int Mode = 1]’
/usr/local/include/eigen3/Eigen/src/Geometry/Transform.h:654:52:   required from ‘void Eigen::Transform<Scalar, Dim, Mode, _Options>::makeAffine() [with _Scalar = double; int _Dim = 3; int _Mode = 1; int _Options = 0]’
/usr/local/include/eigen3/Eigen/src/Geometry/Transform.h:1032:13:   required from ‘Eigen::Transform<Scalar, Dim, Mode, Options>& Eigen::Transform<Scalar, Dim, Mode, _Options>::operator=(const Eigen::RotationBase<Derived, Dim>&) [with Derived = Eigen::Quaternion<double>; _Scalar = double; int _Dim = 3; int _Mode = 1; int _Options = 0]’
/usr/local/include/eigen3/Eigen/src/Geometry/Transform.h:282:11:   required from ‘Eigen::Transform<Scalar, Dim, Mode, _Options>::Transform(const Eigen::RotationBase<Derived, Dim>&) [with Derived = Eigen::Quaternion<double>; _Scalar = double; int _Dim = 3; int _Mode = 1; int _Options = 0]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:292:65:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::Matrix<double, 3, 3>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::Matrix<double, 3, 3>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::Matrix<double, 3, 3>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 3>; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:278:27:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3_ops.hpp:37:12:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 2, 3, 0, 2, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 3, 0, 2, 3> >, const Eigen::Matrix<double, 2, 3, 0, 2, 3> >, Eigen::Matrix<double, 3, 3>, 1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 2, 3, 0, 2, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 3, 0, 2, 3> >, const Eigen::Matrix<double, 2, 3, 0, 2, 3> >, Eigen::Matrix<double, 3, 3>, 1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 2, 3, 0, 2, 3>; SrcXprType = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 3, 0, 2, 3> >, const Eigen::Matrix<double, 2, 3, 0, 2, 3> >, Eigen::Matrix<double, 3, 3>, 1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 2, 3, 0, 2, 3>; SrcXprType = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 3, 0, 2, 3> >, const Eigen::Matrix<double, 2, 3, 0, 2, 3> >, Eigen::Matrix<double, 3, 3>, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 2, 3, 0, 2, 3>; Src = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 3, 0, 2, 3> >, const Eigen::Matrix<double, 2, 3, 0, 2, 3> >, Eigen::Matrix<double, 3, 3>, 1>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:391:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, 2, 3, 0, 2, 3>; Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 3, 0, 2, 3> >, const Eigen::Matrix<double, 2, 3, 0, 2, 3> >; Rhs = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:148:43:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 3, 0, 2, 3> >, const Eigen::Matrix<double, 2, 3, 0, 2, 3> >, Eigen::Matrix<double, 3, 3>, 0>; OtherDerived = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 3, 0, 2, 3> >, const Eigen::Matrix<double, 2, 3, 0, 2, 3> >, Eigen::Matrix<double, 3, 3>, 0>; Derived = Eigen::Matrix<double, 2, 3, 0, 2, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 3, 0, 2, 3> >, const Eigen::Matrix<double, 2, 3, 0, 2, 3> >, Eigen::Matrix<double, 3, 3>, 0>; _Scalar = double; int _Rows = 2; int _Cols = 3; int _Options = 0; int _MaxRows = 2; int _MaxCols = 3]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 3, 0, 2, 3> >, const Eigen::Matrix<double, 2, 3, 0, 2, 3> >, Eigen::Matrix<double, 3, 3>, 0>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 3, 0, 2, 3> >, const Eigen::Matrix<double, 2, 3, 0, 2, 3> >, Eigen::Matrix<double, 3, 3>, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 3, 0, 2, 3> >, const Eigen::Matrix<double, 2, 3, 0, 2, 3> >, Eigen::Matrix<double, 3, 3>, 0>; Derived = Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:164:67:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::Matrix<double, 3, 1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::Matrix<double, 3, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::Matrix<double, 3, 1>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 1>; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:278:27:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3_ops.hpp:46:12:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 2, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 2, 1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 2, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 2, 1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 2, 1>; SrcXprType = Eigen::Matrix<double, 2, 1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 2, 1>; SrcXprType = Eigen::Matrix<double, 2, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 2, 1>; Src = Eigen::Matrix<double, 2, 1>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 2, 1>; Derived = Eigen::Matrix<double, 2, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:278:27:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = 2; int _Cols = 1; int _Options = 0; int _MaxRows = 2; int _MaxCols = 1]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3_ops.hpp:54:12:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 4, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 4, 1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 4, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 4, 1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 4, 1>; SrcXprType = Eigen::Matrix<double, 4, 1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 4, 1>; SrcXprType = Eigen::Matrix<double, 4, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 4, 1>; Src = Eigen::Matrix<double, 4, 1>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 4, 1>; Derived = Eigen::Matrix<double, 4, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:278:27:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = 4; int _Cols = 1; int _Options = 0; int _MaxRows = 4; int _MaxCols = 1]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3_ops.hpp:82:12:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::Matrix<double, 3, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::Matrix<double, 3, 1>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::Matrix<double, 3, 1>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::Matrix<double, 3, 1>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 1>; Derived = Eigen::Matrix<double, 3, 1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:106:29:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 7, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 7, 1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 7, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 7, 1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 7, 1>; SrcXprType = Eigen::Matrix<double, 7, 1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 7, 1>; SrcXprType = Eigen::Matrix<double, 7, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 7, 1>; Src = Eigen::Matrix<double, 7, 1>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 7, 1>; Derived = Eigen::Matrix<double, 7, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:278:27:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = 7; int _Cols = 1; int _Options = 0; int _MaxRows = 7; int _MaxCols = 1]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:147:16:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 1>; SrcXprType = Eigen::Matrix<double, 6, 1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 1>; SrcXprType = Eigen::Matrix<double, 6, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 6, 1>; Src = Eigen::Matrix<double, 6, 1>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 6, 1>; Derived = Eigen::Matrix<double, 6, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:278:27:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = 6; int _Cols = 1; int _Options = 0; int _MaxRows = 6; int _MaxCols = 1]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:163:16:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 6> >, Eigen::internal::evaluator<Eigen::Matrix<double, 6, 6> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 6> >, Eigen::internal::evaluator<Eigen::Matrix<double, 6, 6> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 6>; SrcXprType = Eigen::Matrix<double, 6, 6>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 6>; SrcXprType = Eigen::Matrix<double, 6, 6>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 6, 6>; Src = Eigen::Matrix<double, 6, 6>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 6, 6>; Derived = Eigen::Matrix<double, 6, 6>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:278:27:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = 6; int _Cols = 6; int _Options = 0; int _MaxRows = 6; int _MaxCols = 6]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:267:16:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 4, 4> >, Eigen::internal::evaluator<Eigen::Matrix<double, 4, 4> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 4, 4> >, Eigen::internal::evaluator<Eigen::Matrix<double, 4, 4> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 4, 4>; SrcXprType = Eigen::Matrix<double, 4, 4>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 4, 4>; SrcXprType = Eigen::Matrix<double, 4, 4>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 4, 4>; Src = Eigen::Matrix<double, 4, 4>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 4, 4>; Derived = Eigen::Matrix<double, 4, 4>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:278:27:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = 4; int _Cols = 4; int _Options = 0; int _MaxRows = 4; int _MaxCols = 4]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:277:16:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 4, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 1> > >, Eigen::internal::mul_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 4, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 1> > >, Eigen::internal::mul_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 4, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 1> >; Functor = Eigen::internal::mul_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 4, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 1> >; Functor = Eigen::internal::mul_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 4, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 1> >; Func = Eigen::internal::mul_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 4, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 1> >; Func = Eigen::internal::mul_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:21:28:   required from ‘Derived& Eigen::DenseBase<Derived>::operator*=(const Scalar&) [with Derived = Eigen::Matrix<double, 4, 1>; Eigen::DenseBase<Derived>::Scalar = double]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:282:27:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::Map<const Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::Map<const Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::Map<const Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::Map<const Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::Map<const Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::Map<const Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Map<const Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >; Derived = Eigen::Matrix<double, 3, 1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.h:55:20:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 1> >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 1> >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 1>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 1>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:398:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::addTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, 3, 3>; Lhs = Eigen::Matrix<double, 3, 3>; Rhs = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:163:42:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0> >; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0> >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:710:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0> >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0> >; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:240:58:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:537:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:379:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> >; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:120:22:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 3>, 1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 3>, 1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 3>, 1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 3>, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 3>, 1>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:391:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, 3, 3>; Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >; Rhs = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:124:75:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0> > >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0> > >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0> > >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:710:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0> > >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0> > >; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:194:74:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>; SrcXprType = Eigen::Matrix<double, 3, 3>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>; SrcXprType = Eigen::Matrix<double, 3, 3>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>; Src = Eigen::Matrix<double, 3, 3>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>; Src = Eigen::Matrix<double, 3, 3>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>; Src = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 3>; Derived = Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:263:30:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> >]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> >; Derived = Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:266:48:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 4, 4>, -1, -1, false> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 4, 4>, -1, -1, false> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 4, 4>, -1, -1, false>; SrcXprType = Eigen::Matrix<double, 3, 3>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 4, 4>, -1, -1, false>; SrcXprType = Eigen::Matrix<double, 3, 3>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, 4, 4>, -1, -1, false>; Src = Eigen::Matrix<double, 3, 3>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, 4, 4>, -1, -1, false>; Src = Eigen::Matrix<double, 3, 3>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Matrix<double, 4, 4>, -1, -1, false>; Src = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 3>; Derived = Eigen::Block<Eigen::Matrix<double, 4, 4>, -1, -1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:274:65:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 4, 4>, 4, 1, true>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 4, 4>, 4, 1, true>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 4, 4>, 4, 1, true>, -1, 1, false>; SrcXprType = Eigen::Matrix<double, 3, 1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 4, 4>, 4, 1, true>, -1, 1, false>; SrcXprType = Eigen::Matrix<double, 3, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 4, 4>, 4, 1, true>, -1, 1, false>; Src = Eigen::Matrix<double, 3, 1>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 4, 4>, 4, 1, true>, -1, 1, false>; Src = Eigen::Matrix<double, 3, 1>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 4, 4>, 4, 1, true>, -1, 1, false>; Src = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 1>; Derived = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 4, 4>, 4, 1, true>, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:275:57:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, true> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, true> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, true>; SrcXprType = Eigen::Matrix<double, 3, 1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, true>; SrcXprType = Eigen::Matrix<double, 3, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, true>; Src = Eigen::Matrix<double, 3, 1>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, true>; Src = Eigen::Matrix<double, 3, 1>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, true>; Src = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 1>; Derived = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, true>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:293:44:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::evaluator<Eigen::Map<const Eigen::Matrix<double, 6, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::evaluator<Eigen::Map<const Eigen::Matrix<double, 6, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 1>; SrcXprType = Eigen::Map<const Eigen::Matrix<double, 6, 1>, 0, Eigen::Stride<0, 0> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 1>; SrcXprType = Eigen::Map<const Eigen::Matrix<double, 6, 1>, 0, Eigen::Stride<0, 0> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 6, 1>; Src = Eigen::Map<const Eigen::Matrix<double, 6, 1>, 0, Eigen::Stride<0, 0> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Map<const Eigen::Matrix<double, 6, 1>, 0, Eigen::Stride<0, 0> >; Derived = Eigen::Matrix<double, 6, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:537:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Map<const Eigen::Matrix<double, 6, 1>, 0, Eigen::Stride<0, 0> >; Derived = Eigen::Matrix<double, 6, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:379:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Map<const Eigen::Matrix<double, 6, 1>, 0, Eigen::Stride<0, 0> >; _Scalar = double; int _Rows = 6; int _Cols = 1; int _Options = 0; int _MaxRows = 6; int _MaxCols = 1]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:75:36:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:537:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:379:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/sim3.h:140:43:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:537:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:379:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> >; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/sim3.h:145:26:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:537:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:379:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/sim3.h:166:39:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 3>, 0> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 3>, 0> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 3>, 0> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 3>, 0> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 3>, 0> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 3>, 0> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:537:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 3>, 0> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:379:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 3>, 0> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/sim3.h:215:48:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 7, 1> >, Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 7, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 7, 1> >, Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 7, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 7, 1>; SrcXprType = Eigen::Map<Eigen::Matrix<double, 7, 1>, 0, Eigen::Stride<0, 0> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 7, 1>; SrcXprType = Eigen::Map<Eigen::Matrix<double, 7, 1>, 0, Eigen::Stride<0, 0> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 7, 1>; Src = Eigen::Map<Eigen::Matrix<double, 7, 1>, 0, Eigen::Stride<0, 0> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Map<Eigen::Matrix<double, 7, 1>, 0, Eigen::Stride<0, 0> >; Derived = Eigen::Matrix<double, 7, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:537:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Map<Eigen::Matrix<double, 7, 1>, 0, Eigen::Stride<0, 0> >; Derived = Eigen::Matrix<double, 7, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:379:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Map<Eigen::Matrix<double, 7, 1>, 0, Eigen::Stride<0, 0> >; _Scalar = double; int _Rows = 7; int _Cols = 1; int _Options = 0; int _MaxRows = 7; int _MaxCols = 1]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:67:20:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:710:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> >; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:192:21:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0> > > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0> > > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0> > >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0> > >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0> > >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0> > >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:710:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0> > >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0> > >; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:194:74:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:710:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:250:52:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 4, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 1> > >, Eigen::internal::div_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 4, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 1> > >, Eigen::internal::div_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 4, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 1> >; Functor = Eigen::internal::div_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 4, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 1> >; Functor = Eigen::internal::div_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 4, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 1> >; Func = Eigen::internal::div_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 4, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 1> >; Func = Eigen::internal::div_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:45:28:   required from ‘Derived& Eigen::DenseBase<Derived>::operator/=(const Scalar&) [with Derived = Eigen::Matrix<double, 4, 1>; Eigen::DenseBase<Derived>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/Dot.h:147:15:   required from ‘void Eigen::MatrixBase<Derived>::normalize() [with Derived = Eigen::Matrix<double, 4, 1>]’
/usr/local/include/eigen3/Eigen/src/Geometry/Quaternion.h:124:47:   required from ‘void Eigen::QuaternionBase<Derived>::normalize() [with Derived = Eigen::Quaternion<double>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:284:22:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 2, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Matrix<double, 2, 1> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 2, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Matrix<double, 2, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 2, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Matrix<double, 2, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 2, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Matrix<double, 2, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 2, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Matrix<double, 2, 1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 2, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Matrix<double, 2, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, 2, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Matrix<double, 2, 1> >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:710:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Matrix<double, 2, 1> >; Derived = Eigen::Matrix<double, 2, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Matrix<double, 2, 1> >; _Scalar = double; int _Rows = 2; int _Cols = 1; int _Options = 0; int _MaxRows = 2; int _MaxCols = 1]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:128:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:710:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> >; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:160:69:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 3>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 3>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 3>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 3>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 3>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 3>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 3>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:710:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 3>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 3>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/sim3.h:106:74:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 3>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 3>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 3>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 3>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 3>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 3>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 3>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:710:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 3>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 3>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/sim3.h:117:34:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> > > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> > > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> > >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> > >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> > >; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:537:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> > >; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:379:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> > >; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Geometry/RotationBase.h:128:32:   required from ‘static Eigen::internal::rotation_base_generic_product_selector<RotationDerived, OtherVectorType, true>::ReturnType Eigen::internal::rotation_base_generic_product_selector<RotationDerived, OtherVectorType, true>::run(const RotationDerived&, const OtherVectorType&) [with RotationDerived = Eigen::Quaternion<double>; OtherVectorType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> > >; Eigen::internal::rotation_base_generic_product_selector<RotationDerived, OtherVectorType, true>::ReturnType = Eigen::Matrix<double, 3, 1>; typename RotationDerived::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Geometry/RotationBase.h:72:89:   required from ‘typename Eigen::internal::rotation_base_generic_product_selector<Derived, OtherDerived, OtherDerived:: IsVectorAtCompileTime>::ReturnType Eigen::RotationBase<Derived, _Dim>::operator*(const Eigen::EigenBase<OtherDerived>&) const [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> > >; Derived = Eigen::Quaternion<double>; int _Dim = 3; typename Eigen::internal::rotation_base_generic_product_selector<Derived, OtherDerived, OtherDerived:: IsVectorAtCompileTime>::ReturnType = Eigen::Matrix<double, 3, 1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:126:30:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::swap_assign_op<double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::swap_assign_op<double>, 1>’
/usr/local/include/eigen3/Eigen/src/Core/Swap.h:19:7:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::swap_assign_op<double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::Matrix<double, 3, 1>; Functor = Eigen::internal::swap_assign_op<double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::Matrix<double, 3, 1>; Functor = Eigen::internal::swap_assign_op<double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::Matrix<double, 3, 1>; Func = Eigen::internal::swap_assign_op<double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::Matrix<double, 3, 1>; Func = Eigen::internal::swap_assign_op<double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/DenseBase.h:429:22:   required from ‘void Eigen::DenseBase<Derived>::swap(Eigen::PlainObjectBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 1>; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:1013:5:   required from ‘static void Eigen::internal::matrix_swap_impl<MatrixTypeA, MatrixTypeB, SwapPointers>::run(MatrixTypeA&, MatrixTypeB&) [with MatrixTypeA = Eigen::Matrix<double, 3, 1>; MatrixTypeB = Eigen::Matrix<double, 3, 1>; bool SwapPointers = false]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:885:81:   required from ‘void Eigen::PlainObjectBase<Derived>::swap(Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 1>; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:283:7:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:126:30:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false>; SrcXprType = Eigen::Matrix<double, 3, 3>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false>; SrcXprType = Eigen::Matrix<double, 3, 3>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false>; Src = Eigen::Matrix<double, 3, 3>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false>; Src = Eigen::Matrix<double, 3, 3>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false>; Src = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 3>; Derived = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false>]’
/usr/local/include/eigen3/Eigen/src/Geometry/Transform.h:1030:12:   required from ‘Eigen::Transform<Scalar, Dim, Mode, Options>& Eigen::Transform<Scalar, Dim, Mode, _Options>::operator=(const Eigen::RotationBase<Derived, Dim>&) [with Derived = Eigen::Quaternion<double>; _Scalar = double; int _Dim = 3; int _Mode = 1; int _Options = 0]’
/usr/local/include/eigen3/Eigen/src/Geometry/Transform.h:282:11:   required from ‘Eigen::Transform<Scalar, Dim, Mode, _Options>::Transform(const Eigen::RotationBase<Derived, Dim>&) [with Derived = Eigen::Quaternion<double>; _Scalar = double; int _Dim = 3; int _Mode = 1; int _Options = 0]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:292:65:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::swap_assign_op<double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::swap_assign_op<double>, 1>’
/usr/local/include/eigen3/Eigen/src/Core/Swap.h:19:7:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::swap_assign_op<double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 1>; SrcXprType = Eigen::Matrix<double, 6, 1>; Functor = Eigen::internal::swap_assign_op<double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 1>; SrcXprType = Eigen::Matrix<double, 6, 1>; Functor = Eigen::internal::swap_assign_op<double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 6, 1>; Src = Eigen::Matrix<double, 6, 1>; Func = Eigen::internal::swap_assign_op<double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 6, 1>; Src = Eigen::Matrix<double, 6, 1>; Func = Eigen::internal::swap_assign_op<double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/DenseBase.h:429:22:   required from ‘void Eigen::DenseBase<Derived>::swap(Eigen::PlainObjectBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 6, 1>; Derived = Eigen::Matrix<double, 6, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:1013:5:   required from ‘static void Eigen::internal::matrix_swap_impl<MatrixTypeA, MatrixTypeB, SwapPointers>::run(MatrixTypeA&, MatrixTypeB&) [with MatrixTypeA = Eigen::Matrix<double, 6, 1>; MatrixTypeB = Eigen::Matrix<double, 6, 1>; bool SwapPointers = false]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:885:81:   required from ‘void Eigen::PlainObjectBase<Derived>::swap(Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 6, 1>; Derived = Eigen::Matrix<double, 6, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:283:7:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = 6; int _Cols = 1; int _Options = 0; int _MaxRows = 6; int _MaxCols = 1]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:98:25:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::swap_assign_op<double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::swap_assign_op<double>, 1>’
/usr/local/include/eigen3/Eigen/src/Core/Swap.h:19:7:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::swap_assign_op<double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::Matrix<double, 3, 3>; Functor = Eigen::internal::swap_assign_op<double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::Matrix<double, 3, 3>; Functor = Eigen::internal::swap_assign_op<double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::Matrix<double, 3, 3>; Func = Eigen::internal::swap_assign_op<double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::Matrix<double, 3, 3>; Func = Eigen::internal::swap_assign_op<double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/DenseBase.h:429:22:   required from ‘void Eigen::DenseBase<Derived>::swap(Eigen::PlainObjectBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 3>; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:1013:5:   required from ‘static void Eigen::internal::matrix_swap_impl<MatrixTypeA, MatrixTypeB, SwapPointers>::run(MatrixTypeA&, MatrixTypeB&) [with MatrixTypeA = Eigen::Matrix<double, 3, 3>; MatrixTypeB = Eigen::Matrix<double, 3, 3>; bool SwapPointers = false]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:885:81:   required from ‘void Eigen::PlainObjectBase<Derived>::swap(Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 3>; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:283:7:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/sim3.h:175:29:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 7, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 7, 1> >, Eigen::internal::swap_assign_op<double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 7, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 7, 1> >, Eigen::internal::swap_assign_op<double>, 1>’
/usr/local/include/eigen3/Eigen/src/Core/Swap.h:19:7:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 7, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 7, 1> >, Eigen::internal::swap_assign_op<double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 7, 1>; SrcXprType = Eigen::Matrix<double, 7, 1>; Functor = Eigen::internal::swap_assign_op<double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 7, 1>; SrcXprType = Eigen::Matrix<double, 7, 1>; Functor = Eigen::internal::swap_assign_op<double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 7, 1>; Src = Eigen::Matrix<double, 7, 1>; Func = Eigen::internal::swap_assign_op<double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 7, 1>; Src = Eigen::Matrix<double, 7, 1>; Func = Eigen::internal::swap_assign_op<double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/DenseBase.h:429:22:   required from ‘void Eigen::DenseBase<Derived>::swap(Eigen::PlainObjectBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 7, 1>; Derived = Eigen::Matrix<double, 7, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:1013:5:   required from ‘static void Eigen::internal::matrix_swap_impl<MatrixTypeA, MatrixTypeB, SwapPointers>::run(MatrixTypeA&, MatrixTypeB&) [with MatrixTypeA = Eigen::Matrix<double, 7, 1>; MatrixTypeB = Eigen::Matrix<double, 7, 1>; bool SwapPointers = false]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:885:81:   required from ‘void Eigen::PlainObjectBase<Derived>::swap(Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 7, 1>; Derived = Eigen::Matrix<double, 7, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:283:7:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = 7; int _Cols = 1; int _Options = 0; int _MaxRows = 7; int _MaxCols = 1]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:113:27:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:710:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> >; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:327:20:   required from ‘Derived& Eigen::DenseBase<Derived>::setConstant(const Scalar&) [with Derived = Eigen::Matrix<double, 3, 3>; Eigen::DenseBase<Derived>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:317:14:   required from ‘void Eigen::DenseBase<Derived>::fill(const Scalar&) [with Derived = Eigen::Matrix<double, 3, 3>; Eigen::DenseBase<Derived>::Scalar = double]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3_ops.hpp:30:14:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:710:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:327:20:   required from ‘Derived& Eigen::DenseBase<Derived>::setConstant(const Scalar&) [with Derived = Eigen::Matrix<double, 3, 1>; Eigen::DenseBase<Derived>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:501:21:   required from ‘Derived& Eigen::DenseBase<Derived>::setZero() [with Derived = Eigen::Matrix<double, 3, 1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:55:20:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> > >, const Eigen::Matrix<double, 3, 1> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> > >, const Eigen::Matrix<double, 3, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> > >, const Eigen::Matrix<double, 3, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> > >, const Eigen::Matrix<double, 3, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> > >, const Eigen::Matrix<double, 3, 1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> > >, const Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:537:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> > >, const Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:379:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> > >, const Eigen::Matrix<double, 3, 1> >; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Geometry/Quaternion.h:480:53:   required from ‘Eigen::QuaternionBase<Derived>::Vector3 Eigen::QuaternionBase<Derived>::_transformVector(const Vector3&) const [with Derived = Eigen::Quaternion<double>; Eigen::QuaternionBase<Derived>::Vector3 = Eigen::Matrix<double, 3, 1>; typename Eigen::internal::traits<T>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Geometry/RotationBase.h:128:32:   required from ‘static Eigen::internal::rotation_base_generic_product_selector<RotationDerived, OtherVectorType, true>::ReturnType Eigen::internal::rotation_base_generic_product_selector<RotationDerived, OtherVectorType, true>::run(const RotationDerived&, const OtherVectorType&) [with RotationDerived = Eigen::Quaternion<double>; OtherVectorType = Eigen::Matrix<double, 3, 1>; Eigen::internal::rotation_base_generic_product_selector<RotationDerived, OtherVectorType, true>::ReturnType = Eigen::Matrix<double, 3, 1>; typename RotationDerived::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Geometry/RotationBase.h:72:89:   required from ‘typename Eigen::internal::rotation_base_generic_product_selector<Derived, OtherDerived, OtherDerived:: IsVectorAtCompileTime>::ReturnType Eigen::RotationBase<Derived, _Dim>::operator*(const Eigen::EigenBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<double, 3, 1>; Derived = Eigen::Quaternion<double>; int _Dim = 3; typename Eigen::internal::rotation_base_generic_product_selector<Derived, OtherDerived, OtherDerived:: IsVectorAtCompileTime>::ReturnType = Eigen::Matrix<double, 3, 1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:106:29:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 1>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:391:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, 3, 3>; Lhs = Eigen::Matrix<double, 3, 3>; Rhs = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:148:43:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<double, 3, 3>; Lhs = Eigen::Matrix<double, 3, 3>; Rhs = Eigen::Matrix<double, 3, 3>; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0>; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:537:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0>; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:379:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0>; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:246:35:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 1>, 1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 1>, 1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 1>, 1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 1>, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 1>, 1>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:391:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, 3, 1>; Lhs = Eigen::Matrix<double, 3, 3>; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:148:43:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<double, 3, 1>; Lhs = Eigen::Matrix<double, 3, 3>; Rhs = Eigen::Matrix<double, 3, 1>; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 1>, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 1>, 0>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 1>, 0>; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:537:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 1>, 0>; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:379:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 1>, 0>; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:256:48:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
[  4%] Building CXX object Thirdparty/g2o/CMakeFiles/g2o.dir/g2o/core/hyper_graph_action.cpp.o
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, true>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, true>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, true>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, true>]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:327:20:   required from ‘Derived& Eigen::DenseBase<Derived>::setConstant(const Scalar&) [with Derived = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, true>; Eigen::DenseBase<Derived>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:501:21:   required from ‘Derived& Eigen::DenseBase<Derived>::setZero() [with Derived = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, true>]’
/usr/local/include/eigen3/Eigen/src/Geometry/Transform.h:1031:3:   required from ‘Eigen::Transform<Scalar, Dim, Mode, Options>& Eigen::Transform<Scalar, Dim, Mode, _Options>::operator=(const Eigen::RotationBase<Derived, Dim>&) [with Derived = Eigen::Quaternion<double>; _Scalar = double; int _Dim = 3; int _Mode = 1; int _Options = 0]’
/usr/local/include/eigen3/Eigen/src/Geometry/Transform.h:282:11:   required from ‘Eigen::Transform<Scalar, Dim, Mode, _Options>::Transform(const Eigen::RotationBase<Derived, Dim>&) [with Derived = Eigen::Quaternion<double>; _Scalar = double; int _Dim = 3; int _Mode = 1; int _Options = 0]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:292:65:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 4, 4> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 4> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 4, 4> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 4> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 4, 4>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 4> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 4, 4>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 4> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 4, 4>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 4> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 4, 4>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 4> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 4> >; _Scalar = double; int _Rows = 4; int _Cols = 4; int _Options = 0; int _MaxRows = 4; int _MaxCols = 4]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:327:20:   required from ‘Derived& Eigen::DenseBase<Derived>::setConstant(const Scalar&) [with Derived = Eigen::Matrix<double, 4, 4>; Eigen::DenseBase<Derived>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:501:21:   required from ‘Derived& Eigen::DenseBase<Derived>::setZero() [with Derived = Eigen::Matrix<double, 4, 4>]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:757:5:   required from ‘static Derived& Eigen::internal::setIdentity_impl<Derived, true>::run(Derived&) [with Derived = Eigen::Matrix<double, 4, 4>]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:776:50:   required from ‘Derived& Eigen::MatrixBase<Derived>::setIdentity() [with Derived = Eigen::Matrix<double, 4, 4>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:273:40:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, 1, -1, false> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, 1, -1, false> >, Eigen::internal::swap_assign_op<double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, 1, -1, false> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, 1, -1, false> >, Eigen::internal::swap_assign_op<double>, 1>’
/usr/local/include/eigen3/Eigen/src/Core/Swap.h:19:7:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, 1, -1, false> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, 1, -1, false> >, Eigen::internal::swap_assign_op<double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, 1, -1, false>; SrcXprType = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, 1, -1, false>; Functor = Eigen::internal::swap_assign_op<double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, 1, -1, false>; SrcXprType = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, 1, -1, false>; Functor = Eigen::internal::swap_assign_op<double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, 1, -1, false>; Src = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, 1, -1, false>; Func = Eigen::internal::swap_assign_op<double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:509:17:   required from ‘void Eigen::internal::partial_lu_inplace(MatrixType&, TranspositionType&, typename TranspositionType::StorageIndex&) [with MatrixType = Eigen::Matrix<double, 3, 3>; TranspositionType = Eigen::Transpositions<3, 3, int>; typename TranspositionType::StorageIndex = int]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:530:31:   required from ‘void Eigen::PartialPivLU<MatrixType>::compute() [with _MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:131:14:   required from ‘Eigen::PartialPivLU<MatrixType>& Eigen::PartialPivLU<MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:323:10:   required from ‘Eigen::PartialPivLU<MatrixType>::PartialPivLU(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:606:10:   required from ‘const Eigen::PartialPivLU<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::lu() const [with Derived = Eigen::Matrix<double, 3, 3>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, 3, 3>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/sim3.h:217:22:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:217:29:   required from ‘static void Eigen::internal::assignment_from_xpr_op_product<DstXprType, OtherXpr, ProductType, Func1, Func2>::run(DstXprType&, const SrcXprType&, const InitialFunc&) [with SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0> >; InitialFunc = Eigen::internal::assign_op<double, double>; DstXprType = Eigen::Matrix<double, 3, 3>; OtherXpr = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >; ProductType = Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0>; Func1 = Eigen::internal::assign_op<double, double>; Func2 = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0> >; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0> >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:710:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0> >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0> >; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:240:58:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 4, 4>, 1, 3, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, 3> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 4, 4>, 1, 3, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, 3> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 4, 4>, 1, 3, false>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, 3> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 4, 4>, 1, 3, false>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, 3> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, 4, 4>, 1, 3, false>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, 3> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, 4, 4>, 1, 3, false>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, 3> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:501:21:   required from ‘Derived& Eigen::DenseBase<Derived>::setZero() [with Derived = Eigen::Block<Eigen::Matrix<double, 4, 4>, 1, 3, false>]’
/usr/local/include/eigen3/Eigen/src/Geometry/Transform.h:1149:5:   required from ‘static void Eigen::internal::transform_make_affine<Mode>::run(MatrixType&) [with MatrixType = Eigen::Matrix<double, 4, 4>; int Mode = 1]’
/usr/local/include/eigen3/Eigen/src/Geometry/Transform.h:654:52:   required from ‘void Eigen::Transform<Scalar, Dim, Mode, _Options>::makeAffine() [with _Scalar = double; int _Dim = 3; int _Mode = 1; int _Options = 0]’
/usr/local/include/eigen3/Eigen/src/Geometry/Transform.h:1032:13:   required from ‘Eigen::Transform<Scalar, Dim, Mode, Options>& Eigen::Transform<Scalar, Dim, Mode, _Options>::operator=(const Eigen::RotationBase<Derived, Dim>&) [with Derived = Eigen::Quaternion<double>; _Scalar = double; int _Dim = 3; int _Mode = 1; int _Options = 0]’
/usr/local/include/eigen3/Eigen/src/Geometry/Transform.h:282:11:   required from ‘Eigen::Transform<Scalar, Dim, Mode, _Options>::Transform(const Eigen::RotationBase<Derived, Dim>&) [with Derived = Eigen::Quaternion<double>; _Scalar = double; int _Dim = 3; int _Mode = 1; int _Options = 0]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:292:65:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 3>, const Eigen::Matrix<double, 3, 3> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 3>, const Eigen::Matrix<double, 3, 3> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 3>, const Eigen::Matrix<double, 3, 3> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 3>, const Eigen::Matrix<double, 3, 3> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 3>, const Eigen::Matrix<double, 3, 3> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:217:29:   required from ‘static void Eigen::internal::assignment_from_xpr_op_product<DstXprType, OtherXpr, ProductType, Func1, Func2>::run(DstXprType&, const SrcXprType&, const InitialFunc&) [with SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 3>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0> >; InitialFunc = Eigen::internal::assign_op<double, double>; DstXprType = Eigen::Matrix<double, 3, 3>; OtherXpr = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 3>, const Eigen::Matrix<double, 3, 3> >; ProductType = Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0>; Func1 = Eigen::internal::assign_op<double, double>; Func2 = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 3>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0> >; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 3>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 3>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0> >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:710:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 3>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0> >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 3>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0> >; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/sim3.h:99:39:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false> >, Eigen::internal::swap_assign_op<double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false> >, Eigen::internal::swap_assign_op<double>, 1>’
/usr/local/include/eigen3/Eigen/src/Core/Swap.h:19:7:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false> >, Eigen::internal::swap_assign_op<double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false>; SrcXprType = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false>; Functor = Eigen::internal::swap_assign_op<double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false>; SrcXprType = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false>; Functor = Eigen::internal::swap_assign_op<double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false>; Src = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false>; Func = Eigen::internal::swap_assign_op<double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:509:17:   required from ‘void Eigen::internal::partial_lu_inplace(MatrixType&, TranspositionType&, typename TranspositionType::StorageIndex&) [with MatrixType = Eigen::Matrix<double, 3, 3>; TranspositionType = Eigen::Transpositions<3, 3, int>; typename TranspositionType::StorageIndex = int]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:530:31:   required from ‘void Eigen::PartialPivLU<MatrixType>::compute() [with _MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:131:14:   required from ‘Eigen::PartialPivLU<MatrixType>& Eigen::PartialPivLU<MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:323:10:   required from ‘Eigen::PartialPivLU<MatrixType>::PartialPivLU(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:606:10:   required from ‘const Eigen::PartialPivLU<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::lu() const [with Derived = Eigen::Matrix<double, 3, 3>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, 3, 3>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/sim3.h:217:22:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::div_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::div_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::div_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::div_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::div_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::div_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:45:28:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:509:17:   required from ‘void Eigen::internal::partial_lu_inplace(MatrixType&, TranspositionType&, typename TranspositionType::StorageIndex&) [with MatrixType = Eigen::Matrix<double, 3, 3>; TranspositionType = Eigen::Transpositions<3, 3, int>; typename TranspositionType::StorageIndex = int]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:530:31:   required from ‘void Eigen::PartialPivLU<MatrixType>::compute() [with _MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:131:14:   required from ‘Eigen::PartialPivLU<MatrixType>& Eigen::PartialPivLU<MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:323:10:   required from ‘Eigen::PartialPivLU<MatrixType>::PartialPivLU(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:606:10:   required from ‘const Eigen::PartialPivLU<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::lu() const [with Derived = Eigen::Matrix<double, 3, 3>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, 3, 3>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/sim3.h:217:22:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, 1> >, Eigen::internal::sub_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, 1> >, Eigen::internal::sub_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>; SrcXprType = Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, 1>; Functor = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>; SrcXprType = Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, 1>; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>; Src = Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, 1>; Func = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:405:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::subTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>; Lhs = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>; Rhs = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>]’
/usr/local/include/eigen3/Eigen/src/Core/products/GeneralMatrixMatrix.h:452:25:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:509:17:   required from ‘void Eigen::internal::partial_lu_inplace(MatrixType&, TranspositionType&, typename TranspositionType::StorageIndex&) [with MatrixType = Eigen::Matrix<double, 3, 3>; TranspositionType = Eigen::Transpositions<3, 3, int>; typename TranspositionType::StorageIndex = int]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:530:31:   required from ‘void Eigen::PartialPivLU<MatrixType>::compute() [with _MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:131:14:   required from ‘Eigen::PartialPivLU<MatrixType>& Eigen::PartialPivLU<MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:323:10:   required from ‘Eigen::PartialPivLU<MatrixType>::PartialPivLU(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:606:10:   required from ‘const Eigen::PartialPivLU<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::lu() const [with Derived = Eigen::Matrix<double, 3, 3>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, 3, 3>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/sim3.h:217:22:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 1> >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 1> >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 1>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 1>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:398:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::addTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, 3, 3>; Lhs = Eigen::Matrix<double, 3, 3>; Rhs = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:163:42:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0> >; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0> >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:710:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0> >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0> >; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:240:58:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/craters/craters-inference/slam/ORB_SLAM3/include/Frame.h:30:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/KeyFrame.h:28,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/MapPoint.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/FrameDrawer.h:24,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Viewer.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Tracking.h:26,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/System.h:31,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/src/System.cc:21:
/home/craters/craters-inference/slam/ORB_SLAM3/include/ImuTypes.h: In member function ‘void ORB_SLAM3::IMU::Preintegrated::printMeasurements() const’:
/home/craters/craters-inference/slam/ORB_SLAM3/include/ImuTypes.h:204:23: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
         for(int i=0; i<mvMeasurements.size(); i++){
                      ~^~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 3>, 1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 3>, 1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 3>, 1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 3>, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 3>, 1>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:391:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, 3, 3>; Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >; Rhs = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:124:75:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0> > >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0> > >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0> > >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:710:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0> > >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3>, 0> > >; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:194:74:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, -1, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> > >, Eigen::internal::sub_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, -1, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> > >, Eigen::internal::sub_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, -1, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> >; Functor = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, -1, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> >; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> >; Func = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> >; Func = Eigen::internal::sub_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:164:18:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:509:17:   required from ‘void Eigen::internal::partial_lu_inplace(MatrixType&, TranspositionType&, typename TranspositionType::StorageIndex&) [with MatrixType = Eigen::Matrix<double, 3, 3>; TranspositionType = Eigen::Transpositions<3, 3, int>; typename TranspositionType::StorageIndex = int]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:530:31:   required from ‘void Eigen::PartialPivLU<MatrixType>::compute() [with _MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:131:14:   required from ‘Eigen::PartialPivLU<MatrixType>& Eigen::PartialPivLU<MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:323:10:   required from ‘Eigen::PartialPivLU<MatrixType>::PartialPivLU(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:606:10:   required from ‘const Eigen::PartialPivLU<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::lu() const [with Derived = Eigen::Matrix<double, 3, 3>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, 3, 3>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/sim3.h:217:22:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>; SrcXprType = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>; SrcXprType = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>; Src = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>; Src = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:509:17:   required from ‘void Eigen::internal::partial_lu_inplace(MatrixType&, TranspositionType&, typename TranspositionType::StorageIndex&) [with MatrixType = Eigen::Matrix<double, 3, 3>; TranspositionType = Eigen::Transpositions<3, 3, int>; typename TranspositionType::StorageIndex = int]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:530:31:   required from ‘void Eigen::PartialPivLU<MatrixType>::compute() [with _MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:131:14:   required from ‘Eigen::PartialPivLU<MatrixType>& Eigen::PartialPivLU<MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:323:10:   required from ‘Eigen::PartialPivLU<MatrixType>::PartialPivLU(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:606:10:   required from ‘const Eigen::PartialPivLU<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::lu() const [with Derived = Eigen::Matrix<double, 3, 3>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, 3, 3>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/sim3.h:217:22:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Converter.h:26,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Frame.h:33,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/KeyFrame.h:28,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/MapPoint.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/FrameDrawer.h:24,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Viewer.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Tracking.h:26,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/System.h:31,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/src/System.cc:21:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h: At global scope:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:62:74: warning: ‘Eigen::AlignedBit’ is deprecated [-Wdeprecated-declarations]
     typedef Eigen::Map<Matrix<double, D, D>, Matrix<double,D,D>::Flags & AlignedBit ? Aligned : Unaligned >  HessianBlockType;
                                                                          ^~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:360:0,
                 from /usr/local/include/eigen3/Eigen/LU:11,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/Sophus/sophus/so2.hpp:12,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/Sophus/sophus/se2.hpp:7,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/Sophus/sophus/geometry.hpp:7,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Frame.h:28,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/KeyFrame.h:28,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/MapPoint.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/FrameDrawer.h:24,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Viewer.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Tracking.h:26,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/System.h:31,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/src/System.cc:21:
/usr/local/include/eigen3/Eigen/src/Core/util/Constants.h:166:37: note: declared here
 EIGEN_DEPRECATED const unsigned int AlignedBit = 0x80;
                                     ^~~~~~~~~~
In file included from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:38:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Converter.h:26,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Frame.h:33,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/KeyFrame.h:28,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/MapPoint.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/FrameDrawer.h:24,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Viewer.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Tracking.h:26,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/System.h:31,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/src/System.cc:21:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.h:59:82: warning: ‘Eigen::AlignedBit’ is deprecated [-Wdeprecated-declarations]
       typedef Eigen::Map<Matrix<double, Di, Dj>, Matrix<double, Di, Dj>::Flags & AlignedBit ? Aligned : Unaligned > HessianBlockType;
                                                                                  ^~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:360:0,
                 from /usr/local/include/eigen3/Eigen/LU:11,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/Sophus/sophus/so2.hpp:12,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/Sophus/sophus/se2.hpp:7,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/Sophus/sophus/geometry.hpp:7,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Frame.h:28,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/KeyFrame.h:28,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/MapPoint.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/FrameDrawer.h:24,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Viewer.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Tracking.h:26,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/System.h:31,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/src/System.cc:21:
/usr/local/include/eigen3/Eigen/src/Core/util/Constants.h:166:37: note: declared here
 EIGEN_DEPRECATED const unsigned int AlignedBit = 0x80;
                                     ^~~~~~~~~~
In file included from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:38:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Converter.h:26,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Frame.h:33,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/KeyFrame.h:28,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/MapPoint.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/FrameDrawer.h:24,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Viewer.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Tracking.h:26,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/System.h:31,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/src/System.cc:21:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.h:60:82: warning: ‘Eigen::AlignedBit’ is deprecated [-Wdeprecated-declarations]
       typedef Eigen::Map<Matrix<double, Dj, Di>, Matrix<double, Dj, Di>::Flags & AlignedBit ? Aligned : Unaligned > HessianBlockTransposedType;
                                                                                  ^~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:360:0,
                 from /usr/local/include/eigen3/Eigen/LU:11,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/Sophus/sophus/so2.hpp:12,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/Sophus/sophus/se2.hpp:7,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/Sophus/sophus/geometry.hpp:7,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Frame.h:28,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/KeyFrame.h:28,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/MapPoint.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/FrameDrawer.h:24,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Viewer.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Tracking.h:26,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/System.h:31,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/src/System.cc:21:
/usr/local/include/eigen3/Eigen/src/Core/util/Constants.h:166:37: note: declared here
 EIGEN_DEPRECATED const unsigned int AlignedBit = 0x80;
                                     ^~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 3, 1>, 1, 1, false> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 3, 1>, 1, 1, false> >, Eigen::internal::swap_assign_op<double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 3, 1>, 1, 1, false> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 3, 1>, 1, 1, false> >, Eigen::internal::swap_assign_op<double>, 1>’
/usr/local/include/eigen3/Eigen/src/Core/Swap.h:19:7:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 3, 1>, 1, 1, false> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 3, 1>, 1, 1, false> >, Eigen::internal::swap_assign_op<double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 3, 1>, 1, 1, false>; SrcXprType = Eigen::Block<Eigen::Matrix<double, 3, 1>, 1, 1, false>; Functor = Eigen::internal::swap_assign_op<double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 3, 1>, 1, 1, false>; SrcXprType = Eigen::Block<Eigen::Matrix<double, 3, 1>, 1, 1, false>; Functor = Eigen::internal::swap_assign_op<double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, 3, 1>, 1, 1, false>; Src = Eigen::Block<Eigen::Matrix<double, 3, 1>, 1, 1, false>; Func = Eigen::internal::swap_assign_op<double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::Solve<Eigen::PartialPivLU<Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::Solve<Eigen::PartialPivLU<Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::Solve<Eigen::PartialPivLU<Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 1> >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:710:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Solve<Eigen::PartialPivLU<Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Solve<Eigen::PartialPivLU<Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 1> >; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/sim3.h:217:31:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 3, 1>, 1, 1, false> >, Eigen::internal::evaluator<Eigen::Block<const Eigen::Matrix<double, 3, 1>, 1, 1, false> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 3, 1>, 1, 1, false> >, Eigen::internal::evaluator<Eigen::Block<const Eigen::Matrix<double, 3, 1>, 1, 1, false> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 3, 1>, 1, 1, false>; SrcXprType = Eigen::Block<const Eigen::Matrix<double, 3, 1>, 1, 1, false>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 3, 1>, 1, 1, false>; SrcXprType = Eigen::Block<const Eigen::Matrix<double, 3, 1>, 1, 1, false>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, 3, 1>, 1, 1, false>; Src = Eigen::Block<const Eigen::Matrix<double, 3, 1>, 1, 1, false>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, 3, 1>, 1, 1, false>; Src = Eigen::Block<const Eigen::Matrix<double, 3, 1>, 1, 1, false>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::Solve<Eigen::PartialPivLU<Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::Solve<Eigen::PartialPivLU<Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::Solve<Eigen::PartialPivLU<Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 1> >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:710:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Solve<Eigen::PartialPivLU<Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Solve<Eigen::PartialPivLU<Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 1> >; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/sim3.h:217:31:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<bool, 3, 1, 0, 3, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<bool>, Eigen::Matrix<bool, 3, 1, 0, 3, 1> > >, Eigen::internal::assign_op<bool, bool> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<bool, 3, 1, 0, 3, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<bool>, Eigen::Matrix<bool, 3, 1, 0, 3, 1> > >, Eigen::internal::assign_op<bool, bool>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<bool, 3, 1, 0, 3, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<bool>, Eigen::Matrix<bool, 3, 1, 0, 3, 1> >; Functor = Eigen::internal::assign_op<bool, bool>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<bool, 3, 1, 0, 3, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<bool>, Eigen::Matrix<bool, 3, 1, 0, 3, 1> >; Functor = Eigen::internal::assign_op<bool, bool>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<bool, 3, 1, 0, 3, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<bool>, Eigen::Matrix<bool, 3, 1, 0, 3, 1> >; Func = Eigen::internal::assign_op<bool, bool>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<bool, 3, 1, 0, 3, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<bool>, Eigen::Matrix<bool, 3, 1, 0, 3, 1> >; Func = Eigen::internal::assign_op<bool, bool>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::Solve<Eigen::PartialPivLU<Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::Solve<Eigen::PartialPivLU<Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::Solve<Eigen::PartialPivLU<Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 1> >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:710:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Solve<Eigen::PartialPivLU<Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Solve<Eigen::PartialPivLU<Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 1> >; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/sim3.h:217:31:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
[  5%] Building CXX object Thirdparty/g2o/CMakeFiles/g2o.dir/g2o/core/hyper_graph.cpp.o
In file included from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Converter.h:26,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Frame.h:33,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/KeyFrame.h:28,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/MapPoint.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/FrameDrawer.h:24,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Viewer.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Tracking.h:26,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/System.h:31,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/src/System.cc:21:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h: In instantiation of ‘class g2o::BaseVertex<3, Eigen::Matrix<double, 3, 1> >’:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.h:40:35:   required from here
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:62:72: warning: ‘Eigen::AlignedBit’ is deprecated [-Wdeprecated-declarations]
     typedef Eigen::Map<Matrix<double, D, D>, Matrix<double,D,D>::Flags & AlignedBit ? Aligned : Unaligned >  HessianBlockType;
                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:360:0,
                 from /usr/local/include/eigen3/Eigen/LU:11,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/Sophus/sophus/so2.hpp:12,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/Sophus/sophus/se2.hpp:7,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/Sophus/sophus/geometry.hpp:7,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Frame.h:28,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/KeyFrame.h:28,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/MapPoint.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/FrameDrawer.h:24,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Viewer.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Tracking.h:26,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/System.h:31,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/src/System.cc:21:
/usr/local/include/eigen3/Eigen/src/Core/util/Constants.h:166:37: note: declared here
 EIGEN_DEPRECATED const unsigned int AlignedBit = 0x80;
                                     ^~~~~~~~~~
In file included from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Converter.h:26,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Frame.h:33,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/KeyFrame.h:28,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/MapPoint.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/FrameDrawer.h:24,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Viewer.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Tracking.h:26,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/System.h:31,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/src/System.cc:21:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h: In instantiation of ‘class g2o::BaseVertex<6, g2o::SE3Quat>’:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:59:33:   required from here
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:62:72: warning: ‘Eigen::AlignedBit’ is deprecated [-Wdeprecated-declarations]
     typedef Eigen::Map<Matrix<double, D, D>, Matrix<double,D,D>::Flags & AlignedBit ? Aligned : Unaligned >  HessianBlockType;
                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:360:0,
                 from /usr/local/include/eigen3/Eigen/LU:11,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/Sophus/sophus/so2.hpp:12,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/Sophus/sophus/se2.hpp:7,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/Sophus/sophus/geometry.hpp:7,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Frame.h:28,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/KeyFrame.h:28,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/MapPoint.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/FrameDrawer.h:24,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Viewer.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Tracking.h:26,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/System.h:31,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/src/System.cc:21:
/usr/local/include/eigen3/Eigen/src/Core/util/Constants.h:166:37: note: declared here
 EIGEN_DEPRECATED const unsigned int AlignedBit = 0x80;
                                     ^~~~~~~~~~
In file included from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:38:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Converter.h:26,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Frame.h:33,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/KeyFrame.h:28,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/MapPoint.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/FrameDrawer.h:24,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Viewer.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Tracking.h:26,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/System.h:31,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/src/System.cc:21:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.h: In instantiation of ‘class g2o::BaseBinaryEdge<6, g2o::SE3Quat, g2o::VertexSE3Expmap, g2o::VertexSE3Expmap>’:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:83:24:   required from here
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.h:59:80: warning: ‘Eigen::AlignedBit’ is deprecated [-Wdeprecated-declarations]
       typedef Eigen::Map<Matrix<double, Di, Dj>, Matrix<double, Di, Dj>::Flags & AlignedBit ? Aligned : Unaligned > HessianBlockType;
                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:360:0,
                 from /usr/local/include/eigen3/Eigen/LU:11,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/Sophus/sophus/so2.hpp:12,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/Sophus/sophus/se2.hpp:7,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/Sophus/sophus/geometry.hpp:7,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Frame.h:28,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/KeyFrame.h:28,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/MapPoint.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/FrameDrawer.h:24,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Viewer.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Tracking.h:26,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/System.h:31,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/src/System.cc:21:
/usr/local/include/eigen3/Eigen/src/Core/util/Constants.h:166:37: note: declared here
 EIGEN_DEPRECATED const unsigned int AlignedBit = 0x80;
                                     ^~~~~~~~~~
In file included from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:38:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Converter.h:26,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Frame.h:33,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/KeyFrame.h:28,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/MapPoint.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/FrameDrawer.h:24,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Viewer.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Tracking.h:26,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/System.h:31,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/src/System.cc:21:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.h:60:80: warning: ‘Eigen::AlignedBit’ is deprecated [-Wdeprecated-declarations]
       typedef Eigen::Map<Matrix<double, Dj, Di>, Matrix<double, Dj, Di>::Flags & AlignedBit ? Aligned : Unaligned > HessianBlockTransposedType;
                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:360:0,
                 from /usr/local/include/eigen3/Eigen/LU:11,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/Sophus/sophus/so2.hpp:12,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/Sophus/sophus/se2.hpp:7,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/Sophus/sophus/geometry.hpp:7,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Frame.h:28,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/KeyFrame.h:28,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/MapPoint.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/FrameDrawer.h:24,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Viewer.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Tracking.h:26,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/System.h:31,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/src/System.cc:21:
/usr/local/include/eigen3/Eigen/src/Core/util/Constants.h:166:37: note: declared here
 EIGEN_DEPRECATED const unsigned int AlignedBit = 0x80;
                                     ^~~~~~~~~~
In file included from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:38:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Converter.h:26,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Frame.h:33,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/KeyFrame.h:28,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/MapPoint.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/FrameDrawer.h:24,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Viewer.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Tracking.h:26,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/System.h:31,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/src/System.cc:21:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.h: In instantiation of ‘class g2o::BaseBinaryEdge<2, Eigen::Matrix<double, 2, 1>, g2o::VertexSBAPointXYZ, g2o::VertexSE3Expmap>’:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:114:35:   required from here
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.h:59:80: warning: ‘Eigen::AlignedBit’ is deprecated [-Wdeprecated-declarations]
       typedef Eigen::Map<Matrix<double, Di, Dj>, Matrix<double, Di, Dj>::Flags & AlignedBit ? Aligned : Unaligned > HessianBlockType;
                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:360:0,
                 from /usr/local/include/eigen3/Eigen/LU:11,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/Sophus/sophus/so2.hpp:12,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/Sophus/sophus/se2.hpp:7,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/Sophus/sophus/geometry.hpp:7,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Frame.h:28,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/KeyFrame.h:28,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/MapPoint.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/FrameDrawer.h:24,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Viewer.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Tracking.h:26,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/System.h:31,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/src/System.cc:21:
/usr/local/include/eigen3/Eigen/src/Core/util/Constants.h:166:37: note: declared here
 EIGEN_DEPRECATED const unsigned int AlignedBit = 0x80;
                                     ^~~~~~~~~~
In file included from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:38:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Converter.h:26,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Frame.h:33,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/KeyFrame.h:28,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/MapPoint.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/FrameDrawer.h:24,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Viewer.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Tracking.h:26,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/System.h:31,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/src/System.cc:21:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.h:60:80: warning: ‘Eigen::AlignedBit’ is deprecated [-Wdeprecated-declarations]
       typedef Eigen::Map<Matrix<double, Dj, Di>, Matrix<double, Dj, Di>::Flags & AlignedBit ? Aligned : Unaligned > HessianBlockTransposedType;
                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:360:0,
                 from /usr/local/include/eigen3/Eigen/LU:11,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/Sophus/sophus/so2.hpp:12,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/Sophus/sophus/se2.hpp:7,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/Sophus/sophus/geometry.hpp:7,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Frame.h:28,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/KeyFrame.h:28,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/MapPoint.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/FrameDrawer.h:24,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Viewer.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Tracking.h:26,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/System.h:31,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/src/System.cc:21:
/usr/local/include/eigen3/Eigen/src/Core/util/Constants.h:166:37: note: declared here
 EIGEN_DEPRECATED const unsigned int AlignedBit = 0x80;
                                     ^~~~~~~~~~
In file included from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:38:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Converter.h:26,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Frame.h:33,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/KeyFrame.h:28,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/MapPoint.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/FrameDrawer.h:24,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Viewer.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Tracking.h:26,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/System.h:31,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/src/System.cc:21:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.h: In instantiation of ‘class g2o::BaseBinaryEdge<3, Eigen::Matrix<double, 3, 1>, g2o::VertexSBAPointXYZ, g2o::VertexSE3Expmap>’:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:146:41:   required from here
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.h:59:80: warning: ‘Eigen::AlignedBit’ is deprecated [-Wdeprecated-declarations]
       typedef Eigen::Map<Matrix<double, Di, Dj>, Matrix<double, Di, Dj>::Flags & AlignedBit ? Aligned : Unaligned > HessianBlockType;
                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:360:0,
                 from /usr/local/include/eigen3/Eigen/LU:11,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/Sophus/sophus/so2.hpp:12,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/Sophus/sophus/se2.hpp:7,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/Sophus/sophus/geometry.hpp:7,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Frame.h:28,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/KeyFrame.h:28,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/MapPoint.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/FrameDrawer.h:24,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Viewer.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Tracking.h:26,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/System.h:31,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/src/System.cc:21:
/usr/local/include/eigen3/Eigen/src/Core/util/Constants.h:166:37: note: declared here
 EIGEN_DEPRECATED const unsigned int AlignedBit = 0x80;
                                     ^~~~~~~~~~
In file included from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:38:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Converter.h:26,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Frame.h:33,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/KeyFrame.h:28,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/MapPoint.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/FrameDrawer.h:24,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Viewer.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Tracking.h:26,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/System.h:31,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/src/System.cc:21:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.h:60:80: warning: ‘Eigen::AlignedBit’ is deprecated [-Wdeprecated-declarations]
       typedef Eigen::Map<Matrix<double, Dj, Di>, Matrix<double, Dj, Di>::Flags & AlignedBit ? Aligned : Unaligned > HessianBlockTransposedType;
                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:360:0,
                 from /usr/local/include/eigen3/Eigen/LU:11,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/Sophus/sophus/so2.hpp:12,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/Sophus/sophus/se2.hpp:7,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/Sophus/sophus/geometry.hpp:7,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Frame.h:28,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/KeyFrame.h:28,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/MapPoint.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/FrameDrawer.h:24,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Viewer.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Tracking.h:26,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/System.h:31,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/src/System.cc:21:
/usr/local/include/eigen3/Eigen/src/Core/util/Constants.h:166:37: note: declared here
 EIGEN_DEPRECATED const unsigned int AlignedBit = 0x80;
                                     ^~~~~~~~~~
In file included from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Converter.h:26,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Frame.h:33,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/KeyFrame.h:28,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/MapPoint.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/FrameDrawer.h:24,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Viewer.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Tracking.h:26,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/System.h:31,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/src/System.cc:21:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h: In instantiation of ‘class g2o::BaseVertex<7, g2o::Sim3>’:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:48:35:   required from here
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:62:72: warning: ‘Eigen::AlignedBit’ is deprecated [-Wdeprecated-declarations]
     typedef Eigen::Map<Matrix<double, D, D>, Matrix<double,D,D>::Flags & AlignedBit ? Aligned : Unaligned >  HessianBlockType;
                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:360:0,
                 from /usr/local/include/eigen3/Eigen/LU:11,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/Sophus/sophus/so2.hpp:12,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/Sophus/sophus/se2.hpp:7,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/Sophus/sophus/geometry.hpp:7,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Frame.h:28,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/KeyFrame.h:28,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/MapPoint.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/FrameDrawer.h:24,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Viewer.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Tracking.h:26,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/System.h:31,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/src/System.cc:21:
/usr/local/include/eigen3/Eigen/src/Core/util/Constants.h:166:37: note: declared here
 EIGEN_DEPRECATED const unsigned int AlignedBit = 0x80;
                                     ^~~~~~~~~~
[  6%] Building CXX object Thirdparty/g2o/CMakeFiles/g2o.dir/g2o/core/marginal_covariance_cholesky.cpp.o
In file included from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:38:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Converter.h:26,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Frame.h:33,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/KeyFrame.h:28,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/MapPoint.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/FrameDrawer.h:24,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Viewer.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Tracking.h:26,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/System.h:31,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/src/System.cc:21:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.h: In instantiation of ‘class g2o::BaseBinaryEdge<7, g2o::Sim3, g2o::VertexSim3Expmap, g2o::VertexSim3Expmap>’:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:99:27:   required from here
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.h:59:80: warning: ‘Eigen::AlignedBit’ is deprecated [-Wdeprecated-declarations]
       typedef Eigen::Map<Matrix<double, Di, Dj>, Matrix<double, Di, Dj>::Flags & AlignedBit ? Aligned : Unaligned > HessianBlockType;
                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:360:0,
                 from /usr/local/include/eigen3/Eigen/LU:11,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/Sophus/sophus/so2.hpp:12,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/Sophus/sophus/se2.hpp:7,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/Sophus/sophus/geometry.hpp:7,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Frame.h:28,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/KeyFrame.h:28,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/MapPoint.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/FrameDrawer.h:24,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Viewer.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Tracking.h:26,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/System.h:31,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/src/System.cc:21:
/usr/local/include/eigen3/Eigen/src/Core/util/Constants.h:166:37: note: declared here
 EIGEN_DEPRECATED const unsigned int AlignedBit = 0x80;
                                     ^~~~~~~~~~
In file included from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:38:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Converter.h:26,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Frame.h:33,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/KeyFrame.h:28,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/MapPoint.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/FrameDrawer.h:24,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Viewer.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Tracking.h:26,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/System.h:31,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/src/System.cc:21:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.h:60:80: warning: ‘Eigen::AlignedBit’ is deprecated [-Wdeprecated-declarations]
       typedef Eigen::Map<Matrix<double, Dj, Di>, Matrix<double, Dj, Di>::Flags & AlignedBit ? Aligned : Unaligned > HessianBlockTransposedType;
                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:360:0,
                 from /usr/local/include/eigen3/Eigen/LU:11,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/Sophus/sophus/so2.hpp:12,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/Sophus/sophus/se2.hpp:7,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/Sophus/sophus/geometry.hpp:7,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Frame.h:28,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/KeyFrame.h:28,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/MapPoint.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/FrameDrawer.h:24,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Viewer.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Tracking.h:26,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/System.h:31,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/src/System.cc:21:
/usr/local/include/eigen3/Eigen/src/Core/util/Constants.h:166:37: note: declared here
 EIGEN_DEPRECATED const unsigned int AlignedBit = 0x80;
                                     ^~~~~~~~~~
In file included from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:38:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Converter.h:26,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Frame.h:33,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/KeyFrame.h:28,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/MapPoint.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/FrameDrawer.h:24,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Viewer.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Tracking.h:26,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/System.h:31,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/src/System.cc:21:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.h: In instantiation of ‘class g2o::BaseBinaryEdge<2, Eigen::Matrix<double, 2, 1>, g2o::VertexSBAPointXYZ, g2o::VertexSim3Expmap>’:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:130:36:   required from here
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.h:59:80: warning: ‘Eigen::AlignedBit’ is deprecated [-Wdeprecated-declarations]
       typedef Eigen::Map<Matrix<double, Di, Dj>, Matrix<double, Di, Dj>::Flags & AlignedBit ? Aligned : Unaligned > HessianBlockType;
                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:360:0,
                 from /usr/local/include/eigen3/Eigen/LU:11,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/Sophus/sophus/so2.hpp:12,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/Sophus/sophus/se2.hpp:7,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/Sophus/sophus/geometry.hpp:7,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Frame.h:28,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/KeyFrame.h:28,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/MapPoint.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/FrameDrawer.h:24,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Viewer.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Tracking.h:26,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/System.h:31,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/src/System.cc:21:
/usr/local/include/eigen3/Eigen/src/Core/util/Constants.h:166:37: note: declared here
 EIGEN_DEPRECATED const unsigned int AlignedBit = 0x80;
                                     ^~~~~~~~~~
In file included from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:38:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Converter.h:26,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Frame.h:33,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/KeyFrame.h:28,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/MapPoint.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/FrameDrawer.h:24,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Viewer.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Tracking.h:26,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/System.h:31,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/src/System.cc:21:
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.h:60:80: warning: ‘Eigen::AlignedBit’ is deprecated [-Wdeprecated-declarations]
       typedef Eigen::Map<Matrix<double, Dj, Di>, Matrix<double, Dj, Di>::Flags & AlignedBit ? Aligned : Unaligned > HessianBlockTransposedType;
                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:360:0,
                 from /usr/local/include/eigen3/Eigen/LU:11,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/Sophus/sophus/so2.hpp:12,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/Sophus/sophus/se2.hpp:7,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/Sophus/sophus/geometry.hpp:7,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Frame.h:28,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/KeyFrame.h:28,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/MapPoint.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/FrameDrawer.h:24,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Viewer.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Tracking.h:26,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/System.h:31,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/src/System.cc:21:
/usr/local/include/eigen3/Eigen/src/Core/util/Constants.h:166:37: note: declared here
 EIGEN_DEPRECATED const unsigned int AlignedBit = 0x80;
                                     ^~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 2, 2> >, Eigen::internal::evaluator<Eigen::Matrix<double, 2, 2> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 2, 2> >, Eigen::internal::evaluator<Eigen::Matrix<double, 2, 2> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 2, 2>; SrcXprType = Eigen::Matrix<double, 2, 2>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 2, 2>; SrcXprType = Eigen::Matrix<double, 2, 2>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 2, 2>; Src = Eigen::Matrix<double, 2, 2>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 2, 2>; Derived = Eigen::Matrix<double, 2, 2>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:278:27:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = 2; int _Cols = 2; int _Options = 0; int _MaxRows = 2; int _MaxCols = 2]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_unary_edge.hpp:60:23:   required from ‘void g2o::BaseUnaryEdge<D, E, VertexXi>::constructQuadraticForm() [with int D = 2; E = Eigen::Matrix<double, 2, 1>; VertexXi = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> > >, Eigen::internal::mul_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> > >, Eigen::internal::mul_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >; Functor = Eigen::internal::mul_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >; Functor = Eigen::internal::mul_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >; Func = Eigen::internal::mul_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >; Func = Eigen::internal::mul_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:21:28:   required from ‘Derived& Eigen::DenseBase<Derived>::operator*=(const Scalar&) [with Derived = Eigen::Matrix<double, 3, 1>; Eigen::DenseBase<Derived>::Scalar = double]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:99:15:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::constructQuadraticForm() [with int D = 3; E = Eigen::Matrix<double, 3, 1>; VertexXi = g2o::VertexSBAPointXYZ; VertexXj = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 2, 0, 3, 2> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 2, 0, 3, 2> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 2, 0, 3, 2> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 2, 0, 3, 2> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 2, 0, 3, 2>; SrcXprType = Eigen::Matrix<double, 3, 2, 0, 3, 2>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 2, 0, 3, 2>; SrcXprType = Eigen::Matrix<double, 3, 2, 0, 3, 2>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 2, 0, 3, 2>; Src = Eigen::Matrix<double, 3, 2, 0, 3, 2>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 2, 0, 3, 2>; Derived = Eigen::Matrix<double, 3, 2, 0, 3, 2>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:278:27:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = 3; int _Cols = 2; int _Options = 0; int _MaxRows = 3; int _MaxCols = 2]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:77:52:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::constructQuadraticForm() [with int D = 2; E = Eigen::Matrix<double, 2, 1>; VertexXi = g2o::VertexSBAPointXYZ; VertexXj = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 2, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 2, 1> > >, Eigen::internal::mul_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 2, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 2, 1> > >, Eigen::internal::mul_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 2, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 2, 1> >; Functor = Eigen::internal::mul_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 2, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 2, 1> >; Functor = Eigen::internal::mul_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 2, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 2, 1> >; Func = Eigen::internal::mul_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 2, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 2, 1> >; Func = Eigen::internal::mul_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:21:28:   required from ‘Derived& Eigen::DenseBase<Derived>::operator*=(const Scalar&) [with Derived = Eigen::Matrix<double, 2, 1>; Eigen::DenseBase<Derived>::Scalar = double]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:99:15:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::constructQuadraticForm() [with int D = 2; E = Eigen::Matrix<double, 2, 1>; VertexXi = g2o::VertexSBAPointXYZ; VertexXj = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 6, 1> > >, Eigen::internal::mul_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 6, 1> > >, Eigen::internal::mul_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 6, 1> >; Functor = Eigen::internal::mul_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 6, 1> >; Functor = Eigen::internal::mul_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 6, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 6, 1> >; Func = Eigen::internal::mul_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 6, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 6, 1> >; Func = Eigen::internal::mul_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:21:28:   required from ‘Derived& Eigen::DenseBase<Derived>::operator*=(const Scalar&) [with Derived = Eigen::Matrix<double, 6, 1>; Eigen::DenseBase<Derived>::Scalar = double]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:99:15:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::constructQuadraticForm() [with int D = 6; E = g2o::SE3Quat; VertexXi = g2o::VertexSE3Expmap; VertexXj = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::sub_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::sub_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 1>; SrcXprType = Eigen::Matrix<double, 6, 1>; Functor = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 1>; SrcXprType = Eigen::Matrix<double, 6, 1>; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 6, 1>; Src = Eigen::Matrix<double, 6, 1>; Func = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 6, 1>; Src = Eigen::Matrix<double, 6, 1>; Func = Eigen::internal::sub_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:164:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator-=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 6, 1>; Derived = Eigen::Matrix<double, 6, 1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:168:16:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::linearizeOplus() [with int D = 6; E = g2o::SE3Quat; VertexXi = g2o::VertexSE3Expmap; VertexXj = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::sub_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::sub_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::Matrix<double, 3, 1>; Functor = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::Matrix<double, 3, 1>; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::Matrix<double, 3, 1>; Func = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::Matrix<double, 3, 1>; Func = Eigen::internal::sub_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:164:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator-=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 1>; Derived = Eigen::Matrix<double, 3, 1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:168:16:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::linearizeOplus() [with int D = 3; E = Eigen::Matrix<double, 3, 1>; VertexXi = g2o::VertexSBAPointXYZ; VertexXj = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 2, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 2, 1> >, Eigen::internal::sub_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 2, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 2, 1> >, Eigen::internal::sub_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 2, 1>; SrcXprType = Eigen::Matrix<double, 2, 1>; Functor = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 2, 1>; SrcXprType = Eigen::Matrix<double, 2, 1>; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 2, 1>; Src = Eigen::Matrix<double, 2, 1>; Func = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 2, 1>; Src = Eigen::Matrix<double, 2, 1>; Func = Eigen::internal::sub_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:164:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator-=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 2, 1>; Derived = Eigen::Matrix<double, 2, 1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:168:16:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::linearizeOplus() [with int D = 2; E = Eigen::Matrix<double, 2, 1>; VertexXi = g2o::VertexSBAPointXYZ; VertexXj = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> >, 6, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 1> >, const Eigen::Matrix<double, 6, 1> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> >, 6, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 1> >, const Eigen::Matrix<double, 6, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> >, 6, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 1> >, const Eigen::Matrix<double, 6, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> >, 6, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 1> >, const Eigen::Matrix<double, 6, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> >, 6, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 1> >, const Eigen::Matrix<double, 6, 1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> >, 6, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 1> >, const Eigen::Matrix<double, 6, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> >, 6, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 1> >, const Eigen::Matrix<double, 6, 1> >]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 1> >, const Eigen::Matrix<double, 6, 1> >; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> >, 6, 1, true>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:172:31:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::linearizeOplus() [with int D = 6; E = g2o::SE3Quat; VertexXi = g2o::VertexSE3Expmap; VertexXj = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 6> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 6, 6> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 6> > > > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 6> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 6, 6> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 6> > > > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 6>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 6, 6> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 6> > > >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 6>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 6, 6> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 6> > > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 6, 6>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 6, 6> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 6> > > >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 6, 6> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 6> > > >; Derived = Eigen::Matrix<double, 6, 6>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:537:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 6, 6> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 6> > > >; Derived = Eigen::Matrix<double, 6, 6>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:379:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 6, 6> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 6> > > >; _Scalar = double; int _Rows = 6; int _Cols = 6; int _Options = 0; int _MaxRows = 6; int _MaxCols = 6]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.hpp:37:25:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 6; T = g2o::SE3Quat]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/craters/craters-inference/slam/ORB_SLAM3/include/Atlas.h:27:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/FrameDrawer.h:25,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Viewer.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Tracking.h:26,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/System.h:31,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/src/System.cc:21:
/home/craters/craters-inference/slam/ORB_SLAM3/include/CameraModels/KannalaBrandt8.h: In constructor ‘ORB_SLAM3::KannalaBrandt8::KannalaBrandt8(std::vector<float>)’:
/home/craters/craters-inference/slam/ORB_SLAM3/include/CameraModels/KannalaBrandt8.h:102:21: warning: ‘ORB_SLAM3::KannalaBrandt8::precision’ will be initialized after [-Wreorder]
         const float precision;
                     ^~~~~~~~~
/home/craters/craters-inference/slam/ORB_SLAM3/include/CameraModels/KannalaBrandt8.h:88:26: warning:   ‘std::vector<int> ORB_SLAM3::KannalaBrandt8::mvLappingArea’ [-Wreorder]
         std::vector<int> mvLappingArea;
                          ^~~~~~~~~~~~~
In file included from /home/craters/craters-inference/slam/ORB_SLAM3/include/Atlas.h:27:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/FrameDrawer.h:25,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Viewer.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Tracking.h:26,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/System.h:31,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/src/System.cc:21:
/home/craters/craters-inference/slam/ORB_SLAM3/include/CameraModels/KannalaBrandt8.h:47:9: warning:   when initialized here [-Wreorder]
         KannalaBrandt8(const std::vector<float> _vParameters) : GeometricCamera(_vParameters), precision(1e-6), mvLappingArea(2,0) ,tvr(nullptr) {
         ^~~~~~~~~~~~~~
In file included from /home/craters/craters-inference/slam/ORB_SLAM3/include/Atlas.h:27:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/FrameDrawer.h:25,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Viewer.h:23,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/Tracking.h:26,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/include/System.h:31,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/src/System.cc:21:
/home/craters/craters-inference/slam/ORB_SLAM3/include/CameraModels/KannalaBrandt8.h: In constructor ‘ORB_SLAM3::KannalaBrandt8::KannalaBrandt8(std::vector<float>, float)’:
/home/craters/craters-inference/slam/ORB_SLAM3/include/CameraModels/KannalaBrandt8.h:102:21: warning: ‘ORB_SLAM3::KannalaBrandt8::precision’ will be initialized after [-Wreorder]
         const float precision;
                     ^~~~~~~~~
/home/craters/craters-inference/slam/ORB_SLAM3/include/CameraModels/KannalaBrandt8.h:88:26: warning:   ‘std::vector<int> ORB_SLAM3::KannalaBrandt8::mvLappingArea’ [-Wreorder]
         std::vector<int> mvLappingArea;
                          ^~~~~~~~~~~~~
/home/craters/craters-inference/slam/ORB_SLAM3/include/CameraModels/KannalaBrandt8.h:53:9: warning:   when initialized here [-Wreorder]
         KannalaBrandt8(const std::vector<float> _vParameters, const float _precision) : GeometricCamera(_vParameters),
         ^~~~~~~~~~~~~~
/home/craters/craters-inference/slam/ORB_SLAM3/include/CameraModels/KannalaBrandt8.h: In constructor ‘ORB_SLAM3::KannalaBrandt8::KannalaBrandt8(ORB_SLAM3::KannalaBrandt8*)’:
/home/craters/craters-inference/slam/ORB_SLAM3/include/CameraModels/KannalaBrandt8.h:102:21: warning: ‘ORB_SLAM3::KannalaBrandt8::precision’ will be initialized after [-Wreorder]
         const float precision;
                     ^~~~~~~~~
/home/craters/craters-inference/slam/ORB_SLAM3/include/CameraModels/KannalaBrandt8.h:88:26: warning:   ‘std::vector<int> ORB_SLAM3::KannalaBrandt8::mvLappingArea’ [-Wreorder]
         std::vector<int> mvLappingArea;
                          ^~~~~~~~~~~~~
/home/craters/craters-inference/slam/ORB_SLAM3/include/CameraModels/KannalaBrandt8.h:59:9: warning:   when initialized here [-Wreorder]
         KannalaBrandt8(KannalaBrandt8* pKannala) : GeometricCamera(pKannala->mvParameters), precision(pKannala->precision), mvLappingArea(2,0) ,tvr(nullptr) {
         ^~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 3, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> > > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 3, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> > > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 3, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> > >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 3, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 3, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> > >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 3, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> > >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 3, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> > >]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> > >; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 3, 1, true>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_unary_edge.hpp:116:29:   required from ‘void g2o::BaseUnaryEdge<D, E, VertexXi>::linearizeOplus() [with int D = 3; E = Eigen::Matrix<double, 3, 1>; VertexXi = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 2, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Matrix<double, 2, 1> > > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 2, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Matrix<double, 2, 1> > > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 2, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Matrix<double, 2, 1> > >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 2, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Matrix<double, 2, 1> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 2, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Matrix<double, 2, 1> > >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 2, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Matrix<double, 2, 1> > >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 2, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Matrix<double, 2, 1> > >]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Matrix<double, 2, 1> > >; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 2, 1, true>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_unary_edge.hpp:116:29:   required from ‘void g2o::BaseUnaryEdge<D, E, VertexXi>::linearizeOplus() [with int D = 2; E = Eigen::Matrix<double, 2, 1>; VertexXi = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> >, 3, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> >, 3, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> >, 3, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> >, 3, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> >, 3, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> >, 3, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> >, 3, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> >]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> >, 3, 1, true>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:172:31:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::linearizeOplus() [with int D = 3; E = Eigen::Matrix<double, 3, 1>; VertexXi = g2o::VertexSBAPointXYZ; VertexXj = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 3, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 3, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 3, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 3, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 3, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 3, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 3, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> >]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 3, 1, true>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:196:31:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::linearizeOplus() [with int D = 3; E = Eigen::Matrix<double, 3, 1>; VertexXi = g2o::VertexSBAPointXYZ; VertexXj = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 2, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::Matrix<double, 2, 1> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 2, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::Matrix<double, 2, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 2, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::Matrix<double, 2, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 2, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::Matrix<double, 2, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 2, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::Matrix<double, 2, 1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 2, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::Matrix<double, 2, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 2, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::Matrix<double, 2, 1> >]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::Matrix<double, 2, 1> >; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 2, 1, true>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:172:31:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::linearizeOplus() [with int D = 2; E = Eigen::Matrix<double, 2, 1>; VertexXi = g2o::VertexSBAPointXYZ; VertexXj = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 2, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::Matrix<double, 2, 1> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 2, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::Matrix<double, 2, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 2, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::Matrix<double, 2, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 2, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::Matrix<double, 2, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 2, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::Matrix<double, 2, 1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 2, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::Matrix<double, 2, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 2, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::Matrix<double, 2, 1> >]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::Matrix<double, 2, 1> >; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 2, 1, true>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:196:31:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::linearizeOplus() [with int D = 2; E = Eigen::Matrix<double, 2, 1>; VertexXi = g2o::VertexSBAPointXYZ; VertexXj = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:537:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:379:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_edge.h:98:25:   required from ‘g2o::BaseEdge<D, E>::InformationType g2o::BaseEdge<D, E>::robustInformation(const Vector3d&) [with int D = 3; E = Eigen::Matrix<double, 3, 1>; g2o::BaseEdge<D, E>::InformationType = Eigen::Matrix<double, 3, 3>; Eigen::Vector3d = Eigen::Matrix<double, 3, 1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_unary_edge.hpp:60:23:   required from ‘void g2o::BaseUnaryEdge<D, E, VertexXi>::constructQuadraticForm() [with int D = 3; E = Eigen::Matrix<double, 3, 1>; VertexXi = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 3, 1, 6, 3> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Matrix<double, 3, 1>, 1> >, Eigen::internal::sub_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 3, 1, 6, 3> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Matrix<double, 3, 1>, 1> >, Eigen::internal::sub_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 1>; SrcXprType = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 3, 1, 6, 3> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Matrix<double, 3, 1>, 1>; Functor = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 1>; SrcXprType = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 3, 1, 6, 3> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Matrix<double, 3, 1>, 1>; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 6, 1>; Src = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 3, 1, 6, 3> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Matrix<double, 3, 1>, 1>; Func = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:405:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::subTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, 6, 1>; Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 3, 1, 6, 3> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 3, 3>, 0>; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:178:42:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::sub_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::sub_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<double, 6, 1>; Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 3, 1, 6, 3> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 3, 3>, 0>; Rhs = Eigen::Matrix<double, 3, 1>; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::sub_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 3, 1, 6, 3> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Matrix<double, 3, 1>, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 6, 1>; Src = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 3, 1, 6, 3> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Matrix<double, 3, 1>, 0>; Func = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:58:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator-=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 3, 1, 6, 3> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Matrix<double, 3, 1>, 0>; ExpressionType = Eigen::Matrix<double, 6, 1>; StorageBase = Eigen::MatrixBase]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_unary_edge.hpp:62:27:   required from ‘void g2o::BaseUnaryEdge<D, E, VertexXi>::constructQuadraticForm() [with int D = 3; E = Eigen::Matrix<double, 3, 1>; VertexXi = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 1>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:398:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::addTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>; Rhs = Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:163:42:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::add_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>; Rhs = Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 0>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:50:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator+=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 0>; ExpressionType = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; StorageBase = Eigen::MatrixBase]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_unary_edge.hpp:63:27:   required from ‘void g2o::BaseUnaryEdge<D, E, VertexXi>::constructQuadraticForm() [with int D = 3; E = Eigen::Matrix<double, 3, 1>; VertexXi = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Matrix<double, 3, 1>, 1> >, Eigen::internal::sub_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Matrix<double, 3, 1>, 1> >, Eigen::internal::sub_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 1>; SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Matrix<double, 3, 1>, 1>; Functor = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 1>; SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Matrix<double, 3, 1>, 1>; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 6, 1>; Src = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Matrix<double, 3, 1>, 1>; Func = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:405:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::subTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, 6, 1>; Lhs = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:178:42:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::sub_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::sub_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<double, 6, 1>; Lhs = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>; Rhs = Eigen::Matrix<double, 3, 1>; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::sub_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Matrix<double, 3, 1>, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 6, 1>; Src = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Matrix<double, 3, 1>, 0>; Func = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:58:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator-=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Matrix<double, 3, 1>, 0>; ExpressionType = Eigen::Matrix<double, 6, 1>; StorageBase = Eigen::MatrixBase]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_unary_edge.hpp:65:27:   required from ‘void g2o::BaseUnaryEdge<D, E, VertexXi>::constructQuadraticForm() [with int D = 3; E = Eigen::Matrix<double, 3, 1>; VertexXi = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 2, 2> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 2> >, const Eigen::Matrix<double, 2, 2> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 2, 2> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 2> >, const Eigen::Matrix<double, 2, 2> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 2, 2>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 2> >, const Eigen::Matrix<double, 2, 2> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 2, 2>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 2> >, const Eigen::Matrix<double, 2, 2> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 2, 2>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 2> >, const Eigen::Matrix<double, 2, 2> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 2> >, const Eigen::Matrix<double, 2, 2> >; Derived = Eigen::Matrix<double, 2, 2>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:537:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 2> >, const Eigen::Matrix<double, 2, 2> >; Derived = Eigen::Matrix<double, 2, 2>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:379:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 2> >, const Eigen::Matrix<double, 2, 2> >; _Scalar = double; int _Rows = 2; int _Cols = 2; int _Options = 0; int _MaxRows = 2; int _MaxCols = 2]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_edge.h:98:25:   required from ‘g2o::BaseEdge<D, E>::InformationType g2o::BaseEdge<D, E>::robustInformation(const Vector3d&) [with int D = 2; E = Eigen::Matrix<double, 2, 1>; g2o::BaseEdge<D, E>::InformationType = Eigen::Matrix<double, 2, 2>; Eigen::Vector3d = Eigen::Matrix<double, 3, 1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_unary_edge.hpp:60:23:   required from ‘void g2o::BaseUnaryEdge<D, E, VertexXi>::constructQuadraticForm() [with int D = 2; E = Eigen::Matrix<double, 2, 1>; VertexXi = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 2, 1, 6, 2> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Matrix<double, 2, 1>, 1> >, Eigen::internal::sub_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 2, 1, 6, 2> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Matrix<double, 2, 1>, 1> >, Eigen::internal::sub_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 1>; SrcXprType = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 2, 1, 6, 2> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Matrix<double, 2, 1>, 1>; Functor = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 1>; SrcXprType = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 2, 1, 6, 2> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Matrix<double, 2, 1>, 1>; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 6, 1>; Src = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 2, 1, 6, 2> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Matrix<double, 2, 1>, 1>; Func = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:405:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::subTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, 6, 1>; Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 2, 1, 6, 2> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 2, 2>, 0>; Rhs = Eigen::Matrix<double, 2, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:178:42:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::sub_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::sub_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<double, 6, 1>; Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 2, 1, 6, 2> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 2, 2>, 0>; Rhs = Eigen::Matrix<double, 2, 1>; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::sub_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 2, 1, 6, 2> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Matrix<double, 2, 1>, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 6, 1>; Src = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 2, 1, 6, 2> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Matrix<double, 2, 1>, 0>; Func = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:58:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator-=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 2, 1, 6, 2> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Matrix<double, 2, 1>, 0>; ExpressionType = Eigen::Matrix<double, 6, 1>; StorageBase = Eigen::MatrixBase]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_unary_edge.hpp:62:27:   required from ‘void g2o::BaseUnaryEdge<D, E, VertexXi>::constructQuadraticForm() [with int D = 2; E = Eigen::Matrix<double, 2, 1>; VertexXi = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 1>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:398:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::addTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>; Rhs = Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:163:42:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::add_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>; Rhs = Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 0>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:50:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator+=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 0>; ExpressionType = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; StorageBase = Eigen::MatrixBase]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_unary_edge.hpp:63:27:   required from ‘void g2o::BaseUnaryEdge<D, E, VertexXi>::constructQuadraticForm() [with int D = 2; E = Eigen::Matrix<double, 2, 1>; VertexXi = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Matrix<double, 2, 1>, 1> >, Eigen::internal::sub_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Matrix<double, 2, 1>, 1> >, Eigen::internal::sub_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 1>; SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Matrix<double, 2, 1>, 1>; Functor = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 1>; SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Matrix<double, 2, 1>, 1>; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 6, 1>; Src = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Matrix<double, 2, 1>, 1>; Func = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:405:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::subTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, 6, 1>; Lhs = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>; Rhs = Eigen::Matrix<double, 2, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:178:42:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::sub_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::sub_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<double, 6, 1>; Lhs = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>; Rhs = Eigen::Matrix<double, 2, 1>; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::sub_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Matrix<double, 2, 1>, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 6, 1>; Src = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Matrix<double, 2, 1>, 0>; Func = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:58:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator-=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Matrix<double, 2, 1>, 0>; ExpressionType = Eigen::Matrix<double, 6, 1>; StorageBase = Eigen::MatrixBase]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_unary_edge.hpp:65:27:   required from ‘void g2o::BaseUnaryEdge<D, E, VertexXi>::constructQuadraticForm() [with int D = 2; E = Eigen::Matrix<double, 2, 1>; VertexXi = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 1>, 1> >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 1>, 1> >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 1>, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 1>, 1>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 1>, 1>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:398:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::addTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, 3, 1>; Lhs = Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> > >; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:163:42:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::add_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<double, 3, 1>; Lhs = Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> > >; Rhs = Eigen::Matrix<double, 3, 1>; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 1>, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 1>, 0>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:50:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator+=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 1>, 0>; ExpressionType = Eigen::Matrix<double, 3, 1>; StorageBase = Eigen::MatrixBase]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:78:29:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::constructQuadraticForm() [with int D = 3; E = Eigen::Matrix<double, 3, 1>; VertexXi = g2o::VertexSBAPointXYZ; VertexXj = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> >, 1>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:398:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::addTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Matrix<double, 3, 3>; Rhs = Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> >]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:163:42:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::add_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Matrix<double, 3, 3>; Rhs = Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> >; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> >, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> >, 0>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:50:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator+=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> >, 0>; ExpressionType = Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >; StorageBase = Eigen::MatrixBase]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:79:29:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::constructQuadraticForm() [with int D = 3; E = Eigen::Matrix<double, 3, 1>; VertexXi = g2o::VertexSBAPointXYZ; VertexXj = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 6, 3, 0, 6, 3>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Transpose<Eigen::Matrix<double, 3, 3> >, 1> >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 6, 3, 0, 6, 3>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Transpose<Eigen::Matrix<double, 3, 3> >, 1> >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 6, 3, 0, 6, 3>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Transpose<Eigen::Matrix<double, 3, 3> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 6, 3, 0, 6, 3>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Transpose<Eigen::Matrix<double, 3, 3> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 6, 3, 0, 6, 3>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Transpose<Eigen::Matrix<double, 3, 3> >, 1>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:398:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::addTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Map<Eigen::Matrix<double, 6, 3, 0, 6, 3>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >; Rhs = Eigen::Transpose<Eigen::Matrix<double, 3, 3> >]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:163:42:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::add_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 6, 3, 0, 6, 3>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >; Rhs = Eigen::Transpose<Eigen::Matrix<double, 3, 3> >; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Transpose<Eigen::Matrix<double, 3, 3> >, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 6, 3, 0, 6, 3>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Transpose<Eigen::Matrix<double, 3, 3> >, 0>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:50:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator+=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Transpose<Eigen::Matrix<double, 3, 3> >, 0>; ExpressionType = Eigen::Map<Eigen::Matrix<double, 6, 3, 0, 6, 3>, 0, Eigen::Stride<0, 0> >; StorageBase = Eigen::MatrixBase]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:82:42:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::constructQuadraticForm() [with int D = 3; E = Eigen::Matrix<double, 3, 1>; VertexXi = g2o::VertexSBAPointXYZ; VertexXj = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 1>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:398:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::addTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Matrix<double, 3, 3>; Rhs = Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:163:42:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::add_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Matrix<double, 3, 3>; Rhs = Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 0>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:50:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator+=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 0>; ExpressionType = Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 0, Eigen::Stride<0, 0> >; StorageBase = Eigen::MatrixBase]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:84:32:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::constructQuadraticForm() [with int D = 3; E = Eigen::Matrix<double, 3, 1>; VertexXi = g2o::VertexSBAPointXYZ; VertexXj = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 1>, 1> >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 1>, 1> >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 1>; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 1>, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 1>; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 1>, 1>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 6, 1>; Src = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 1>, 1>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:398:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::addTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, 6, 1>; Lhs = Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:163:42:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::add_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<double, 6, 1>; Lhs = Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >; Rhs = Eigen::Matrix<double, 3, 1>; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 1>, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 6, 1>; Src = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 1>, 0>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:50:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator+=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 1>, 0>; ExpressionType = Eigen::Matrix<double, 6, 1>; StorageBase = Eigen::MatrixBase]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:88:27:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::constructQuadraticForm() [with int D = 3; E = Eigen::Matrix<double, 3, 1>; VertexXi = g2o::VertexSBAPointXYZ; VertexXj = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> >, 1>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:398:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::addTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>; Rhs = Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> >]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:163:42:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::add_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>; Rhs = Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> >; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> >, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> >, 0>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:50:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator+=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> >, 0>; ExpressionType = Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >; StorageBase = Eigen::MatrixBase]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:102:29:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::constructQuadraticForm() [with int D = 3; E = Eigen::Matrix<double, 3, 1>; VertexXi = g2o::VertexSBAPointXYZ; VertexXj = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 6, 3, 0, 6, 3>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 6, 3, 0, 6, 3>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 6, 3, 0, 6, 3>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 6, 3, 0, 6, 3>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 6, 3, 0, 6, 3>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> >, 1>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:398:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::addTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Map<Eigen::Matrix<double, 6, 3, 0, 6, 3>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>; Rhs = Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> >]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:163:42:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::add_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 6, 3, 0, 6, 3>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>; Rhs = Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> >; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> >, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 6, 3, 0, 6, 3>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> >, 0>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:50:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator+=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> >, 0>; ExpressionType = Eigen::Map<Eigen::Matrix<double, 6, 3, 0, 6, 3>, 0, Eigen::Stride<0, 0> >; StorageBase = Eigen::MatrixBase]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:105:42:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::constructQuadraticForm() [with int D = 3; E = Eigen::Matrix<double, 3, 1>; VertexXi = g2o::VertexSBAPointXYZ; VertexXj = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 1>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:398:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::addTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>; Rhs = Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:163:42:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::add_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>; Rhs = Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 0>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:50:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator+=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 0>; ExpressionType = Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 0, Eigen::Stride<0, 0> >; StorageBase = Eigen::MatrixBase]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:107:32:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::constructQuadraticForm() [with int D = 3; E = Eigen::Matrix<double, 3, 1>; VertexXi = g2o::VertexSBAPointXYZ; VertexXj = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 1>, 1> >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 1>, 1> >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 1>, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 1>, 1>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 1>, 1>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:398:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::addTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, 3, 1>; Lhs = Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >; Rhs = Eigen::Matrix<double, 2, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:163:42:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::add_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<double, 3, 1>; Lhs = Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >; Rhs = Eigen::Matrix<double, 2, 1>; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 1>, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 1>, 0>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:50:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator+=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 1>, 0>; ExpressionType = Eigen::Matrix<double, 3, 1>; StorageBase = Eigen::MatrixBase]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:78:29:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::constructQuadraticForm() [with int D = 2; E = Eigen::Matrix<double, 2, 1>; VertexXi = g2o::VertexSBAPointXYZ; VertexXj = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<double, 3, 2, 0, 3, 2>, Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<double, 3, 2, 0, 3, 2>, Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Matrix<double, 3, 2, 0, 3, 2>, Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Matrix<double, 3, 2, 0, 3, 2>, Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Matrix<double, 3, 2, 0, 3, 2>, Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 1>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:398:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::addTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Matrix<double, 3, 2, 0, 3, 2>; Rhs = Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:163:42:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::add_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Matrix<double, 3, 2, 0, 3, 2>; Rhs = Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Matrix<double, 3, 2, 0, 3, 2>, Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Matrix<double, 3, 2, 0, 3, 2>, Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 0>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:50:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator+=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, 3, 2, 0, 3, 2>, Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 0>; ExpressionType = Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >; StorageBase = Eigen::MatrixBase]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:79:29:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::constructQuadraticForm() [with int D = 2; E = Eigen::Matrix<double, 2, 1>; VertexXi = g2o::VertexSBAPointXYZ; VertexXj = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 6, 3, 0, 6, 3>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Transpose<Eigen::Matrix<double, 3, 2, 0, 3, 2> >, 1> >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 6, 3, 0, 6, 3>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Transpose<Eigen::Matrix<double, 3, 2, 0, 3, 2> >, 1> >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 6, 3, 0, 6, 3>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Transpose<Eigen::Matrix<double, 3, 2, 0, 3, 2> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 6, 3, 0, 6, 3>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Transpose<Eigen::Matrix<double, 3, 2, 0, 3, 2> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 6, 3, 0, 6, 3>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Transpose<Eigen::Matrix<double, 3, 2, 0, 3, 2> >, 1>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:398:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::addTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Map<Eigen::Matrix<double, 6, 3, 0, 6, 3>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >; Rhs = Eigen::Transpose<Eigen::Matrix<double, 3, 2, 0, 3, 2> >]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:163:42:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::add_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 6, 3, 0, 6, 3>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >; Rhs = Eigen::Transpose<Eigen::Matrix<double, 3, 2, 0, 3, 2> >; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Transpose<Eigen::Matrix<double, 3, 2, 0, 3, 2> >, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 6, 3, 0, 6, 3>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Transpose<Eigen::Matrix<double, 3, 2, 0, 3, 2> >, 0>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:50:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator+=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Transpose<Eigen::Matrix<double, 3, 2, 0, 3, 2> >, 0>; ExpressionType = Eigen::Map<Eigen::Matrix<double, 6, 3, 0, 6, 3>, 0, Eigen::Stride<0, 0> >; StorageBase = Eigen::MatrixBase]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:82:42:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::constructQuadraticForm() [with int D = 2; E = Eigen::Matrix<double, 2, 1>; VertexXi = g2o::VertexSBAPointXYZ; VertexXj = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<double, 3, 2, 0, 3, 2>, Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<double, 3, 2, 0, 3, 2>, Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Matrix<double, 3, 2, 0, 3, 2>, Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Matrix<double, 3, 2, 0, 3, 2>, Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Matrix<double, 3, 2, 0, 3, 2>, Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 1>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:398:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::addTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Matrix<double, 3, 2, 0, 3, 2>; Rhs = Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:163:42:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::add_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Matrix<double, 3, 2, 0, 3, 2>; Rhs = Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Matrix<double, 3, 2, 0, 3, 2>, Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Matrix<double, 3, 2, 0, 3, 2>, Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 0>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:50:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator+=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, 3, 2, 0, 3, 2>, Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 0>; ExpressionType = Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 0, Eigen::Stride<0, 0> >; StorageBase = Eigen::MatrixBase]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:84:32:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::constructQuadraticForm() [with int D = 2; E = Eigen::Matrix<double, 2, 1>; VertexXi = g2o::VertexSBAPointXYZ; VertexXj = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 1>, 1> >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 1>, 1> >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 1>; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 1>, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 1>; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 1>, 1>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 6, 1>; Src = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 1>, 1>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:398:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::addTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, 6, 1>; Lhs = Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >; Rhs = Eigen::Matrix<double, 2, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:163:42:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::add_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<double, 6, 1>; Lhs = Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >; Rhs = Eigen::Matrix<double, 2, 1>; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 1>, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 6, 1>; Src = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 1>, 0>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:50:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator+=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 1>, 0>; ExpressionType = Eigen::Matrix<double, 6, 1>; StorageBase = Eigen::MatrixBase]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:88:27:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::constructQuadraticForm() [with int D = 2; E = Eigen::Matrix<double, 2, 1>; VertexXi = g2o::VertexSBAPointXYZ; VertexXj = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 1>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:398:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::addTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>; Rhs = Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:163:42:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::add_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>; Rhs = Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 0>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:50:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator+=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 0>; ExpressionType = Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >; StorageBase = Eigen::MatrixBase]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:102:29:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::constructQuadraticForm() [with int D = 2; E = Eigen::Matrix<double, 2, 1>; VertexXi = g2o::VertexSBAPointXYZ; VertexXj = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 6, 3, 0, 6, 3>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 6, 3, 0, 6, 3>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 6, 3, 0, 6, 3>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 6, 3, 0, 6, 3>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 6, 3, 0, 6, 3>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 1>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:398:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::addTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Map<Eigen::Matrix<double, 6, 3, 0, 6, 3>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>; Rhs = Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:163:42:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::add_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 6, 3, 0, 6, 3>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>; Rhs = Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 6, 3, 0, 6, 3>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 0>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:50:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator+=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 0>; ExpressionType = Eigen::Map<Eigen::Matrix<double, 6, 3, 0, 6, 3>, 0, Eigen::Stride<0, 0> >; StorageBase = Eigen::MatrixBase]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:105:42:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::constructQuadraticForm() [with int D = 2; E = Eigen::Matrix<double, 2, 1>; VertexXi = g2o::VertexSBAPointXYZ; VertexXj = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 1>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:398:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::addTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>; Rhs = Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:163:42:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::add_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>; Rhs = Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 0>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:50:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator+=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 0>; ExpressionType = Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 0, Eigen::Stride<0, 0> >; StorageBase = Eigen::MatrixBase]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:107:32:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::constructQuadraticForm() [with int D = 2; E = Eigen::Matrix<double, 2, 1>; VertexXi = g2o::VertexSBAPointXYZ; VertexXj = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 6, 1>, 1> >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 6, 1>, 1> >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 1>; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 6, 1>, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 1>; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 6, 1>, 1>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 6, 1>; Src = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 6, 1>, 1>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:398:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::addTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, 6, 1>; Lhs = Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> > >; Rhs = Eigen::Matrix<double, 6, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:163:42:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::add_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<double, 6, 1>; Lhs = Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> > >; Rhs = Eigen::Matrix<double, 6, 1>; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 6, 1>, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 6, 1>; Src = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 6, 1>, 0>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:50:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator+=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 6, 1>, 0>; ExpressionType = Eigen::Matrix<double, 6, 1>; StorageBase = Eigen::MatrixBase]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:78:29:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::constructQuadraticForm() [with int D = 6; E = g2o::SE3Quat; VertexXi = g2o::VertexSE3Expmap; VertexXj = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<double, 6, 6>, Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<double, 6, 6>, Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Matrix<double, 6, 6>, Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Matrix<double, 6, 6>, Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Matrix<double, 6, 6>, Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> >, 1>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:398:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::addTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Matrix<double, 6, 6>; Rhs = Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> >]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:163:42:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::add_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Matrix<double, 6, 6>; Rhs = Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> >; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Matrix<double, 6, 6>, Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> >, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Matrix<double, 6, 6>, Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> >, 0>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:50:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator+=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, 6, 6>, Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> >, 0>; ExpressionType = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; StorageBase = Eigen::MatrixBase]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:79:29:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::constructQuadraticForm() [with int D = 6; E = g2o::SE3Quat; VertexXi = g2o::VertexSE3Expmap; VertexXj = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Transpose<Eigen::Matrix<double, 6, 6> >, 1> >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Transpose<Eigen::Matrix<double, 6, 6> >, 1> >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Transpose<Eigen::Matrix<double, 6, 6> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Transpose<Eigen::Matrix<double, 6, 6> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Transpose<Eigen::Matrix<double, 6, 6> >, 1>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:398:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::addTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> > >; Rhs = Eigen::Transpose<Eigen::Matrix<double, 6, 6> >]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:163:42:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::add_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> > >; Rhs = Eigen::Transpose<Eigen::Matrix<double, 6, 6> >; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Transpose<Eigen::Matrix<double, 6, 6> >, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Transpose<Eigen::Matrix<double, 6, 6> >, 0>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:50:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator+=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Transpose<Eigen::Matrix<double, 6, 6> >, 0>; ExpressionType = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; StorageBase = Eigen::MatrixBase]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:82:42:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::constructQuadraticForm() [with int D = 6; E = g2o::SE3Quat; VertexXi = g2o::VertexSE3Expmap; VertexXj = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 6, 6>, 0>, Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 6, 6>, 0>, Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 6, 6>, 0>, Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 6, 6>, 0>, Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 6, 6>, 0>, Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> >, 1>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:398:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::addTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 6, 6>, 0>; Rhs = Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> >]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:163:42:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::add_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 6, 6>, 0>; Rhs = Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> >; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 6, 6>, 0>, Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> >, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 6, 6>, 0>, Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> >, 0>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:50:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator+=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 6, 6>, 0>, Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> >, 0>; ExpressionType = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; StorageBase = Eigen::MatrixBase]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:89:27:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::constructQuadraticForm() [with int D = 6; E = g2o::SE3Quat; VertexXi = g2o::VertexSE3Expmap; VertexXj = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
/home/craters/craters-inference/slam/ORB_SLAM3/src/System.cc: In constructor ‘ORB_SLAM3::System::System(const string&, const string&, ORB_SLAM3::System::eSensor, bool, int, const string&)’:
/home/craters/craters-inference/slam/ORB_SLAM3/src/System.cc:110:10: warning: variable ‘loadedAtlas’ set but not used [-Wunused-but-set-variable]
     bool loadedAtlas = false;
          ^~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 6> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 6> >, const Eigen::Matrix<double, 6, 6> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 6> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 6> >, const Eigen::Matrix<double, 6, 6> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 6>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 6> >, const Eigen::Matrix<double, 6, 6> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 6>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 6> >, const Eigen::Matrix<double, 6, 6> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 6, 6>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 6> >, const Eigen::Matrix<double, 6, 6> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 6> >, const Eigen::Matrix<double, 6, 6> >; Derived = Eigen::Matrix<double, 6, 6>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:537:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 6> >, const Eigen::Matrix<double, 6, 6> >; Derived = Eigen::Matrix<double, 6, 6>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:379:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 6> >, const Eigen::Matrix<double, 6, 6> >; _Scalar = double; int _Rows = 6; int _Cols = 6; int _Options = 0; int _MaxRows = 6; int _MaxCols = 6]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_edge.h:98:25:   required from ‘g2o::BaseEdge<D, E>::InformationType g2o::BaseEdge<D, E>::robustInformation(const Vector3d&) [with int D = 6; E = g2o::SE3Quat; g2o::BaseEdge<D, E>::InformationType = Eigen::Matrix<double, 6, 6>; Eigen::Vector3d = Eigen::Matrix<double, 3, 1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:95:23:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::constructQuadraticForm() [with int D = 6; E = g2o::SE3Quat; VertexXi = g2o::VertexSE3Expmap; VertexXj = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
/home/craters/craters-inference/slam/ORB_SLAM3/src/System.cc: In member function ‘void ORB_SLAM3::System::SaveTrajectoryEuRoC(const string&)’:
/home/craters/craters-inference/slam/ORB_SLAM3/src/System.cc:679:43: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
         if(pMap->GetAllKeyFrames().size() > numMaxKFs)
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
/home/craters/craters-inference/slam/ORB_SLAM3/src/System.cc: In member function ‘void ORB_SLAM3::System::SaveTrajectoryEuRoC(const string&, ORB_SLAM3::Map*)’:
/home/craters/craters-inference/slam/ORB_SLAM3/src/System.cc:789:9: warning: unused variable ‘numMaxKFs’ [-Wunused-variable]
     int numMaxKFs = 0;
         ^~~~~~~~~
/home/craters/craters-inference/slam/ORB_SLAM3/src/System.cc: In member function ‘void ORB_SLAM3::System::SaveKeyFrameTrajectoryEuRoC(const string&)’:
/home/craters/craters-inference/slam/ORB_SLAM3/src/System.cc:1066:51: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
         if(pMap && pMap->GetAllKeyFrames().size() > numMaxKFs)
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false> >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false> >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; SrcXprType = Eigen::Matrix<double, -1, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; SrcXprType = Eigen::Matrix<double, -1, 1>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Src = Eigen::Matrix<double, -1, 1>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:797:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:710:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; Derived = Eigen::Matrix<double, -1, -1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:327:20:   required from ‘Derived& Eigen::DenseBase<Derived>::setConstant(const Scalar&) [with Derived = Eigen::Matrix<double, -1, -1>; Eigen::DenseBase<Derived>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:501:21:   required from ‘Derived& Eigen::DenseBase<Derived>::setZero() [with Derived = Eigen::Matrix<double, -1, -1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.hpp:102:9:   required from ‘g2o::SparseBlockMatrix<MatrixType>::SparseMatrixBlock* g2o::SparseBlockMatrix<MatrixType>::block(int, int, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; g2o::SparseBlockMatrix<MatrixType>::SparseMatrixBlock = Eigen::Matrix<double, -1, -1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.cpp:174:57:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > > >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > > >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Matrix<double, -1, 1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Matrix<double, -1, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Src = Eigen::Matrix<double, -1, 1>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Src = Eigen::Matrix<double, -1, 1>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; OtherDerived = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Src = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:68:76:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 1>, 1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 1>, 1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::Product<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 1>, 1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::Product<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 1>, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::Product<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 1>, 1>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:391:29:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::Product<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 1>, 0>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 1>, 0>; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:537:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 1>, 0>; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:379:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 1>, 0>; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:74:26:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::constructQuadraticForm() [with int D = 3; E = Eigen::Matrix<double, 3, 1>; VertexXi = g2o::VertexSBAPointXYZ; VertexXj = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 1>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:391:29:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:537:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:379:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:77:52:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::constructQuadraticForm() [with int D = 3; E = Eigen::Matrix<double, 3, 1>; VertexXi = g2o::VertexSBAPointXYZ; VertexXj = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 2, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Matrix<double, 2, 2> >, Eigen::Matrix<double, 2, 1>, 1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 2, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Matrix<double, 2, 2> >, Eigen::Matrix<double, 2, 1>, 1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 2, 1>; SrcXprType = Eigen::Product<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Matrix<double, 2, 2> >, Eigen::Matrix<double, 2, 1>, 1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 2, 1>; SrcXprType = Eigen::Product<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Matrix<double, 2, 2> >, Eigen::Matrix<double, 2, 1>, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 2, 1>; Src = Eigen::Product<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Matrix<double, 2, 2> >, Eigen::Matrix<double, 2, 1>, 1>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:391:29:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 2, 1>; Src = Eigen::Product<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Matrix<double, 2, 2> >, Eigen::Matrix<double, 2, 1>, 0>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Matrix<double, 2, 2> >, Eigen::Matrix<double, 2, 1>, 0>; Derived = Eigen::Matrix<double, 2, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:537:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Matrix<double, 2, 2> >, Eigen::Matrix<double, 2, 1>, 0>; Derived = Eigen::Matrix<double, 2, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:379:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Matrix<double, 2, 2> >, Eigen::Matrix<double, 2, 1>, 0>; _Scalar = double; int _Rows = 2; int _Cols = 1; int _Options = 0; int _MaxRows = 2; int _MaxCols = 1]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:74:26:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::constructQuadraticForm() [with int D = 2; E = Eigen::Matrix<double, 2, 1>; VertexXi = g2o::VertexSBAPointXYZ; VertexXj = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 2, 0, 3, 2> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 2, 0, 3, 2> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 2, 0, 3, 2>; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 2, 0, 3, 2>; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 2, 0, 3, 2>; Src = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 1>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:391:29:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 2, 0, 3, 2>; Src = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>; Derived = Eigen::Matrix<double, 3, 2, 0, 3, 2>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:537:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>; Derived = Eigen::Matrix<double, 3, 2, 0, 3, 2>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:379:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>; _Scalar = double; int _Rows = 3; int _Cols = 2; int _Options = 0; int _MaxRows = 3; int _MaxCols = 2]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:77:52:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::constructQuadraticForm() [with int D = 2; E = Eigen::Matrix<double, 2, 1>; VertexXi = g2o::VertexSBAPointXYZ; VertexXj = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Matrix<double, 6, 6> >, Eigen::Matrix<double, 6, 1>, 1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Matrix<double, 6, 6> >, Eigen::Matrix<double, 6, 1>, 1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 1>; SrcXprType = Eigen::Product<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Matrix<double, 6, 6> >, Eigen::Matrix<double, 6, 1>, 1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 1>; SrcXprType = Eigen::Product<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Matrix<double, 6, 6> >, Eigen::Matrix<double, 6, 1>, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 6, 1>; Src = Eigen::Product<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Matrix<double, 6, 6> >, Eigen::Matrix<double, 6, 1>, 1>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:391:29:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 6, 1>; Src = Eigen::Product<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Matrix<double, 6, 6> >, Eigen::Matrix<double, 6, 1>, 0>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Matrix<double, 6, 6> >, Eigen::Matrix<double, 6, 1>, 0>; Derived = Eigen::Matrix<double, 6, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:537:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Matrix<double, 6, 6> >, Eigen::Matrix<double, 6, 1>, 0>; Derived = Eigen::Matrix<double, 6, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:379:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Matrix<double, 6, 6> >, Eigen::Matrix<double, 6, 1>, 0>; _Scalar = double; int _Rows = 6; int _Cols = 1; int _Options = 0; int _MaxRows = 6; int _MaxCols = 1]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:74:26:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::constructQuadraticForm() [with int D = 6; E = g2o::SE3Quat; VertexXi = g2o::VertexSE3Expmap; VertexXj = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 6> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 6, 6>, 1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 6> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 6, 6>, 1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 6>; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 6, 6>, 1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 6>; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 6, 6>, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 6, 6>; Src = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 6, 6>, 1>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:391:29:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 6, 6>; Src = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 6, 6>, 0>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 6, 6>, 0>; Derived = Eigen::Matrix<double, 6, 6>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:537:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 6, 6>, 0>; Derived = Eigen::Matrix<double, 6, 6>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:379:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 6, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 6, 6>, 0>; _Scalar = double; int _Rows = 6; int _Cols = 6; int _Options = 0; int _MaxRows = 6; int _MaxCols = 6]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:77:52:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::constructQuadraticForm() [with int D = 6; E = g2o::SE3Quat; VertexXi = g2o::VertexSE3Expmap; VertexXj = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 2, 0, 3, 2> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 2, 0, 3, 2> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 2, 0, 3, 2> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 2, 0, 3, 2> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 2, 0, 3, 2>; SrcXprType = Eigen::Matrix<double, 3, 2, 0, 3, 2>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 2, 0, 3, 2>; SrcXprType = Eigen::Matrix<double, 3, 2, 0, 3, 2>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 2, 0, 3, 2>; Src = Eigen::Matrix<double, 3, 2, 0, 3, 2>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 2, 0, 3, 2>; Derived = Eigen::Matrix<double, 3, 2, 0, 3, 2>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:278:27:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = 3; int _Cols = 2; int _Options = 0; int _MaxRows = 3; int _MaxCols = 2]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:77:52:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::constructQuadraticForm() [with int D = 2; E = Eigen::Matrix<double, 2, 1>; VertexXi = g2o::VertexSBAPointXYZ; VertexXj = g2o::VertexSim3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:239:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 6, 1> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 6, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 6, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 6, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 6, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 6, 1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:710:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 6, 1> >; Derived = Eigen::Matrix<double, 6, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 6, 1> >; _Scalar = double; int _Rows = 6; int _Cols = 1; int _Options = 0; int _MaxRows = 6; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:327:20:   required from ‘Derived& Eigen::DenseBase<Derived>::setConstant(const Scalar&) [with Derived = Eigen::Matrix<double, 6, 1>; Eigen::DenseBase<Derived>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:501:21:   required from ‘Derived& Eigen::DenseBase<Derived>::setZero() [with Derived = Eigen::Matrix<double, 6, 1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.hpp:48:3:   required from ‘void g2o::BaseVertex<D, T>::clearQuadraticForm() [with int D = 6; T = g2o::SE3Quat]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 2, 2> >, Eigen::internal::evaluator<Eigen::Matrix<double, 2, 2> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 2, 2> >, Eigen::internal::evaluator<Eigen::Matrix<double, 2, 2> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 2, 2>; SrcXprType = Eigen::Matrix<double, 2, 2>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 2, 2>; SrcXprType = Eigen::Matrix<double, 2, 2>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 2, 2>; Src = Eigen::Matrix<double, 2, 2>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 2, 2>; Derived = Eigen::Matrix<double, 2, 2>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:278:27:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = 2; int _Cols = 2; int _Options = 0; int _MaxRows = 2; int _MaxCols = 2]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:95:23:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::constructQuadraticForm() [with int D = 2; E = Eigen::Matrix<double, 2, 1>; VertexXi = g2o::VertexSBAPointXYZ; VertexXj = g2o::VertexSim3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:239:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 2, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 2, 1> > >, Eigen::internal::mul_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 2, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 2, 1> > >, Eigen::internal::mul_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 2, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 2, 1> >; Functor = Eigen::internal::mul_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 2, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 2, 1> >; Functor = Eigen::internal::mul_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 2, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 2, 1> >; Func = Eigen::internal::mul_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 2, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 2, 1> >; Func = Eigen::internal::mul_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:21:28:   required from ‘Derived& Eigen::DenseBase<Derived>::operator*=(const Scalar&) [with Derived = Eigen::Matrix<double, 2, 1>; Eigen::DenseBase<Derived>::Scalar = double]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:99:15:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::constructQuadraticForm() [with int D = 2; E = Eigen::Matrix<double, 2, 1>; VertexXi = g2o::VertexSBAPointXYZ; VertexXj = g2o::VertexSim3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:239:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 2, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 2, 1> >, Eigen::internal::sub_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 2, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 2, 1> >, Eigen::internal::sub_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 2, 1>; SrcXprType = Eigen::Matrix<double, 2, 1>; Functor = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 2, 1>; SrcXprType = Eigen::Matrix<double, 2, 1>; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 2, 1>; Src = Eigen::Matrix<double, 2, 1>; Func = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 2, 1>; Src = Eigen::Matrix<double, 2, 1>; Func = Eigen::internal::sub_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:164:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator-=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 2, 1>; Derived = Eigen::Matrix<double, 2, 1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:168:16:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::linearizeOplus() [with int D = 2; E = Eigen::Matrix<double, 2, 1>; VertexXi = g2o::VertexSBAPointXYZ; VertexXj = g2o::VertexSim3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:239:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 7, 7, 0, 7, 7> >, Eigen::internal::evaluator<Eigen::Matrix<double, 7, 7, 0, 7, 7> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 7, 7, 0, 7, 7> >, Eigen::internal::evaluator<Eigen::Matrix<double, 7, 7, 0, 7, 7> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 7, 7, 0, 7, 7>; SrcXprType = Eigen::Matrix<double, 7, 7, 0, 7, 7>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 7, 7, 0, 7, 7>; SrcXprType = Eigen::Matrix<double, 7, 7, 0, 7, 7>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 7, 7, 0, 7, 7>; Src = Eigen::Matrix<double, 7, 7, 0, 7, 7>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 7, 7, 0, 7, 7>; Derived = Eigen::Matrix<double, 7, 7, 0, 7, 7>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:278:27:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = 7; int _Cols = 7; int _Options = 0; int _MaxRows = 7; int _MaxCols = 7]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:77:52:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::constructQuadraticForm() [with int D = 7; E = g2o::Sim3; VertexXi = g2o::VertexSim3Expmap; VertexXj = g2o::VertexSim3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:239:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 7, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 7, 1> > >, Eigen::internal::mul_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 7, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 7, 1> > >, Eigen::internal::mul_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 7, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 7, 1> >; Functor = Eigen::internal::mul_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 7, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 7, 1> >; Functor = Eigen::internal::mul_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 7, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 7, 1> >; Func = Eigen::internal::mul_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 7, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 7, 1> >; Func = Eigen::internal::mul_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:21:28:   required from ‘Derived& Eigen::DenseBase<Derived>::operator*=(const Scalar&) [with Derived = Eigen::Matrix<double, 7, 1>; Eigen::DenseBase<Derived>::Scalar = double]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:99:15:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::constructQuadraticForm() [with int D = 7; E = g2o::Sim3; VertexXi = g2o::VertexSim3Expmap; VertexXj = g2o::VertexSim3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:239:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 7, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 7, 1> >, Eigen::internal::sub_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 7, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 7, 1> >, Eigen::internal::sub_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 7, 1>; SrcXprType = Eigen::Matrix<double, 7, 1>; Functor = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 7, 1>; SrcXprType = Eigen::Matrix<double, 7, 1>; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 7, 1>; Src = Eigen::Matrix<double, 7, 1>; Func = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 7, 1>; Src = Eigen::Matrix<double, 7, 1>; Func = Eigen::internal::sub_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:164:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator-=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 7, 1>; Derived = Eigen::Matrix<double, 7, 1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:168:16:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::linearizeOplus() [with int D = 7; E = g2o::Sim3; VertexXi = g2o::VertexSim3Expmap; VertexXj = g2o::VertexSim3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:239:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 2, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::Matrix<double, 2, 1> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 2, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::Matrix<double, 2, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 2, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::Matrix<double, 2, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 2, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::Matrix<double, 2, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 2, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::Matrix<double, 2, 1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 2, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::Matrix<double, 2, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 2, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::Matrix<double, 2, 1> >]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::Matrix<double, 2, 1> >; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 2, 1, true>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:172:31:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::linearizeOplus() [with int D = 2; E = Eigen::Matrix<double, 2, 1>; VertexXi = g2o::VertexSBAPointXYZ; VertexXj = g2o::VertexSim3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:239:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> >, 2, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::Matrix<double, 2, 1> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> >, 2, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::Matrix<double, 2, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> >, 2, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::Matrix<double, 2, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> >, 2, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::Matrix<double, 2, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> >, 2, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::Matrix<double, 2, 1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> >, 2, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::Matrix<double, 2, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> >, 2, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::Matrix<double, 2, 1> >]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::Matrix<double, 2, 1> >; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> >, 2, 1, true>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:196:31:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::linearizeOplus() [with int D = 2; E = Eigen::Matrix<double, 2, 1>; VertexXi = g2o::VertexSBAPointXYZ; VertexXj = g2o::VertexSim3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:239:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 6> >, Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 6> >, Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 6>; SrcXprType = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 6>; SrcXprType = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 6, 6>; Src = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; Derived = Eigen::Matrix<double, 6, 6>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/DenseBase.h:406:48:   required from ‘Eigen::DenseBase<Derived>::EvalReturnType Eigen::DenseBase<Derived>::eval() const [with Derived = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; Eigen::DenseBase<Derived>::EvalReturnType = const Eigen::Matrix<double, 6, 6>]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:591:40:   required from ‘const Eigen::PartialPivLU<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::partialPivLu() const [with Derived = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, 6, 6>]’
/usr/local/include/eigen3/Eigen/src/LU/Determinant.h:41:29:   required from ‘static typename Eigen::internal::traits<T>::Scalar Eigen::internal::determinant_impl<Derived, DeterminantType>::run(const Derived&) [with Derived = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; int DeterminantType = 6; typename Eigen::internal::traits<T>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/LU/Determinant.h:96:86:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::MatrixBase<Derived>::determinant() const [with Derived = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; typename Eigen::internal::traits<T>::Scalar = double]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:69:76:   required from ‘double g2o::BaseVertex<D, T>::hessianDeterminant() const [with int D = 6; T = g2o::SE3Quat]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
[  7%] Building CXX object Thirdparty/g2o/CMakeFiles/g2o.dir/g2o/core/matrix_structure.cpp.o
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> >, 7, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 7, 1> >, const Eigen::Matrix<double, 7, 1> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> >, 7, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 7, 1> >, const Eigen::Matrix<double, 7, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> >, 7, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 7, 1> >, const Eigen::Matrix<double, 7, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> >, 7, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 7, 1> >, const Eigen::Matrix<double, 7, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> >, 7, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 7, 1> >, const Eigen::Matrix<double, 7, 1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> >, 7, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 7, 1> >, const Eigen::Matrix<double, 7, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> >, 7, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 7, 1> >, const Eigen::Matrix<double, 7, 1> >]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 7, 1> >, const Eigen::Matrix<double, 7, 1> >; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> >, 7, 1, true>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:172:31:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::linearizeOplus() [with int D = 7; E = g2o::Sim3; VertexXi = g2o::VertexSim3Expmap; VertexXj = g2o::VertexSim3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:239:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 7, 7, 0, 7, 7> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 7, 7, 0, 7, 7> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 7, 7, 0, 7, 7> > > > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 7, 7, 0, 7, 7> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 7, 7, 0, 7, 7> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 7, 7, 0, 7, 7> > > > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 7, 7, 0, 7, 7>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 7, 7, 0, 7, 7> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 7, 7, 0, 7, 7> > > >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 7, 7, 0, 7, 7>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 7, 7, 0, 7, 7> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 7, 7, 0, 7, 7> > > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 7, 7, 0, 7, 7>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 7, 7, 0, 7, 7> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 7, 7, 0, 7, 7> > > >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 7, 7, 0, 7, 7> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 7, 7, 0, 7, 7> > > >; Derived = Eigen::Matrix<double, 7, 7, 0, 7, 7>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:537:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 7, 7, 0, 7, 7> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 7, 7, 0, 7, 7> > > >; Derived = Eigen::Matrix<double, 7, 7, 0, 7, 7>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:379:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 7, 7, 0, 7, 7> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 7, 7, 0, 7, 7> > > >; _Scalar = double; int _Rows = 7; int _Cols = 7; int _Options = 0; int _MaxRows = 7; int _MaxCols = 7]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.hpp:37:25:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 7; T = g2o::Sim3]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:239:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 3, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> > > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 3, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> > > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 3, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> > >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 3, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 3, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> > >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 3, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> > >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 3, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> > >]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> > >; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 3, 1, true>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_unary_edge.hpp:116:29:   required from ‘void g2o::BaseUnaryEdge<D, E, VertexXi>::linearizeOplus() [with int D = 3; E = Eigen::Matrix<double, 3, 1>; VertexXi = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:239:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 2, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Matrix<double, 2, 1> > > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 2, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Matrix<double, 2, 1> > > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 2, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Matrix<double, 2, 1> > >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 2, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Matrix<double, 2, 1> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 2, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Matrix<double, 2, 1> > >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 2, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Matrix<double, 2, 1> > >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 2, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Matrix<double, 2, 1> > >]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Matrix<double, 2, 1> > >; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 2, 1, true>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_unary_edge.hpp:116:29:   required from ‘void g2o::BaseUnaryEdge<D, E, VertexXi>::linearizeOplus() [with int D = 2; E = Eigen::Matrix<double, 2, 1>; VertexXi = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:239:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 1>, 1> >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 1>, 1> >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 1>, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 1>, 1>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 1>, 1>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:398:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::addTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, 3, 1>; Lhs = Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >; Rhs = Eigen::Matrix<double, 2, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:163:42:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::add_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<double, 3, 1>; Lhs = Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >; Rhs = Eigen::Matrix<double, 2, 1>; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 1>, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 1>, 0>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:50:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator+=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 1>, 0>; ExpressionType = Eigen::Matrix<double, 3, 1>; StorageBase = Eigen::MatrixBase]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:78:29:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::constructQuadraticForm() [with int D = 2; E = Eigen::Matrix<double, 2, 1>; VertexXi = g2o::VertexSBAPointXYZ; VertexXj = g2o::VertexSim3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:239:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<double, 3, 2, 0, 3, 2>, Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<double, 3, 2, 0, 3, 2>, Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Matrix<double, 3, 2, 0, 3, 2>, Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Matrix<double, 3, 2, 0, 3, 2>, Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Matrix<double, 3, 2, 0, 3, 2>, Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 1>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:398:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::addTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Matrix<double, 3, 2, 0, 3, 2>; Rhs = Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:163:42:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::add_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Matrix<double, 3, 2, 0, 3, 2>; Rhs = Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Matrix<double, 3, 2, 0, 3, 2>, Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Matrix<double, 3, 2, 0, 3, 2>, Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 0>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:50:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator+=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, 3, 2, 0, 3, 2>, Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 0>; ExpressionType = Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >; StorageBase = Eigen::MatrixBase]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:79:29:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::constructQuadraticForm() [with int D = 2; E = Eigen::Matrix<double, 2, 1>; VertexXi = g2o::VertexSBAPointXYZ; VertexXj = g2o::VertexSim3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:239:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 7, 3, 0, 7, 3>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Transpose<Eigen::Matrix<double, 3, 2, 0, 3, 2> >, 1> >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 7, 3, 0, 7, 3>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Transpose<Eigen::Matrix<double, 3, 2, 0, 3, 2> >, 1> >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 7, 3, 0, 7, 3>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Transpose<Eigen::Matrix<double, 3, 2, 0, 3, 2> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 7, 3, 0, 7, 3>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Transpose<Eigen::Matrix<double, 3, 2, 0, 3, 2> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 7, 3, 0, 7, 3>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Transpose<Eigen::Matrix<double, 3, 2, 0, 3, 2> >, 1>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:398:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::addTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Map<Eigen::Matrix<double, 7, 3, 0, 7, 3>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> > >; Rhs = Eigen::Transpose<Eigen::Matrix<double, 3, 2, 0, 3, 2> >]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:163:42:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::add_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 7, 3, 0, 7, 3>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> > >; Rhs = Eigen::Transpose<Eigen::Matrix<double, 3, 2, 0, 3, 2> >; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Transpose<Eigen::Matrix<double, 3, 2, 0, 3, 2> >, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 7, 3, 0, 7, 3>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Transpose<Eigen::Matrix<double, 3, 2, 0, 3, 2> >, 0>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:50:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator+=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Transpose<Eigen::Matrix<double, 3, 2, 0, 3, 2> >, 0>; ExpressionType = Eigen::Map<Eigen::Matrix<double, 7, 3, 0, 7, 3>, 0, Eigen::Stride<0, 0> >; StorageBase = Eigen::MatrixBase]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:82:42:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::constructQuadraticForm() [with int D = 2; E = Eigen::Matrix<double, 2, 1>; VertexXi = g2o::VertexSBAPointXYZ; VertexXj = g2o::VertexSim3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:239:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 3, 7, 0, 3, 7>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<double, 3, 2, 0, 3, 2>, Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 3, 7, 0, 3, 7>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<double, 3, 2, 0, 3, 2>, Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 3, 7, 0, 3, 7>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Matrix<double, 3, 2, 0, 3, 2>, Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 3, 7, 0, 3, 7>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Matrix<double, 3, 2, 0, 3, 2>, Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 3, 7, 0, 3, 7>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Matrix<double, 3, 2, 0, 3, 2>, Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> >, 1>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:398:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::addTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Map<Eigen::Matrix<double, 3, 7, 0, 3, 7>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Matrix<double, 3, 2, 0, 3, 2>; Rhs = Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> >]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:163:42:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::add_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 3, 7, 0, 3, 7>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Matrix<double, 3, 2, 0, 3, 2>; Rhs = Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> >; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Matrix<double, 3, 2, 0, 3, 2>, Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> >, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 3, 7, 0, 3, 7>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Matrix<double, 3, 2, 0, 3, 2>, Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> >, 0>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:50:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator+=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, 3, 2, 0, 3, 2>, Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> >, 0>; ExpressionType = Eigen::Map<Eigen::Matrix<double, 3, 7, 0, 3, 7>, 0, Eigen::Stride<0, 0> >; StorageBase = Eigen::MatrixBase]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:84:32:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::constructQuadraticForm() [with int D = 2; E = Eigen::Matrix<double, 2, 1>; VertexXi = g2o::VertexSBAPointXYZ; VertexXj = g2o::VertexSim3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:239:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 7, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 1>, 1> >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 7, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 1>, 1> >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 7, 1>; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 1>, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 7, 1>; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 1>, 1>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 7, 1>; Src = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 1>, 1>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:398:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::addTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, 7, 1>; Lhs = Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> > >; Rhs = Eigen::Matrix<double, 2, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:163:42:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::add_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<double, 7, 1>; Lhs = Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> > >; Rhs = Eigen::Matrix<double, 2, 1>; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 1>, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 7, 1>; Src = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 1>, 0>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:50:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator+=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 1>, 0>; ExpressionType = Eigen::Matrix<double, 7, 1>; StorageBase = Eigen::MatrixBase]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:88:27:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::constructQuadraticForm() [with int D = 2; E = Eigen::Matrix<double, 2, 1>; VertexXi = g2o::VertexSBAPointXYZ; VertexXj = g2o::VertexSim3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:239:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> >, 1>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:398:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::addTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>; Rhs = Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> >]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:163:42:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::add_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>; Rhs = Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> >; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> >, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> >, 0>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:50:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator+=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> >, 0>; ExpressionType = Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> >; StorageBase = Eigen::MatrixBase]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:89:27:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::constructQuadraticForm() [with int D = 2; E = Eigen::Matrix<double, 2, 1>; VertexXi = g2o::VertexSBAPointXYZ; VertexXj = g2o::VertexSim3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:239:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 2, 2> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 2> >, const Eigen::Matrix<double, 2, 2> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 2, 2> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 2> >, const Eigen::Matrix<double, 2, 2> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 2, 2>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 2> >, const Eigen::Matrix<double, 2, 2> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 2, 2>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 2> >, const Eigen::Matrix<double, 2, 2> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 2, 2>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 2> >, const Eigen::Matrix<double, 2, 2> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 2> >, const Eigen::Matrix<double, 2, 2> >; Derived = Eigen::Matrix<double, 2, 2>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:537:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 2> >, const Eigen::Matrix<double, 2, 2> >; Derived = Eigen::Matrix<double, 2, 2>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:379:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 2> >, const Eigen::Matrix<double, 2, 2> >; _Scalar = double; int _Rows = 2; int _Cols = 2; int _Options = 0; int _MaxRows = 2; int _MaxCols = 2]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_edge.h:98:25:   required from ‘g2o::BaseEdge<D, E>::InformationType g2o::BaseEdge<D, E>::robustInformation(const Vector3d&) [with int D = 2; E = Eigen::Matrix<double, 2, 1>; g2o::BaseEdge<D, E>::InformationType = Eigen::Matrix<double, 2, 2>; Eigen::Vector3d = Eigen::Matrix<double, 3, 1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:95:23:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::constructQuadraticForm() [with int D = 2; E = Eigen::Matrix<double, 2, 1>; VertexXi = g2o::VertexSBAPointXYZ; VertexXj = g2o::VertexSim3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:239:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 1>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:398:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::addTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>; Rhs = Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:163:42:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::add_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>; Rhs = Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 0>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:50:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator+=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 0>; ExpressionType = Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >; StorageBase = Eigen::MatrixBase]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:102:29:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::constructQuadraticForm() [with int D = 2; E = Eigen::Matrix<double, 2, 1>; VertexXi = g2o::VertexSBAPointXYZ; VertexXj = g2o::VertexSim3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:239:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 7, 3, 0, 7, 3>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 7, 3, 0, 7, 3>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 7, 3, 0, 7, 3>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 7, 3, 0, 7, 3>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 7, 3, 0, 7, 3>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 1>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:398:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::addTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Map<Eigen::Matrix<double, 7, 3, 0, 7, 3>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>; Rhs = Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:163:42:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::add_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 7, 3, 0, 7, 3>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>; Rhs = Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 7, 3, 0, 7, 3>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 0>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:50:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator+=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> >, 0>; ExpressionType = Eigen::Map<Eigen::Matrix<double, 7, 3, 0, 7, 3>, 0, Eigen::Stride<0, 0> >; StorageBase = Eigen::MatrixBase]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:105:42:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::constructQuadraticForm() [with int D = 2; E = Eigen::Matrix<double, 2, 1>; VertexXi = g2o::VertexSBAPointXYZ; VertexXj = g2o::VertexSim3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:239:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 3, 7, 0, 3, 7>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 3, 7, 0, 3, 7>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 3, 7, 0, 3, 7>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 3, 7, 0, 3, 7>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 3, 7, 0, 3, 7>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> >, 1>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:398:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::addTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Map<Eigen::Matrix<double, 3, 7, 0, 3, 7>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>; Rhs = Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> >]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:163:42:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::add_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 3, 7, 0, 3, 7>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>; Rhs = Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> >; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> >, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 3, 7, 0, 3, 7>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> >, 0>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:50:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator+=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> >, 0>; ExpressionType = Eigen::Map<Eigen::Matrix<double, 3, 7, 0, 3, 7>, 0, Eigen::Stride<0, 0> >; StorageBase = Eigen::MatrixBase]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:107:32:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::constructQuadraticForm() [with int D = 2; E = Eigen::Matrix<double, 2, 1>; VertexXi = g2o::VertexSBAPointXYZ; VertexXj = g2o::VertexSim3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:239:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 7, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 7, 1>, 1> >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 7, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 7, 1>, 1> >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 7, 1>; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 7, 1>, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 7, 1>; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 7, 1>, 1>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 7, 1>; Src = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 7, 1>, 1>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:398:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::addTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, 7, 1>; Lhs = Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> > >; Rhs = Eigen::Matrix<double, 7, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:163:42:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::add_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<double, 7, 1>; Lhs = Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> > >; Rhs = Eigen::Matrix<double, 7, 1>; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 7, 1>, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 7, 1>; Src = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 7, 1>, 0>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:50:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator+=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 7, 1>, 0>; ExpressionType = Eigen::Matrix<double, 7, 1>; StorageBase = Eigen::MatrixBase]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:78:29:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::constructQuadraticForm() [with int D = 7; E = g2o::Sim3; VertexXi = g2o::VertexSim3Expmap; VertexXj = g2o::VertexSim3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:239:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<double, 7, 7, 0, 7, 7>, Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<double, 7, 7, 0, 7, 7>, Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Matrix<double, 7, 7, 0, 7, 7>, Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Matrix<double, 7, 7, 0, 7, 7>, Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Matrix<double, 7, 7, 0, 7, 7>, Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> >, 1>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:398:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::addTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Matrix<double, 7, 7, 0, 7, 7>; Rhs = Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> >]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:163:42:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::add_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Matrix<double, 7, 7, 0, 7, 7>; Rhs = Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> >; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Matrix<double, 7, 7, 0, 7, 7>, Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> >, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Matrix<double, 7, 7, 0, 7, 7>, Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> >, 0>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:50:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator+=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, 7, 7, 0, 7, 7>, Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> >, 0>; ExpressionType = Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> >; StorageBase = Eigen::MatrixBase]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:79:29:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::constructQuadraticForm() [with int D = 7; E = g2o::Sim3; VertexXi = g2o::VertexSim3Expmap; VertexXj = g2o::VertexSim3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:239:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Transpose<Eigen::Matrix<double, 7, 7, 0, 7, 7> >, 1> >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Transpose<Eigen::Matrix<double, 7, 7, 0, 7, 7> >, 1> >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Transpose<Eigen::Matrix<double, 7, 7, 0, 7, 7> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Transpose<Eigen::Matrix<double, 7, 7, 0, 7, 7> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Transpose<Eigen::Matrix<double, 7, 7, 0, 7, 7> >, 1>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:398:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::addTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> > >; Rhs = Eigen::Transpose<Eigen::Matrix<double, 7, 7, 0, 7, 7> >]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:163:42:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::add_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> > >; Rhs = Eigen::Transpose<Eigen::Matrix<double, 7, 7, 0, 7, 7> >; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Transpose<Eigen::Matrix<double, 7, 7, 0, 7, 7> >, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Transpose<Eigen::Matrix<double, 7, 7, 0, 7, 7> >, 0>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:50:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator+=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Transpose<Eigen::Matrix<double, 7, 7, 0, 7, 7> >, 0>; ExpressionType = Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> >; StorageBase = Eigen::MatrixBase]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:82:42:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::constructQuadraticForm() [with int D = 7; E = g2o::Sim3; VertexXi = g2o::VertexSim3Expmap; VertexXj = g2o::VertexSim3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:239:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0>, Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0>, Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0>, Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0>, Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0>, Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> >, 1>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:398:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::addTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0>; Rhs = Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> >]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:163:42:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::add_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0>; Rhs = Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> >; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0>, Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> >, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0>, Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> >, 0>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:50:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator+=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0>, Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> >, 0>; ExpressionType = Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> >; StorageBase = Eigen::MatrixBase]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:89:27:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::constructQuadraticForm() [with int D = 7; E = g2o::Sim3; VertexXi = g2o::VertexSim3Expmap; VertexXj = g2o::VertexSim3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:239:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 7, 7, 0, 7, 7> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 7, 7, 0, 7, 7> >, const Eigen::Matrix<double, 7, 7, 0, 7, 7> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 7, 7, 0, 7, 7> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 7, 7, 0, 7, 7> >, const Eigen::Matrix<double, 7, 7, 0, 7, 7> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 7, 7, 0, 7, 7>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 7, 7, 0, 7, 7> >, const Eigen::Matrix<double, 7, 7, 0, 7, 7> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 7, 7, 0, 7, 7>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 7, 7, 0, 7, 7> >, const Eigen::Matrix<double, 7, 7, 0, 7, 7> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 7, 7, 0, 7, 7>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 7, 7, 0, 7, 7> >, const Eigen::Matrix<double, 7, 7, 0, 7, 7> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 7, 7, 0, 7, 7> >, const Eigen::Matrix<double, 7, 7, 0, 7, 7> >; Derived = Eigen::Matrix<double, 7, 7, 0, 7, 7>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:537:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 7, 7, 0, 7, 7> >, const Eigen::Matrix<double, 7, 7, 0, 7, 7> >; Derived = Eigen::Matrix<double, 7, 7, 0, 7, 7>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:379:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 7, 7, 0, 7, 7> >, const Eigen::Matrix<double, 7, 7, 0, 7, 7> >; _Scalar = double; int _Rows = 7; int _Cols = 7; int _Options = 0; int _MaxRows = 7; int _MaxCols = 7]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_edge.h:98:25:   required from ‘g2o::BaseEdge<D, E>::InformationType g2o::BaseEdge<D, E>::robustInformation(const Vector3d&) [with int D = 7; E = g2o::Sim3; g2o::BaseEdge<D, E>::InformationType = Eigen::Matrix<double, 7, 7, 0, 7, 7>; Eigen::Vector3d = Eigen::Matrix<double, 3, 1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:95:23:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::constructQuadraticForm() [with int D = 7; E = g2o::Sim3; VertexXi = g2o::VertexSim3Expmap; VertexXj = g2o::VertexSim3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:239:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
[  8%] Building CXX object Thirdparty/g2o/CMakeFiles/g2o.dir/g2o/core/batch_stats.cpp.o
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 6, 1> > >, Eigen::internal::div_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 6, 1> > >, Eigen::internal::div_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, 1, false>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 6, 1> >; Functor = Eigen::internal::div_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, 1, false>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 6, 1> >; Functor = Eigen::internal::div_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, 1, false>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 6, 1> >; Func = Eigen::internal::div_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, 1, false>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 6, 1> >; Func = Eigen::internal::div_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:45:28:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:396:68:   required from ‘static bool Eigen::internal::LLT_Traits<MatrixType, 1>::inplace_decomposition(MatrixType&) [with MatrixType = Eigen::Matrix<double, 6, 6>]’
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:443:42:   required from ‘Eigen::LLT<MatrixType, _UpLo>& Eigen::LLT<MatrixType, UpLo>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, 6, 6>; _MatrixType = Eigen::Matrix<double, 6, 6>; int _UpLo = 1]’
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:96:14:   required from ‘Eigen::LLT<MatrixType, UpLo>::LLT(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, 6, 6>; _MatrixType = Eigen::Matrix<double, 6, 6>; int _UpLo = 1]’
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:517:10:   required from ‘const Eigen::LLT<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::llt() const [with Derived = Eigen::Matrix<double, 6, 6>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, 6, 6>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.hpp:41:40:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 6; T = g2o::SE3Quat]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 6, 1> > >, Eigen::internal::div_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 6, 1> > >, Eigen::internal::div_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>, -1, 1, false>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 6, 1> >; Functor = Eigen::internal::div_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>, -1, 1, false>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 6, 1> >; Functor = Eigen::internal::div_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>, -1, 1, false>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 6, 1> >; Func = Eigen::internal::div_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>, -1, 1, false>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 6, 1> >; Func = Eigen::internal::div_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:45:28:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:396:68:   required from ‘static bool Eigen::internal::LLT_Traits<MatrixType, 1>::inplace_decomposition(MatrixType&) [with MatrixType = Eigen::Matrix<double, 6, 6>]’
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:443:42:   required from ‘Eigen::LLT<MatrixType, _UpLo>& Eigen::LLT<MatrixType, UpLo>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, 6, 6>; _MatrixType = Eigen::Matrix<double, 6, 6>; int _UpLo = 1]’
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:96:14:   required from ‘Eigen::LLT<MatrixType, UpLo>::LLT(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, 6, 6>; _MatrixType = Eigen::Matrix<double, 6, 6>; int _UpLo = 1]’
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:517:10:   required from ‘const Eigen::LLT<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::llt() const [with Derived = Eigen::Matrix<double, 6, 6>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, 6, 6>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.hpp:41:40:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 6; T = g2o::SE3Quat]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:537:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:379:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_edge.h:98:25:   required from ‘g2o::BaseEdge<D, E>::InformationType g2o::BaseEdge<D, E>::robustInformation(const Vector3d&) [with int D = 3; E = Eigen::Matrix<double, 3, 1>; g2o::BaseEdge<D, E>::InformationType = Eigen::Matrix<double, 3, 3>; Eigen::Vector3d = Eigen::Matrix<double, 3, 1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_unary_edge.hpp:60:23:   required from ‘void g2o::BaseUnaryEdge<D, E, VertexXi>::constructQuadraticForm() [with int D = 3; E = Eigen::Matrix<double, 3, 1>; VertexXi = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:239:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 3, 1, 6, 3> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Matrix<double, 3, 1>, 1> >, Eigen::internal::sub_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 3, 1, 6, 3> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Matrix<double, 3, 1>, 1> >, Eigen::internal::sub_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 1>; SrcXprType = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 3, 1, 6, 3> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Matrix<double, 3, 1>, 1>; Functor = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 1>; SrcXprType = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 3, 1, 6, 3> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Matrix<double, 3, 1>, 1>; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 6, 1>; Src = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 3, 1, 6, 3> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Matrix<double, 3, 1>, 1>; Func = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:405:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::subTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, 6, 1>; Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 3, 1, 6, 3> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 3, 3>, 0>; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:178:42:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::sub_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::sub_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<double, 6, 1>; Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 3, 1, 6, 3> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 3, 3>, 0>; Rhs = Eigen::Matrix<double, 3, 1>; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::sub_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 3, 1, 6, 3> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Matrix<double, 3, 1>, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 6, 1>; Src = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 3, 1, 6, 3> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Matrix<double, 3, 1>, 0>; Func = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:58:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator-=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 3, 1, 6, 3> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Matrix<double, 3, 1>, 0>; ExpressionType = Eigen::Matrix<double, 6, 1>; StorageBase = Eigen::MatrixBase]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_unary_edge.hpp:62:27:   required from ‘void g2o::BaseUnaryEdge<D, E, VertexXi>::constructQuadraticForm() [with int D = 3; E = Eigen::Matrix<double, 3, 1>; VertexXi = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:239:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 1>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:398:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::addTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>; Rhs = Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:163:42:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::add_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>; Rhs = Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 0>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:50:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator+=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 0>; ExpressionType = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; StorageBase = Eigen::MatrixBase]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_unary_edge.hpp:63:27:   required from ‘void g2o::BaseUnaryEdge<D, E, VertexXi>::constructQuadraticForm() [with int D = 3; E = Eigen::Matrix<double, 3, 1>; VertexXi = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:239:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Matrix<double, 3, 1>, 1> >, Eigen::internal::sub_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Matrix<double, 3, 1>, 1> >, Eigen::internal::sub_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 1>; SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Matrix<double, 3, 1>, 1>; Functor = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 1>; SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Matrix<double, 3, 1>, 1>; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 6, 1>; Src = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Matrix<double, 3, 1>, 1>; Func = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:405:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::subTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, 6, 1>; Lhs = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:178:42:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::sub_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::sub_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<double, 6, 1>; Lhs = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>; Rhs = Eigen::Matrix<double, 3, 1>; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::sub_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Matrix<double, 3, 1>, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 6, 1>; Src = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Matrix<double, 3, 1>, 0>; Func = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:58:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator-=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Matrix<double, 3, 1>, 0>; ExpressionType = Eigen::Matrix<double, 6, 1>; StorageBase = Eigen::MatrixBase]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_unary_edge.hpp:65:27:   required from ‘void g2o::BaseUnaryEdge<D, E, VertexXi>::constructQuadraticForm() [with int D = 3; E = Eigen::Matrix<double, 3, 1>; VertexXi = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:239:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 2, 1, 6, 2> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Matrix<double, 2, 1>, 1> >, Eigen::internal::sub_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 2, 1, 6, 2> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Matrix<double, 2, 1>, 1> >, Eigen::internal::sub_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 1>; SrcXprType = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 2, 1, 6, 2> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Matrix<double, 2, 1>, 1>; Functor = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 1>; SrcXprType = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 2, 1, 6, 2> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Matrix<double, 2, 1>, 1>; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 6, 1>; Src = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 2, 1, 6, 2> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Matrix<double, 2, 1>, 1>; Func = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:405:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::subTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, 6, 1>; Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 2, 1, 6, 2> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 2, 2>, 0>; Rhs = Eigen::Matrix<double, 2, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:178:42:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::sub_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::sub_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<double, 6, 1>; Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 2, 1, 6, 2> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 2, 2>, 0>; Rhs = Eigen::Matrix<double, 2, 1>; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::sub_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 2, 1, 6, 2> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Matrix<double, 2, 1>, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 6, 1>; Src = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 2, 1, 6, 2> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Matrix<double, 2, 1>, 0>; Func = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:58:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator-=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 2, 1, 6, 2> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Matrix<double, 2, 1>, 0>; ExpressionType = Eigen::Matrix<double, 6, 1>; StorageBase = Eigen::MatrixBase]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_unary_edge.hpp:62:27:   required from ‘void g2o::BaseUnaryEdge<D, E, VertexXi>::constructQuadraticForm() [with int D = 2; E = Eigen::Matrix<double, 2, 1>; VertexXi = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:239:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 1>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:398:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::addTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>; Rhs = Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:163:42:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::add_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>; Rhs = Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 0>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:50:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator+=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 0>; ExpressionType = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; StorageBase = Eigen::MatrixBase]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_unary_edge.hpp:63:27:   required from ‘void g2o::BaseUnaryEdge<D, E, VertexXi>::constructQuadraticForm() [with int D = 2; E = Eigen::Matrix<double, 2, 1>; VertexXi = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:239:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Matrix<double, 2, 1>, 1> >, Eigen::internal::sub_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Matrix<double, 2, 1>, 1> >, Eigen::internal::sub_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 1>; SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Matrix<double, 2, 1>, 1>; Functor = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 1>; SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Matrix<double, 2, 1>, 1>; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 6, 1>; Src = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Matrix<double, 2, 1>, 1>; Func = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:405:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::subTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, 6, 1>; Lhs = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>; Rhs = Eigen::Matrix<double, 2, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:178:42:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::sub_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::sub_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<double, 6, 1>; Lhs = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>; Rhs = Eigen::Matrix<double, 2, 1>; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::sub_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Matrix<double, 2, 1>, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 6, 1>; Src = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Matrix<double, 2, 1>, 0>; Func = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:58:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator-=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Matrix<double, 2, 1>, 0>; ExpressionType = Eigen::Matrix<double, 6, 1>; StorageBase = Eigen::MatrixBase]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_unary_edge.hpp:65:27:   required from ‘void g2o::BaseUnaryEdge<D, E, VertexXi>::constructQuadraticForm() [with int D = 2; E = Eigen::Matrix<double, 2, 1>; VertexXi = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:239:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 2, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Matrix<double, 2, 2> >, Eigen::Matrix<double, 2, 1>, 1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 2, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Matrix<double, 2, 2> >, Eigen::Matrix<double, 2, 1>, 1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 2, 1>; SrcXprType = Eigen::Product<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Matrix<double, 2, 2> >, Eigen::Matrix<double, 2, 1>, 1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 2, 1>; SrcXprType = Eigen::Product<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Matrix<double, 2, 2> >, Eigen::Matrix<double, 2, 1>, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 2, 1>; Src = Eigen::Product<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Matrix<double, 2, 2> >, Eigen::Matrix<double, 2, 1>, 1>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:391:29:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 2, 1>; Src = Eigen::Product<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Matrix<double, 2, 2> >, Eigen::Matrix<double, 2, 1>, 0>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Matrix<double, 2, 2> >, Eigen::Matrix<double, 2, 1>, 0>; Derived = Eigen::Matrix<double, 2, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:537:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Matrix<double, 2, 2> >, Eigen::Matrix<double, 2, 1>, 0>; Derived = Eigen::Matrix<double, 2, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:379:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Matrix<double, 2, 2> >, Eigen::Matrix<double, 2, 1>, 0>; _Scalar = double; int _Rows = 2; int _Cols = 1; int _Options = 0; int _MaxRows = 2; int _MaxCols = 1]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:74:26:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::constructQuadraticForm() [with int D = 2; E = Eigen::Matrix<double, 2, 1>; VertexXi = g2o::VertexSBAPointXYZ; VertexXj = g2o::VertexSim3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:239:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 2, 0, 3, 2> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 2, 0, 3, 2> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 2, 0, 3, 2>; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 2, 0, 3, 2>; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 2, 0, 3, 2>; Src = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 1>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:391:29:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 2, 0, 3, 2>; Src = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>; Derived = Eigen::Matrix<double, 3, 2, 0, 3, 2>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:537:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>; Derived = Eigen::Matrix<double, 3, 2, 0, 3, 2>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:379:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 3, 0, 2, 3>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>; _Scalar = double; int _Rows = 3; int _Cols = 2; int _Options = 0; int _MaxRows = 3; int _MaxCols = 2]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:77:52:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::constructQuadraticForm() [with int D = 2; E = Eigen::Matrix<double, 2, 1>; VertexXi = g2o::VertexSBAPointXYZ; VertexXj = g2o::VertexSim3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:239:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 7, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Matrix<double, 7, 7, 0, 7, 7> >, Eigen::Matrix<double, 7, 1>, 1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 7, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Matrix<double, 7, 7, 0, 7, 7> >, Eigen::Matrix<double, 7, 1>, 1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 7, 1>; SrcXprType = Eigen::Product<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Matrix<double, 7, 7, 0, 7, 7> >, Eigen::Matrix<double, 7, 1>, 1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 7, 1>; SrcXprType = Eigen::Product<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Matrix<double, 7, 7, 0, 7, 7> >, Eigen::Matrix<double, 7, 1>, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 7, 1>; Src = Eigen::Product<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Matrix<double, 7, 7, 0, 7, 7> >, Eigen::Matrix<double, 7, 1>, 1>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:391:29:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 7, 1>; Src = Eigen::Product<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Matrix<double, 7, 7, 0, 7, 7> >, Eigen::Matrix<double, 7, 1>, 0>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Matrix<double, 7, 7, 0, 7, 7> >, Eigen::Matrix<double, 7, 1>, 0>; Derived = Eigen::Matrix<double, 7, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:537:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Matrix<double, 7, 7, 0, 7, 7> >, Eigen::Matrix<double, 7, 1>, 0>; Derived = Eigen::Matrix<double, 7, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:379:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Matrix<double, 7, 7, 0, 7, 7> >, Eigen::Matrix<double, 7, 1>, 0>; _Scalar = double; int _Rows = 7; int _Cols = 1; int _Options = 0; int _MaxRows = 7; int _MaxCols = 1]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:74:26:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::constructQuadraticForm() [with int D = 7; E = g2o::Sim3; VertexXi = g2o::VertexSim3Expmap; VertexXj = g2o::VertexSim3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:239:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 7, 7, 0, 7, 7> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 7, 7, 0, 7, 7>, 1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 7, 7, 0, 7, 7> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 7, 7, 0, 7, 7>, 1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 7, 7, 0, 7, 7>; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 7, 7, 0, 7, 7>, 1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 7, 7, 0, 7, 7>; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 7, 7, 0, 7, 7>, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 7, 7, 0, 7, 7>; Src = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 7, 7, 0, 7, 7>, 1>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:391:29:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 7, 7, 0, 7, 7>; Src = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0>; Derived = Eigen::Matrix<double, 7, 7, 0, 7, 7>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:537:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0>; Derived = Eigen::Matrix<double, 7, 7, 0, 7, 7>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:379:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0>; _Scalar = double; int _Rows = 7; int _Cols = 7; int _Options = 0; int _MaxRows = 7; int _MaxCols = 7]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:77:52:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::constructQuadraticForm() [with int D = 7; E = g2o::Sim3; VertexXi = g2o::VertexSim3Expmap; VertexXj = g2o::VertexSim3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:239:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 7, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 7, 1> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 7, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 7, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 7, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 7, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 7, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 7, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 7, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 7, 1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:710:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 7, 1> >; Derived = Eigen::Matrix<double, 7, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 7, 1> >; _Scalar = double; int _Rows = 7; int _Cols = 1; int _Options = 0; int _MaxRows = 7; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:327:20:   required from ‘Derived& Eigen::DenseBase<Derived>::setConstant(const Scalar&) [with Derived = Eigen::Matrix<double, 7, 1>; Eigen::DenseBase<Derived>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:501:21:   required from ‘Derived& Eigen::DenseBase<Derived>::setZero() [with Derived = Eigen::Matrix<double, 7, 1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.hpp:48:3:   required from ‘void g2o::BaseVertex<D, T>::clearQuadraticForm() [with int D = 7; T = g2o::Sim3]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:239:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
[  9%] Building CXX object Thirdparty/g2o/CMakeFiles/g2o.dir/g2o/core/parameter.cpp.o
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 7, 7, 0, 7, 7> >, Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 7, 7, 0, 7, 7> >, Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 7, 7, 0, 7, 7>; SrcXprType = Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 7, 7, 0, 7, 7>; SrcXprType = Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 7, 7, 0, 7, 7>; Src = Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> >; Derived = Eigen::Matrix<double, 7, 7, 0, 7, 7>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/DenseBase.h:406:48:   required from ‘Eigen::DenseBase<Derived>::EvalReturnType Eigen::DenseBase<Derived>::eval() const [with Derived = Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> >; Eigen::DenseBase<Derived>::EvalReturnType = const Eigen::Matrix<double, 7, 7, 0, 7, 7>]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:591:40:   required from ‘const Eigen::PartialPivLU<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::partialPivLu() const [with Derived = Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> >; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, 7, 7, 0, 7, 7>]’
/usr/local/include/eigen3/Eigen/src/LU/Determinant.h:41:29:   required from ‘static typename Eigen::internal::traits<T>::Scalar Eigen::internal::determinant_impl<Derived, DeterminantType>::run(const Derived&) [with Derived = Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> >; int DeterminantType = 7; typename Eigen::internal::traits<T>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/LU/Determinant.h:96:86:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::MatrixBase<Derived>::determinant() const [with Derived = Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> >; typename Eigen::internal::traits<T>::Scalar = double]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:69:76:   required from ‘double g2o::BaseVertex<D, T>::hessianDeterminant() const [with int D = 7; T = g2o::Sim3]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:239:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
[ 10%] Building CXX object Thirdparty/g2o/CMakeFiles/g2o.dir/g2o/core/cache.cpp.o
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 7, 1> > >, Eigen::internal::div_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 7, 1> > >, Eigen::internal::div_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, -1, 1, false>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 7, 1> >; Functor = Eigen::internal::div_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, -1, 1, false>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 7, 1> >; Functor = Eigen::internal::div_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, -1, 1, false>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 7, 1> >; Func = Eigen::internal::div_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, -1, 1, false>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 7, 1> >; Func = Eigen::internal::div_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:45:28:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:396:68:   required from ‘static bool Eigen::internal::LLT_Traits<MatrixType, 1>::inplace_decomposition(MatrixType&) [with MatrixType = Eigen::Matrix<double, 7, 7, 0, 7, 7>]’
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:443:42:   required from ‘Eigen::LLT<MatrixType, _UpLo>& Eigen::LLT<MatrixType, UpLo>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, 7, 7, 0, 7, 7>; _MatrixType = Eigen::Matrix<double, 7, 7, 0, 7, 7>; int _UpLo = 1]’
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:96:14:   required from ‘Eigen::LLT<MatrixType, UpLo>::LLT(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, 7, 7, 0, 7, 7>; _MatrixType = Eigen::Matrix<double, 7, 7, 0, 7, 7>; int _UpLo = 1]’
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:517:10:   required from ‘const Eigen::LLT<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::llt() const [with Derived = Eigen::Matrix<double, 7, 7, 0, 7, 7>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, 7, 7, 0, 7, 7>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.hpp:41:40:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 7; T = g2o::Sim3]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:239:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, -1, -1, false>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 7, 1> > >, Eigen::internal::div_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, -1, -1, false>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 7, 1> > >, Eigen::internal::div_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, -1, -1, false>, -1, 1, false>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 7, 1> >; Functor = Eigen::internal::div_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, -1, -1, false>, -1, 1, false>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 7, 1> >; Functor = Eigen::internal::div_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, -1, -1, false>, -1, 1, false>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 7, 1> >; Func = Eigen::internal::div_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, -1, -1, false>, -1, 1, false>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 7, 1> >; Func = Eigen::internal::div_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:45:28:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:396:68:   required from ‘static bool Eigen::internal::LLT_Traits<MatrixType, 1>::inplace_decomposition(MatrixType&) [with MatrixType = Eigen::Matrix<double, 7, 7, 0, 7, 7>]’
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:443:42:   required from ‘Eigen::LLT<MatrixType, _UpLo>& Eigen::LLT<MatrixType, UpLo>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, 7, 7, 0, 7, 7>; _MatrixType = Eigen::Matrix<double, 7, 7, 0, 7, 7>; int _UpLo = 1]’
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:96:14:   required from ‘Eigen::LLT<MatrixType, UpLo>::LLT(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, 7, 7, 0, 7, 7>; _MatrixType = Eigen::Matrix<double, 7, 7, 0, 7, 7>; int _UpLo = 1]’
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:517:10:   required from ‘const Eigen::LLT<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::llt() const [with Derived = Eigen::Matrix<double, 7, 7, 0, 7, 7>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, 7, 7, 0, 7, 7>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.hpp:41:40:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 7; T = g2o::Sim3]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:239:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, 1, -1, false> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, 1, -1, false> >, Eigen::internal::swap_assign_op<double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, 1, -1, false> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, 1, -1, false> >, Eigen::internal::swap_assign_op<double>, 1>’
/usr/local/include/eigen3/Eigen/src/Core/Swap.h:19:7:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, 1, -1, false> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, 1, -1, false> >, Eigen::internal::swap_assign_op<double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, 1, -1, false>; SrcXprType = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, 1, -1, false>; Functor = Eigen::internal::swap_assign_op<double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, 1, -1, false>; SrcXprType = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, 1, -1, false>; Functor = Eigen::internal::swap_assign_op<double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, 1, -1, false>; Src = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, 1, -1, false>; Func = Eigen::internal::swap_assign_op<double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:323:10:   required from ‘Eigen::PartialPivLU<MatrixType>::PartialPivLU(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, 6, 6>; _MatrixType = Eigen::Matrix<double, 6, 6>]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:591:10:   required from ‘const Eigen::PartialPivLU<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::partialPivLu() const [with Derived = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, 6, 6>]’
/usr/local/include/eigen3/Eigen/src/LU/Determinant.h:41:29:   required from ‘static typename Eigen::internal::traits<T>::Scalar Eigen::internal::determinant_impl<Derived, DeterminantType>::run(const Derived&) [with Derived = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; int DeterminantType = 6; typename Eigen::internal::traits<T>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/LU/Determinant.h:96:86:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::MatrixBase<Derived>::determinant() const [with Derived = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; typename Eigen::internal::traits<T>::Scalar = double]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:69:76:   required from ‘double g2o::BaseVertex<D, T>::hessianDeterminant() const [with int D = 6; T = g2o::SE3Quat]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>, Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, 6, 6>, 1, -1, false> >, 1> >, Eigen::internal::sub_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>, Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, 6, 6>, 1, -1, false> >, 1> >, Eigen::internal::sub_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, 1, false>; SrcXprType = Eigen::Product<Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>, Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, 6, 6>, 1, -1, false> >, 1>; Functor = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, 1, false>; SrcXprType = Eigen::Product<Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>, Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, 6, 6>, 1, -1, false> >, 1>; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, 1, false>; Src = Eigen::Product<Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>, Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, 6, 6>, 1, -1, false> >, 1>; Func = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:405:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::subTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, 1, false>; Lhs = Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>; Rhs = Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, 6, 6>, 1, -1, false> >]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:178:42:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:396:68:   required from ‘static bool Eigen::internal::LLT_Traits<MatrixType, 1>::inplace_decomposition(MatrixType&) [with MatrixType = Eigen::Matrix<double, 6, 6>]’
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:443:42:   required from ‘Eigen::LLT<MatrixType, _UpLo>& Eigen::LLT<MatrixType, UpLo>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, 6, 6>; _MatrixType = Eigen::Matrix<double, 6, 6>; int _UpLo = 1]’
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:96:14:   required from ‘Eigen::LLT<MatrixType, UpLo>::LLT(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, 6, 6>; _MatrixType = Eigen::Matrix<double, 6, 6>; int _UpLo = 1]’
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:517:10:   required from ‘const Eigen::LLT<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::llt() const [with Derived = Eigen::Matrix<double, 6, 6>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, 6, 6>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.hpp:41:40:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 6; T = g2o::SE3Quat]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>, -1, -1, false>, Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>, 1, -1, false> >, 1> >, Eigen::internal::sub_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>, -1, -1, false>, Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>, 1, -1, false> >, 1> >, Eigen::internal::sub_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>, -1, 1, false>; SrcXprType = Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>, -1, -1, false>, Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>, 1, -1, false> >, 1>; Functor = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>, -1, 1, false>; SrcXprType = Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>, -1, -1, false>, Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>, 1, -1, false> >, 1>; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>, -1, 1, false>; Src = Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>, -1, -1, false>, Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>, 1, -1, false> >, 1>; Func = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:405:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::subTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>, -1, 1, false>; Lhs = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>, -1, -1, false>; Rhs = Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>, 1, -1, false> >]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:178:42:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:396:68:   required from ‘static bool Eigen::internal::LLT_Traits<MatrixType, 1>::inplace_decomposition(MatrixType&) [with MatrixType = Eigen::Matrix<double, 6, 6>]’
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:443:42:   required from ‘Eigen::LLT<MatrixType, _UpLo>& Eigen::LLT<MatrixType, UpLo>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, 6, 6>; _MatrixType = Eigen::Matrix<double, 6, 6>; int _UpLo = 1]’
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:96:14:   required from ‘Eigen::LLT<MatrixType, UpLo>::LLT(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, 6, 6>; _MatrixType = Eigen::Matrix<double, 6, 6>; int _UpLo = 1]’
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:517:10:   required from ‘const Eigen::LLT<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::llt() const [with Derived = Eigen::Matrix<double, 6, 6>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, 6, 6>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.hpp:41:40:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 6; T = g2o::SE3Quat]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false> >, Eigen::internal::swap_assign_op<double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false> >, Eigen::internal::swap_assign_op<double>, 1>’
/usr/local/include/eigen3/Eigen/src/Core/Swap.h:19:7:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false> >, Eigen::internal::swap_assign_op<double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false>; SrcXprType = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false>; Functor = Eigen::internal::swap_assign_op<double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false>; SrcXprType = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false>; Functor = Eigen::internal::swap_assign_op<double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false>; Src = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false>; Func = Eigen::internal::swap_assign_op<double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:323:10:   required from ‘Eigen::PartialPivLU<MatrixType>::PartialPivLU(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, 6, 6>; _MatrixType = Eigen::Matrix<double, 6, 6>]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:591:10:   required from ‘const Eigen::PartialPivLU<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::partialPivLu() const [with Derived = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, 6, 6>]’
/usr/local/include/eigen3/Eigen/src/LU/Determinant.h:41:29:   required from ‘static typename Eigen::internal::traits<T>::Scalar Eigen::internal::determinant_impl<Derived, DeterminantType>::run(const Derived&) [with Derived = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; int DeterminantType = 6; typename Eigen::internal::traits<T>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/LU/Determinant.h:96:86:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::MatrixBase<Derived>::determinant() const [with Derived = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; typename Eigen::internal::traits<T>::Scalar = double]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:69:76:   required from ‘double g2o::BaseVertex<D, T>::hessianDeterminant() const [with int D = 6; T = g2o::SE3Quat]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::div_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::div_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::div_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::div_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::div_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::div_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:45:28:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:323:10:   required from ‘Eigen::PartialPivLU<MatrixType>::PartialPivLU(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, 6, 6>; _MatrixType = Eigen::Matrix<double, 6, 6>]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:591:10:   required from ‘const Eigen::PartialPivLU<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::partialPivLu() const [with Derived = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, 6, 6>]’
/usr/local/include/eigen3/Eigen/src/LU/Determinant.h:41:29:   required from ‘static typename Eigen::internal::traits<T>::Scalar Eigen::internal::determinant_impl<Derived, DeterminantType>::run(const Derived&) [with Derived = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; int DeterminantType = 6; typename Eigen::internal::traits<T>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/LU/Determinant.h:96:86:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::MatrixBase<Derived>::determinant() const [with Derived = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; typename Eigen::internal::traits<T>::Scalar = double]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:69:76:   required from ‘double g2o::BaseVertex<D, T>::hessianDeterminant() const [with int D = 6; T = g2o::SE3Quat]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, -1, -1, false>, Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 1, -1, false> >, 1> >, Eigen::internal::sub_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, -1, -1, false>, Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 1, -1, false> >, 1> >, Eigen::internal::sub_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, -1, 1, false>; SrcXprType = Eigen::Product<Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, -1, -1, false>, Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 1, -1, false> >, 1>; Functor = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, -1, 1, false>; SrcXprType = Eigen::Product<Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, -1, -1, false>, Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 1, -1, false> >, 1>; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, -1, 1, false>; Src = Eigen::Product<Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, -1, -1, false>, Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 1, -1, false> >, 1>; Func = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:405:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::subTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, -1, 1, false>; Lhs = Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, -1, -1, false>; Rhs = Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 1, -1, false> >]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:178:42:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:396:68:   required from ‘static bool Eigen::internal::LLT_Traits<MatrixType, 1>::inplace_decomposition(MatrixType&) [with MatrixType = Eigen::Matrix<double, 7, 7, 0, 7, 7>]’
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:443:42:   required from ‘Eigen::LLT<MatrixType, _UpLo>& Eigen::LLT<MatrixType, UpLo>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, 7, 7, 0, 7, 7>; _MatrixType = Eigen::Matrix<double, 7, 7, 0, 7, 7>; int _UpLo = 1]’
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:96:14:   required from ‘Eigen::LLT<MatrixType, UpLo>::LLT(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, 7, 7, 0, 7, 7>; _MatrixType = Eigen::Matrix<double, 7, 7, 0, 7, 7>; int _UpLo = 1]’
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:517:10:   required from ‘const Eigen::LLT<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::llt() const [with Derived = Eigen::Matrix<double, 7, 7, 0, 7, 7>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, 7, 7, 0, 7, 7>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.hpp:41:40:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 7; T = g2o::Sim3]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:239:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, -1, -1, false>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, -1, -1, false>, -1, -1, false>, Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, -1, -1, false>, 1, -1, false> >, 1> >, Eigen::internal::sub_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, -1, -1, false>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, -1, -1, false>, -1, -1, false>, Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, -1, -1, false>, 1, -1, false> >, 1> >, Eigen::internal::sub_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, -1, -1, false>, -1, 1, false>; SrcXprType = Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, -1, -1, false>, -1, -1, false>, Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, -1, -1, false>, 1, -1, false> >, 1>; Functor = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, -1, -1, false>, -1, 1, false>; SrcXprType = Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, -1, -1, false>, -1, -1, false>, Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, -1, -1, false>, 1, -1, false> >, 1>; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, -1, -1, false>, -1, 1, false>; Src = Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, -1, -1, false>, -1, -1, false>, Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, -1, -1, false>, 1, -1, false> >, 1>; Func = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:405:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::subTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, -1, -1, false>, -1, 1, false>; Lhs = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, -1, -1, false>, -1, -1, false>; Rhs = Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, -1, -1, false>, 1, -1, false> >]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:178:42:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:396:68:   required from ‘static bool Eigen::internal::LLT_Traits<MatrixType, 1>::inplace_decomposition(MatrixType&) [with MatrixType = Eigen::Matrix<double, 7, 7, 0, 7, 7>]’
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:443:42:   required from ‘Eigen::LLT<MatrixType, _UpLo>& Eigen::LLT<MatrixType, UpLo>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, 7, 7, 0, 7, 7>; _MatrixType = Eigen::Matrix<double, 7, 7, 0, 7, 7>; int _UpLo = 1]’
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:96:14:   required from ‘Eigen::LLT<MatrixType, UpLo>::LLT(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, 7, 7, 0, 7, 7>; _MatrixType = Eigen::Matrix<double, 7, 7, 0, 7, 7>; int _UpLo = 1]’
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:517:10:   required from ‘const Eigen::LLT<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::llt() const [with Derived = Eigen::Matrix<double, 7, 7, 0, 7, 7>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, 7, 7, 0, 7, 7>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.hpp:41:40:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 7; T = g2o::Sim3]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:239:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 2, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<double, 2, 2>, Eigen::Matrix<double, 2, 1>, 1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 2, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<double, 2, 2>, Eigen::Matrix<double, 2, 1>, 1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 2, 1>; SrcXprType = Eigen::Product<Eigen::Matrix<double, 2, 2>, Eigen::Matrix<double, 2, 1>, 1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 2, 1>; SrcXprType = Eigen::Product<Eigen::Matrix<double, 2, 2>, Eigen::Matrix<double, 2, 1>, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 2, 1>; Src = Eigen::Product<Eigen::Matrix<double, 2, 2>, Eigen::Matrix<double, 2, 1>, 1>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:391:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, 2, 1>; Lhs = Eigen::Matrix<double, 2, 2>; Rhs = Eigen::Matrix<double, 2, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:124:75:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/Redux.h:416:17:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Product<Eigen::Matrix<double, 2, 2>, Eigen::Matrix<double, 2, 1>, 0> >; typename Eigen::internal::traits<T>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/Redux.h:453:73:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::sum() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Product<Eigen::Matrix<double, 2, 2>, Eigen::Matrix<double, 2, 1>, 0> >; typename Eigen::internal::traits<T>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/Dot.h:36:52:   required from ‘static Eigen::internal::dot_nocheck<T, U, NeedToTranspose>::ResScalar Eigen::internal::dot_nocheck<T, U, NeedToTranspose>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Matrix<double, 2, 1>; U = Eigen::Product<Eigen::Matrix<double, 2, 2>, Eigen::Matrix<double, 2, 1>, 0>; bool NeedToTranspose = false; Eigen::internal::dot_nocheck<T, U, NeedToTranspose>::ResScalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/Dot.h:81:58:   required from ‘typename Eigen::ScalarBinaryOpTraits<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>::ReturnType Eigen::MatrixBase<Derived>::dot(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Product<Eigen::Matrix<double, 2, 2>, Eigen::Matrix<double, 2, 1>, 0>; Derived = Eigen::Matrix<double, 2, 1>; typename Eigen::ScalarBinaryOpTraits<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>::ReturnType = double]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_edge.h:60:47:   required from ‘double g2o::BaseEdge<D, E>::chi2() const [with int D = 2; E = Eigen::Matrix<double, 2, 1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
[ 11%] Building CXX object Thirdparty/g2o/CMakeFiles/g2o.dir/g2o/core/optimizable_graph.cpp.o
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<double, 6, 6>, Eigen::Matrix<double, 6, 1>, 1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<double, 6, 6>, Eigen::Matrix<double, 6, 1>, 1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 1>; SrcXprType = Eigen::Product<Eigen::Matrix<double, 6, 6>, Eigen::Matrix<double, 6, 1>, 1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 1>; SrcXprType = Eigen::Product<Eigen::Matrix<double, 6, 6>, Eigen::Matrix<double, 6, 1>, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 6, 1>; Src = Eigen::Product<Eigen::Matrix<double, 6, 6>, Eigen::Matrix<double, 6, 1>, 1>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:391:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, 6, 1>; Lhs = Eigen::Matrix<double, 6, 6>; Rhs = Eigen::Matrix<double, 6, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:124:75:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/Redux.h:416:17:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Matrix<double, 6, 1>, const Eigen::Product<Eigen::Matrix<double, 6, 6>, Eigen::Matrix<double, 6, 1>, 0> >; typename Eigen::internal::traits<T>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/Redux.h:453:73:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::sum() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Matrix<double, 6, 1>, const Eigen::Product<Eigen::Matrix<double, 6, 6>, Eigen::Matrix<double, 6, 1>, 0> >; typename Eigen::internal::traits<T>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/Dot.h:36:52:   required from ‘static Eigen::internal::dot_nocheck<T, U, NeedToTranspose>::ResScalar Eigen::internal::dot_nocheck<T, U, NeedToTranspose>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Matrix<double, 6, 1>; U = Eigen::Product<Eigen::Matrix<double, 6, 6>, Eigen::Matrix<double, 6, 1>, 0>; bool NeedToTranspose = false; Eigen::internal::dot_nocheck<T, U, NeedToTranspose>::ResScalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/Dot.h:81:58:   required from ‘typename Eigen::ScalarBinaryOpTraits<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>::ReturnType Eigen::MatrixBase<Derived>::dot(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Product<Eigen::Matrix<double, 6, 6>, Eigen::Matrix<double, 6, 1>, 0>; Derived = Eigen::Matrix<double, 6, 1>; typename Eigen::ScalarBinaryOpTraits<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>::ReturnType = double]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_edge.h:60:47:   required from ‘double g2o::BaseEdge<D, E>::chi2() const [with int D = 6; E = g2o::SE3Quat]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 2, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<double, 2, 2>, Eigen::Matrix<double, 2, 1>, 1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 2, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<double, 2, 2>, Eigen::Matrix<double, 2, 1>, 1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 2, 1>; SrcXprType = Eigen::Product<Eigen::Matrix<double, 2, 2>, Eigen::Matrix<double, 2, 1>, 1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 2, 1>; SrcXprType = Eigen::Product<Eigen::Matrix<double, 2, 2>, Eigen::Matrix<double, 2, 1>, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 2, 1>; Src = Eigen::Product<Eigen::Matrix<double, 2, 2>, Eigen::Matrix<double, 2, 1>, 1>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:391:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, 2, 1>; Lhs = Eigen::Matrix<double, 2, 2>; Rhs = Eigen::Matrix<double, 2, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:124:75:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/Redux.h:416:17:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Product<Eigen::Matrix<double, 2, 2>, Eigen::Matrix<double, 2, 1>, 0> >; typename Eigen::internal::traits<T>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/Redux.h:453:73:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::sum() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Product<Eigen::Matrix<double, 2, 2>, Eigen::Matrix<double, 2, 1>, 0> >; typename Eigen::internal::traits<T>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/Dot.h:36:52:   required from ‘static Eigen::internal::dot_nocheck<T, U, NeedToTranspose>::ResScalar Eigen::internal::dot_nocheck<T, U, NeedToTranspose>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Matrix<double, 2, 1>; U = Eigen::Product<Eigen::Matrix<double, 2, 2>, Eigen::Matrix<double, 2, 1>, 0>; bool NeedToTranspose = false; Eigen::internal::dot_nocheck<T, U, NeedToTranspose>::ResScalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/Dot.h:81:58:   required from ‘typename Eigen::ScalarBinaryOpTraits<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>::ReturnType Eigen::MatrixBase<Derived>::dot(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Product<Eigen::Matrix<double, 2, 2>, Eigen::Matrix<double, 2, 1>, 0>; Derived = Eigen::Matrix<double, 2, 1>; typename Eigen::ScalarBinaryOpTraits<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>::ReturnType = double]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_edge.h:60:47:   required from ‘double g2o::BaseEdge<D, E>::chi2() const [with int D = 2; E = Eigen::Matrix<double, 2, 1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:239:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 7, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<double, 7, 7, 0, 7, 7>, Eigen::Matrix<double, 7, 1>, 1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 7, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<double, 7, 7, 0, 7, 7>, Eigen::Matrix<double, 7, 1>, 1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 7, 1>; SrcXprType = Eigen::Product<Eigen::Matrix<double, 7, 7, 0, 7, 7>, Eigen::Matrix<double, 7, 1>, 1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 7, 1>; SrcXprType = Eigen::Product<Eigen::Matrix<double, 7, 7, 0, 7, 7>, Eigen::Matrix<double, 7, 1>, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 7, 1>; Src = Eigen::Product<Eigen::Matrix<double, 7, 7, 0, 7, 7>, Eigen::Matrix<double, 7, 1>, 1>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:391:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, 7, 1>; Lhs = Eigen::Matrix<double, 7, 7, 0, 7, 7>; Rhs = Eigen::Matrix<double, 7, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:124:75:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/Redux.h:416:17:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Matrix<double, 7, 1>, const Eigen::Product<Eigen::Matrix<double, 7, 7, 0, 7, 7>, Eigen::Matrix<double, 7, 1>, 0> >; typename Eigen::internal::traits<T>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/Redux.h:453:73:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::sum() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Matrix<double, 7, 1>, const Eigen::Product<Eigen::Matrix<double, 7, 7, 0, 7, 7>, Eigen::Matrix<double, 7, 1>, 0> >; typename Eigen::internal::traits<T>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/Dot.h:36:52:   required from ‘static Eigen::internal::dot_nocheck<T, U, NeedToTranspose>::ResScalar Eigen::internal::dot_nocheck<T, U, NeedToTranspose>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Matrix<double, 7, 1>; U = Eigen::Product<Eigen::Matrix<double, 7, 7, 0, 7, 7>, Eigen::Matrix<double, 7, 1>, 0>; bool NeedToTranspose = false; Eigen::internal::dot_nocheck<T, U, NeedToTranspose>::ResScalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/Dot.h:81:58:   required from ‘typename Eigen::ScalarBinaryOpTraits<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>::ReturnType Eigen::MatrixBase<Derived>::dot(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Product<Eigen::Matrix<double, 7, 7, 0, 7, 7>, Eigen::Matrix<double, 7, 1>, 0>; Derived = Eigen::Matrix<double, 7, 1>; typename Eigen::ScalarBinaryOpTraits<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>::ReturnType = double]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_edge.h:60:47:   required from ‘double g2o::BaseEdge<D, E>::chi2() const [with int D = 7; E = g2o::Sim3]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:239:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, 1> >, Eigen::internal::sub_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, 1> >, Eigen::internal::sub_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>; SrcXprType = Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, 1>; Functor = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>; SrcXprType = Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, 1>; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>; Src = Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, 1>; Func = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:405:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::subTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>; Lhs = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>; Rhs = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>]’
/usr/local/include/eigen3/Eigen/src/Core/products/GeneralMatrixMatrix.h:452:25:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:323:10:   required from ‘Eigen::PartialPivLU<MatrixType>::PartialPivLU(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, 6, 6>; _MatrixType = Eigen::Matrix<double, 6, 6>]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:591:10:   required from ‘const Eigen::PartialPivLU<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::partialPivLu() const [with Derived = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, 6, 6>]’
/usr/local/include/eigen3/Eigen/src/LU/Determinant.h:41:29:   required from ‘static typename Eigen::internal::traits<T>::Scalar Eigen::internal::determinant_impl<Derived, DeterminantType>::run(const Derived&) [with Derived = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; int DeterminantType = 6; typename Eigen::internal::traits<T>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/LU/Determinant.h:96:86:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::MatrixBase<Derived>::determinant() const [with Derived = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; typename Eigen::internal::traits<T>::Scalar = double]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:69:76:   required from ‘double g2o::BaseVertex<D, T>::hessianDeterminant() const [with int D = 6; T = g2o::SE3Quat]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>; SrcXprType = Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>; SrcXprType = Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>; Src = Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>; Src = Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:396:68:   required from ‘static bool Eigen::internal::LLT_Traits<MatrixType, 1>::inplace_decomposition(MatrixType&) [with MatrixType = Eigen::Matrix<double, 6, 6>]’
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:443:42:   required from ‘Eigen::LLT<MatrixType, _UpLo>& Eigen::LLT<MatrixType, UpLo>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, 6, 6>; _MatrixType = Eigen::Matrix<double, 6, 6>; int _UpLo = 1]’
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:96:14:   required from ‘Eigen::LLT<MatrixType, UpLo>::LLT(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, 6, 6>; _MatrixType = Eigen::Matrix<double, 6, 6>; int _UpLo = 1]’
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:517:10:   required from ‘const Eigen::LLT<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::llt() const [with Derived = Eigen::Matrix<double, 6, 6>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, 6, 6>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.hpp:41:40:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 6; T = g2o::SE3Quat]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, -1, -1, false> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, -1, -1, false> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, -1, -1, false> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, -1, -1, false> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, -1, -1, false>; SrcXprType = Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, -1, -1, false>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, -1, -1, false>; SrcXprType = Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, -1, -1, false>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, -1, -1, false>; Src = Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, -1, -1, false>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, -1, -1, false>; Src = Eigen::Block<Eigen::Matrix<double, 7, 7, 0, 7, 7>, -1, -1, false>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:396:68:   required from ‘static bool Eigen::internal::LLT_Traits<MatrixType, 1>::inplace_decomposition(MatrixType&) [with MatrixType = Eigen::Matrix<double, 7, 7, 0, 7, 7>]’
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:443:42:   required from ‘Eigen::LLT<MatrixType, _UpLo>& Eigen::LLT<MatrixType, UpLo>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, 7, 7, 0, 7, 7>; _MatrixType = Eigen::Matrix<double, 7, 7, 0, 7, 7>; int _UpLo = 1]’
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:96:14:   required from ‘Eigen::LLT<MatrixType, UpLo>::LLT(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, 7, 7, 0, 7, 7>; _MatrixType = Eigen::Matrix<double, 7, 7, 0, 7, 7>; int _UpLo = 1]’
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:517:10:   required from ‘const Eigen::LLT<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::llt() const [with Derived = Eigen::Matrix<double, 7, 7, 0, 7, 7>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, 7, 7, 0, 7, 7>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.hpp:41:40:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 7; T = g2o::Sim3]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:239:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 3, 0, 6, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 3, 1, 6, 3> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 3, 3>, 1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 3, 0, 6, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 3, 1, 6, 3> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 3, 3>, 1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 3, 0, 6, 3>; SrcXprType = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 3, 1, 6, 3> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 3, 3>, 1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 3, 0, 6, 3>; SrcXprType = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 3, 1, 6, 3> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 3, 3>, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 6, 3, 0, 6, 3>; Src = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 3, 1, 6, 3> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 3, 3>, 1>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:391:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, 6, 3, 0, 6, 3>; Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 3, 1, 6, 3> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > > >; Rhs = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:148:43:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:405:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::subTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, 6, 1>; Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 3, 1, 6, 3> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 3, 3>, 0>; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:178:42:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::sub_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::sub_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<double, 6, 1>; Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 3, 1, 6, 3> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 3, 3>, 0>; Rhs = Eigen::Matrix<double, 3, 1>; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::sub_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 3, 1, 6, 3> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Matrix<double, 3, 1>, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 6, 1>; Src = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 3, 1, 6, 3> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Matrix<double, 3, 1>, 0>; Func = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:58:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator-=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 3, 1, 6, 3> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Matrix<double, 3, 1>, 0>; ExpressionType = Eigen::Matrix<double, 6, 1>; StorageBase = Eigen::MatrixBase]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_unary_edge.hpp:62:27:   required from ‘void g2o::BaseUnaryEdge<D, E, VertexXi>::constructQuadraticForm() [with int D = 3; E = Eigen::Matrix<double, 3, 1>; VertexXi = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 3, 0, 6, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 3, 0, 6, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 3, 0, 6, 3>; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 3, 0, 6, 3>; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 6, 3, 0, 6, 3>; Src = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 1>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:391:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, 6, 3, 0, 6, 3>; Lhs = Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >; Rhs = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:148:43:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:398:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::addTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>; Rhs = Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:163:42:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::add_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>; Rhs = Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 0>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:50:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator+=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 0>; ExpressionType = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; StorageBase = Eigen::MatrixBase]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_unary_edge.hpp:63:27:   required from ‘void g2o::BaseUnaryEdge<D, E, VertexXi>::constructQuadraticForm() [with int D = 3; E = Eigen::Matrix<double, 3, 1>; VertexXi = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 2, 0, 6, 2> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 2, 1, 6, 2> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 2, 2>, 1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 2, 0, 6, 2> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 2, 1, 6, 2> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 2, 2>, 1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 2, 0, 6, 2>; SrcXprType = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 2, 1, 6, 2> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 2, 2>, 1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 2, 0, 6, 2>; SrcXprType = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 2, 1, 6, 2> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 2, 2>, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 6, 2, 0, 6, 2>; Src = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 2, 1, 6, 2> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 2, 2>, 1>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:391:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, 6, 2, 0, 6, 2>; Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 2, 1, 6, 2> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > > >; Rhs = Eigen::Matrix<double, 2, 2>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:148:43:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:405:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::subTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, 6, 1>; Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 2, 1, 6, 2> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 2, 2>, 0>; Rhs = Eigen::Matrix<double, 2, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:178:42:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::sub_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::sub_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<double, 6, 1>; Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 2, 1, 6, 2> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 2, 2>, 0>; Rhs = Eigen::Matrix<double, 2, 1>; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::sub_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 2, 1, 6, 2> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Matrix<double, 2, 1>, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 6, 1>; Src = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 2, 1, 6, 2> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Matrix<double, 2, 1>, 0>; Func = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:58:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator-=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 2, 1, 6, 2> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Matrix<double, 2, 1>, 0>; ExpressionType = Eigen::Matrix<double, 6, 1>; StorageBase = Eigen::MatrixBase]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_unary_edge.hpp:62:27:   required from ‘void g2o::BaseUnaryEdge<D, E, VertexXi>::constructQuadraticForm() [with int D = 2; E = Eigen::Matrix<double, 2, 1>; VertexXi = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 2, 0, 6, 2> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 2, 0, 6, 2> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 2, 0, 6, 2>; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 2, 0, 6, 2>; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 6, 2, 0, 6, 2>; Src = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 1>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:391:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, 6, 2, 0, 6, 2>; Lhs = Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >; Rhs = Eigen::Matrix<double, 2, 2>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:148:43:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:398:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::addTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>; Rhs = Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:163:42:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::add_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>; Rhs = Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 0>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:50:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator+=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 0>; ExpressionType = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; StorageBase = Eigen::MatrixBase]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_unary_edge.hpp:63:27:   required from ‘void g2o::BaseUnaryEdge<D, E, VertexXi>::constructQuadraticForm() [with int D = 2; E = Eigen::Matrix<double, 2, 1>; VertexXi = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 12, 12, 0, 12, 12> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 12, 12, 0, 12, 12> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 12, 12, 0, 12, 12> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 12, 12, 0, 12, 12> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 12, 12, 0, 12, 12>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 12, 12, 0, 12, 12> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 12, 12, 0, 12, 12>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 12, 12, 0, 12, 12> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 12, 12, 0, 12, 12>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 12, 12, 0, 12, 12> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 12, 12, 0, 12, 12>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 12, 12, 0, 12, 12> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:396:68:   required from ‘static bool Eigen::internal::LLT_Traits<MatrixType, 1>::inplace_decomposition(MatrixType&) [with MatrixType = Eigen::Matrix<double, 6, 6>]’
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:443:42:   required from ‘Eigen::LLT<MatrixType, _UpLo>& Eigen::LLT<MatrixType, UpLo>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, 6, 6>; _MatrixType = Eigen::Matrix<double, 6, 6>; int _UpLo = 1]’
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:96:14:   required from ‘Eigen::LLT<MatrixType, UpLo>::LLT(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, 6, 6>; _MatrixType = Eigen::Matrix<double, 6, 6>; int _UpLo = 1]’
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:517:10:   required from ‘const Eigen::LLT<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::llt() const [with Derived = Eigen::Matrix<double, 6, 6>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, 6, 6>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.hpp:41:40:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 6; T = g2o::SE3Quat]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, -1, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> > >, Eigen::internal::sub_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, -1, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> > >, Eigen::internal::sub_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, -1, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> >; Functor = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, -1, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> >; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> >; Func = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> >; Func = Eigen::internal::sub_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:164:18:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:323:10:   required from ‘Eigen::PartialPivLU<MatrixType>::PartialPivLU(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, 6, 6>; _MatrixType = Eigen::Matrix<double, 6, 6>]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:591:10:   required from ‘const Eigen::PartialPivLU<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::partialPivLu() const [with Derived = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, 6, 6>]’
/usr/local/include/eigen3/Eigen/src/LU/Determinant.h:41:29:   required from ‘static typename Eigen::internal::traits<T>::Scalar Eigen::internal::determinant_impl<Derived, DeterminantType>::run(const Derived&) [with Derived = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; int DeterminantType = 6; typename Eigen::internal::traits<T>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/LU/Determinant.h:96:86:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::MatrixBase<Derived>::determinant() const [with Derived = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; typename Eigen::internal::traits<T>::Scalar = double]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:69:76:   required from ‘double g2o::BaseVertex<D, T>::hessianDeterminant() const [with int D = 6; T = g2o::SE3Quat]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>; SrcXprType = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>; SrcXprType = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>; Src = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>; Src = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:323:10:   required from ‘Eigen::PartialPivLU<MatrixType>::PartialPivLU(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, 6, 6>; _MatrixType = Eigen::Matrix<double, 6, 6>]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:591:10:   required from ‘const Eigen::PartialPivLU<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::partialPivLu() const [with Derived = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, 6, 6>]’
/usr/local/include/eigen3/Eigen/src/LU/Determinant.h:41:29:   required from ‘static typename Eigen::internal::traits<T>::Scalar Eigen::internal::determinant_impl<Derived, DeterminantType>::run(const Derived&) [with Derived = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; int DeterminantType = 6; typename Eigen::internal::traits<T>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/LU/Determinant.h:96:86:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::MatrixBase<Derived>::determinant() const [with Derived = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; typename Eigen::internal::traits<T>::Scalar = double]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:69:76:   required from ‘double g2o::BaseVertex<D, T>::hessianDeterminant() const [with int D = 6; T = g2o::SE3Quat]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:407:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 7, 2, 0, 7, 2> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 7, 2, 0, 7, 2> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 7, 2, 0, 7, 2>; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 7, 2, 0, 7, 2>; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 7, 2, 0, 7, 2>; Src = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 1>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:391:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, 7, 2, 0, 7, 2>; Lhs = Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> > >; Rhs = Eigen::Matrix<double, 2, 2>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:148:43:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:398:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::addTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>; Rhs = Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> >]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:163:42:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::add_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>; Rhs = Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> >; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> >, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> >, 0>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:50:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator+=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 7, 0, 2, 7>, 16, Eigen::Stride<0, 0> >, 0>; ExpressionType = Eigen::Map<Eigen::Matrix<double, 7, 7, 0, 7, 7>, 0, Eigen::Stride<0, 0> >; StorageBase = Eigen::MatrixBase]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_binary_edge.hpp:89:27:   required from ‘void g2o::BaseBinaryEdge<D, E, VertexXi, VertexXj>::constructQuadraticForm() [with int D = 2; E = Eigen::Matrix<double, 2, 1>; VertexXi = g2o::VertexSBAPointXYZ; VertexXj = g2o::VertexSim3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:239:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 12, 12, 0, 12, 12> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 12, 12, 0, 12, 12> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 12, 12, 0, 12, 12> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 12, 12, 0, 12, 12> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 12, 12, 0, 12, 12>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 12, 12, 0, 12, 12> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 12, 12, 0, 12, 12>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 12, 12, 0, 12, 12> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 12, 12, 0, 12, 12>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 12, 12, 0, 12, 12> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 12, 12, 0, 12, 12>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 12, 12, 0, 12, 12> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:396:68:   required from ‘static bool Eigen::internal::LLT_Traits<MatrixType, 1>::inplace_decomposition(MatrixType&) [with MatrixType = Eigen::Matrix<double, 7, 7, 0, 7, 7>]’
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:443:42:   required from ‘Eigen::LLT<MatrixType, _UpLo>& Eigen::LLT<MatrixType, UpLo>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, 7, 7, 0, 7, 7>; _MatrixType = Eigen::Matrix<double, 7, 7, 0, 7, 7>; int _UpLo = 1]’
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:96:14:   required from ‘Eigen::LLT<MatrixType, UpLo>::LLT(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, 7, 7, 0, 7, 7>; _MatrixType = Eigen::Matrix<double, 7, 7, 0, 7, 7>; int _UpLo = 1]’
/usr/local/include/eigen3/Eigen/src/Cholesky/LLT.h:517:10:   required from ‘const Eigen::LLT<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::llt() const [with Derived = Eigen::Matrix<double, 7, 7, 0, 7, 7>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, 7, 7, 0, 7, 7>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.hpp:41:40:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 7; T = g2o::Sim3]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:239:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 3, 0, 6, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 3, 1, 6, 3> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 3, 3>, 1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 3, 0, 6, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 3, 1, 6, 3> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 3, 3>, 1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 3, 0, 6, 3>; SrcXprType = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 3, 1, 6, 3> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 3, 3>, 1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 3, 0, 6, 3>; SrcXprType = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 3, 1, 6, 3> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 3, 3>, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 6, 3, 0, 6, 3>; Src = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 3, 1, 6, 3> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 3, 3>, 1>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:391:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, 6, 3, 0, 6, 3>; Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 3, 1, 6, 3> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > > >; Rhs = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:148:43:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:405:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::subTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, 6, 1>; Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 3, 1, 6, 3> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 3, 3>, 0>; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:178:42:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::sub_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::sub_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<double, 6, 1>; Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 3, 1, 6, 3> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 3, 3>, 0>; Rhs = Eigen::Matrix<double, 3, 1>; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::sub_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 3, 1, 6, 3> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Matrix<double, 3, 1>, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 6, 1>; Src = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 3, 1, 6, 3> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Matrix<double, 3, 1>, 0>; Func = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:58:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator-=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 3, 1, 6, 3> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Matrix<double, 3, 1>, 0>; ExpressionType = Eigen::Matrix<double, 6, 1>; StorageBase = Eigen::MatrixBase]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_unary_edge.hpp:62:27:   required from ‘void g2o::BaseUnaryEdge<D, E, VertexXi>::constructQuadraticForm() [with int D = 3; E = Eigen::Matrix<double, 3, 1>; VertexXi = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:239:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 3, 0, 6, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 3, 0, 6, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 3, 0, 6, 3>; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 3, 0, 6, 3>; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 6, 3, 0, 6, 3>; Src = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 1>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:391:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, 6, 3, 0, 6, 3>; Lhs = Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >; Rhs = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:148:43:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:398:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::addTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>; Rhs = Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:163:42:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::add_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>; Rhs = Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 0>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:50:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator+=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 3, 3>, 0>, Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 16, Eigen::Stride<0, 0> >, 0>; ExpressionType = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; StorageBase = Eigen::MatrixBase]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_unary_edge.hpp:63:27:   required from ‘void g2o::BaseUnaryEdge<D, E, VertexXi>::constructQuadraticForm() [with int D = 3; E = Eigen::Matrix<double, 3, 1>; VertexXi = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:239:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 2, 0, 6, 2> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 2, 1, 6, 2> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 2, 2>, 1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 2, 0, 6, 2> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 2, 1, 6, 2> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 2, 2>, 1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 2, 0, 6, 2>; SrcXprType = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 2, 1, 6, 2> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 2, 2>, 1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 2, 0, 6, 2>; SrcXprType = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 2, 1, 6, 2> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 2, 2>, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 6, 2, 0, 6, 2>; Src = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 2, 1, 6, 2> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 2, 2>, 1>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:391:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, 6, 2, 0, 6, 2>; Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 2, 1, 6, 2> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > > >; Rhs = Eigen::Matrix<double, 2, 2>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:148:43:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:405:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::subTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, 6, 1>; Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 2, 1, 6, 2> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 2, 2>, 0>; Rhs = Eigen::Matrix<double, 2, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:178:42:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::sub_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::sub_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<double, 6, 1>; Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 2, 1, 6, 2> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 2, 2>, 0>; Rhs = Eigen::Matrix<double, 2, 1>; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::sub_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 2, 1, 6, 2> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Matrix<double, 2, 1>, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 6, 1>; Src = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 2, 1, 6, 2> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Matrix<double, 2, 1>, 0>; Func = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:58:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator-=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 6, 2, 1, 6, 2> >, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Matrix<double, 2, 1>, 0>; ExpressionType = Eigen::Matrix<double, 6, 1>; StorageBase = Eigen::MatrixBase]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_unary_edge.hpp:62:27:   required from ‘void g2o::BaseUnaryEdge<D, E, VertexXi>::constructQuadraticForm() [with int D = 2; E = Eigen::Matrix<double, 2, 1>; VertexXi = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:239:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 2, 0, 6, 2> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 6, 2, 0, 6, 2> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 2, 0, 6, 2>; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 6, 2, 0, 6, 2>; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 6, 2, 0, 6, 2>; Src = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 1>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:391:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, 6, 2, 0, 6, 2>; Lhs = Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >; Rhs = Eigen::Matrix<double, 2, 2>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:148:43:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:398:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::addTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>; Rhs = Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >]’
/usr/local/include/eigen3/Eigen/src/Core/ProductEvaluators.h:163:42:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::add_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>; Rhs = Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 0>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 0>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:50:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator+=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, 2, 2>, 0>, Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 16, Eigen::Stride<0, 0> >, 0>; ExpressionType = Eigen::Map<Eigen::Matrix<double, 6, 6>, 0, Eigen::Stride<0, 0> >; StorageBase = Eigen::MatrixBase]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_unary_edge.hpp:63:27:   required from ‘void g2o::BaseUnaryEdge<D, E, VertexXi>::constructQuadraticForm() [with int D = 2; E = Eigen::Matrix<double, 2, 1>; VertexXi = g2o::VertexSE3Expmap]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:239:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_vertex.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:34,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false> >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false> >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; SrcXprType = Eigen::Matrix<double, -1, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; SrcXprType = Eigen::Matrix<double, -1, 1>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Src = Eigen::Matrix<double, -1, 1>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:797:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::TriangularView<Eigen::Matrix<double, -1, -1>, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::TriangularView<Eigen::Matrix<double, -1, -1>, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/TriangularMatrix.h:737:7:   required from ‘class Eigen::internal::triangular_dense_assignment_kernel<1, 0, 0, Eigen::internal::evaluator<Eigen::TriangularView<Eigen::Matrix<double, -1, -1>, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/TriangularMatrix.h:800:10:   required from ‘void Eigen::internal::call_triangular_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with int Mode = 1; bool SetOpposite = false; DstXprType = Eigen::TriangularView<Eigen::Matrix<double, -1, -1>, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/TriangularMatrix.h:848:61:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Triangular>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::TriangularView<Eigen::Matrix<double, -1, -1>, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::TriangularView<Eigen::Matrix<double, -1, -1>, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/TriangularMatrix.h:559:37:   required from ‘Eigen::TriangularView<MatrixType, _Mode>& Eigen::TriangularViewImpl<_MatrixType, _Mode, Eigen::Dense>::operator=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > >; _MatrixType = Eigen::Matrix<double, -1, -1>; unsigned int _Mode = 1]’
/usr/local/include/eigen3/Eigen/src/Core/TriangularMatrix.h:386:112:   required from ‘Eigen::TriangularViewImpl<_MatrixType, _Mode, Eigen::Dense>::TriangularViewType& Eigen::TriangularViewImpl<_MatrixType, _Mode, Eigen::Dense>::operator/=(const typename Eigen::internal::traits<T>::Scalar&) [with _MatrixType = Eigen::Matrix<double, -1, -1>; unsigned int _Mode = 1; Eigen::TriangularViewImpl<_MatrixType, _Mode, Eigen::Dense>::TriangularViewType = Eigen::TriangularView<Eigen::Matrix<double, -1, -1>, 1>; typename Eigen::internal::traits<T>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:435:40:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:879:62:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::mul_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::mul_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::mul_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::mul_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::mul_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::mul_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:21:28:   required from ‘Derived& Eigen::DenseBase<Derived>::operator*=(const Scalar&) [with Derived = Eigen::Matrix<double, -1, 1>; Eigen::DenseBase<Derived>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:442:14:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:879:62:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true> >, Eigen::internal::swap_assign_op<double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true> >, Eigen::internal::swap_assign_op<double>, 1>’
/usr/local/include/eigen3/Eigen/src/Core/Swap.h:19:7:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true> >, Eigen::internal::swap_assign_op<double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; SrcXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; Functor = Eigen::internal::swap_assign_op<double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; SrcXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; Functor = Eigen::internal::swap_assign_op<double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; Src = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; Func = Eigen::internal::swap_assign_op<double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; Src = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; Func = Eigen::internal::swap_assign_op<double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/DenseBase.h:418:22:   required from ‘void Eigen::DenseBase<Derived>::swap(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:540:11:   required from ‘Eigen::ComputationInfo Eigen::internal::computeFromTridiagonal_impl(DiagType&, SubDiagType&, Eigen::Index, bool, MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagType = Eigen::Matrix<double, -1, 1>; SubDiagType = Eigen::Matrix<double, -1, 1>; Eigen::Index = long int]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:439:49:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:879:62:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 1, -1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 1, -1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 1, -1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 1, -1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 1, -1>; SrcXprType = Eigen::Matrix<double, 1, -1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 1, -1>; SrcXprType = Eigen::Matrix<double, 1, -1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 1, -1>; Src = Eigen::Matrix<double, 1, -1>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 1, -1>; Derived = Eigen::Matrix<double, 1, -1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:278:27:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = 1; int _Cols = -1; int _Options = 1; int _MaxRows = 1; int _MaxCols = -1]’
/usr/local/include/eigen3/Eigen/src/Core/DenseBase.h:406:62:   required from ‘Eigen::DenseBase<Derived>::EvalReturnType Eigen::DenseBase<Derived>::eval() const [with Derived = Eigen::Transpose<const Eigen::Matrix<double, -1, 1> >; Eigen::DenseBase<Derived>::EvalReturnType = const Eigen::Matrix<double, 1, -1>]’
/usr/local/include/eigen3/Eigen/src/Core/IO.h:220:32:   required from ‘std::ostream& Eigen::operator<<(std::ostream&, const Eigen::DenseBase<Derived>&) [with Derived = Eigen::Transpose<const Eigen::Matrix<double, -1, 1> >; std::ostream = std::basic_ostream<char>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:893:76:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:710:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; Derived = Eigen::Matrix<double, -1, -1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:417:13:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:879:62:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 1, -1> >, Eigen::internal::evaluator<Eigen::Transpose<const Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 1, -1> >, Eigen::internal::evaluator<Eigen::Transpose<const Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 1, -1>; SrcXprType = Eigen::Transpose<const Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 1, -1>; SrcXprType = Eigen::Transpose<const Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 1, -1>; Src = Eigen::Transpose<const Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Transpose<const Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Matrix<double, 1, -1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Transpose<const Eigen::Matrix<double, -1, 1> >; OtherDerived = Eigen::Transpose<const Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Matrix<double, 1, -1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Transpose<const Eigen::Matrix<double, -1, 1> >; _Scalar = double; int _Rows = 1; int _Cols = -1; int _Options = 1; int _MaxRows = 1; int _MaxCols = -1]’
/usr/local/include/eigen3/Eigen/src/Core/DenseBase.h:406:48:   required from ‘Eigen::DenseBase<Derived>::EvalReturnType Eigen::DenseBase<Derived>::eval() const [with Derived = Eigen::Transpose<const Eigen::Matrix<double, -1, 1> >; Eigen::DenseBase<Derived>::EvalReturnType = const Eigen::Matrix<double, 1, -1>]’
/usr/local/include/eigen3/Eigen/src/Core/IO.h:220:32:   required from ‘std::ostream& Eigen::operator<<(std::ostream&, const Eigen::DenseBase<Derived>&) [with Derived = Eigen::Transpose<const Eigen::Matrix<double, -1, 1> >; std::ostream = std::basic_ostream<char>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:893:76:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::evaluator<Eigen::TriangularView<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::evaluator<Eigen::TriangularView<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/TriangularMatrix.h:737:7:   required from ‘class Eigen::internal::triangular_dense_assignment_kernel<1, 0, 1, Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::evaluator<Eigen::TriangularView<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/TriangularMatrix.h:800:10:   required from ‘void Eigen::internal::call_triangular_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with int Mode = 1; bool SetOpposite = true; DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::TriangularView<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/TriangularMatrix.h:839:89:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Triangular2Dense>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::TriangularView<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::TriangularView<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:75:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::TriangularView<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>; Derived = Eigen::Matrix<double, -1, -1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:571:22:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::TriangularView<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>; Derived = Eigen::Matrix<double, -1, -1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::TriangularView<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:432:7:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:879:62:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> > >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> > >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >; Derived = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:370:25:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, CoeffVectorType&) [with MatrixType = Eigen::Matrix<double, -1, -1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:445:31:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:430:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:437:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:879:62:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:710:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; Derived = Eigen::Matrix<double, -1, -1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:327:20:   required from ‘Derived& Eigen::DenseBase<Derived>::setConstant(const Scalar&) [with Derived = Eigen::Matrix<double, -1, -1>; Eigen::DenseBase<Derived>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:662:21:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::setOnes(Eigen::Index, Eigen::Index) [with Derived = Eigen::Matrix<double, -1, -1>; Eigen::Index = long int]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:420:7:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:879:62:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:710:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:446:10:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:430:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:437:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:879:62:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, -1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, -1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, -1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, -1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, -1>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:710:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, -1>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, -1>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:447:13:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:430:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:437:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:879:62:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, -1, 1, false> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false> > > >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, -1, 1, false> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false> > > >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, -1, 1, false> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false> > >; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, -1, 1, false> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false> > >; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, -1, 1, false> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false> > >; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, -1, 1, false> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false> > >; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/products/SelfadjointRank2Update.h:86:10:   required from ‘Eigen::SelfAdjointView<MatrixType, UpLo>& Eigen::SelfAdjointView<MatrixType, Mode>::rankUpdate(const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<OtherDerived>&, const Scalar&) [with DerivedU = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>; DerivedV = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; _MatrixType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; unsigned int UpLo = 1; Eigen::SelfAdjointView<MatrixType, Mode>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:372:5:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, CoeffVectorType&) [with MatrixType = Eigen::Matrix<double, -1, -1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:445:31:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:430:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:437:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:879:62:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Householder/Householder.h:45:18:   required from ‘void Eigen::MatrixBase<Derived>::makeHouseholderInPlace(Eigen::MatrixBase<Derived>::Scalar&, Eigen::MatrixBase<Derived>::RealScalar&) [with Derived = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>; Eigen::MatrixBase<Derived>::Scalar = double; Eigen::MatrixBase<Derived>::RealScalar = double]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:361:5:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, CoeffVectorType&) [with MatrixType = Eigen::Matrix<double, -1, -1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:445:31:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:430:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:437:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:879:62:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Householder/Householder.h:45:18:   required from ‘void Eigen::MatrixBase<Derived>::makeHouseholderInPlace(Eigen::MatrixBase<Derived>::Scalar&, Eigen::MatrixBase<Derived>::RealScalar&) [with Derived = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>; Eigen::MatrixBase<Derived>::Scalar = double; Eigen::MatrixBase<Derived>::RealScalar = double]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:361:5:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, CoeffVectorType&) [with MatrixType = Eigen::Matrix<double, -1, -1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:445:31:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:430:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:437:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:879:62:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > > >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > > >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:42:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::SelfAdjointView<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >, 0>; ExpressionType = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; StorageBase = Eigen::MatrixBase]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:367:35:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, CoeffVectorType&) [with MatrixType = Eigen::Matrix<double, -1, -1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:445:31:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:430:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:437:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:879:62:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Matrix<double, -1, 1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Matrix<double, -1, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Src = Eigen::Matrix<double, -1, 1>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Src = Eigen::Matrix<double, -1, 1>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; OtherDerived = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Src = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:68:76:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Src = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Src = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:42:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::SelfAdjointView<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >, 0>; ExpressionType = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; StorageBase = Eigen::MatrixBase]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:367:35:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, CoeffVectorType&) [with MatrixType = Eigen::Matrix<double, -1, -1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:445:31:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:430:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:437:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:879:62:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:42:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::SelfAdjointView<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >, 0>; ExpressionType = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; StorageBase = Eigen::MatrixBase]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:367:35:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, CoeffVectorType&) [with MatrixType = Eigen::Matrix<double, -1, -1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:445:31:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:430:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:437:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:879:62:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; SrcXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; SrcXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; Src = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; Src = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:42:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::SelfAdjointView<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >, 0>; ExpressionType = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; StorageBase = Eigen::MatrixBase]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:367:35:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, CoeffVectorType&) [with MatrixType = Eigen::Matrix<double, -1, -1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:445:31:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:430:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:437:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:879:62:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
c++: internal compiler error: Killed (program cc1plus)
Please submit a full bug report,
with preprocessed source if appropriate.
See <file:///usr/share/doc/gcc-7/README.Bugs> for instructions.
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::TriangularView<Eigen::Matrix<double, -1, -1>, 10> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::TriangularView<Eigen::Matrix<double, -1, -1>, 10> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/TriangularMatrix.h:737:7:   required from ‘class Eigen::internal::triangular_dense_assignment_kernel<2, 8, 0, Eigen::internal::evaluator<Eigen::TriangularView<Eigen::Matrix<double, -1, -1>, 10> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/TriangularMatrix.h:800:10:   required from ‘void Eigen::internal::call_triangular_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with int Mode = 10; bool SetOpposite = false; DstXprType = Eigen::TriangularView<Eigen::Matrix<double, -1, -1>, 10>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/TriangularMatrix.h:848:61:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Triangular>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::TriangularView<Eigen::Matrix<double, -1, -1>, 10>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::TriangularView<Eigen::Matrix<double, -1, -1>, 10>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/TriangularMatrix.h:559:37:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:571:22:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; Derived = Eigen::Matrix<double, -1, -1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:449:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:430:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:437:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:879:62:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> > >, Eigen::internal::mul_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> > >, Eigen::internal::mul_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; Functor = Eigen::internal::mul_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; Functor = Eigen::internal::mul_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; Func = Eigen::internal::mul_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; Func = Eigen::internal::mul_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:21:28:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:571:22:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; Derived = Eigen::Matrix<double, -1, -1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:449:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:430:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:437:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:879:62:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
CMakeFiles/ORB_SLAM3.dir/build.make:62: recipe for target 'CMakeFiles/ORB_SLAM3.dir/src/System.cc.o' failed
make[2]: *** [CMakeFiles/ORB_SLAM3.dir/src/System.cc.o] Error 4
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true> >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true> >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:571:22:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; Derived = Eigen::Matrix<double, -1, -1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:449:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:430:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:437:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:879:62:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > >, Eigen::internal::sub_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > >, Eigen::internal::sub_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >; Func = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >; Func = Eigen::internal::sub_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:164:18:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:571:22:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; Derived = Eigen::Matrix<double, -1, -1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:449:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:430:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:437:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:879:62:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
CMakeFiles/Makefile2:548: recipe for target 'CMakeFiles/ORB_SLAM3.dir/all' failed
make[1]: *** [CMakeFiles/ORB_SLAM3.dir/all] Error 2
make[1]: *** Waiting for unfinished jobs....
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false>; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:571:22:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; Derived = Eigen::Matrix<double, -1, -1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:449:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:430:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:437:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:879:62:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > > >, Eigen::internal::sub_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > > >, Eigen::internal::sub_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > >; Func = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > >; Func = Eigen::internal::sub_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:164:18:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:571:22:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; Derived = Eigen::Matrix<double, -1, -1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:449:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:430:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:437:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:879:62:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:571:22:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; Derived = Eigen::Matrix<double, -1, -1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:449:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:430:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:437:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:879:62:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:571:22:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; Derived = Eigen::Matrix<double, -1, -1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:449:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:430:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:437:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:879:62:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:571:22:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; Derived = Eigen::Matrix<double, -1, -1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:449:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:430:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:437:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:879:62:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:571:22:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; Derived = Eigen::Matrix<double, -1, -1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:449:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:430:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:437:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:879:62:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> > >, Eigen::internal::sub_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> > >, Eigen::internal::sub_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::sub_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::sub_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:164:18:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:571:22:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; Derived = Eigen::Matrix<double, -1, -1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:449:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:430:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:437:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:879:62:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:571:22:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; Derived = Eigen::Matrix<double, -1, -1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:449:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:430:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:437:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:879:62:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 16 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:571:22:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; Derived = Eigen::Matrix<double, -1, -1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:449:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:430:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:437:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:879:62:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > > >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > > >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   [ skipping 16 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:571:22:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; Derived = Eigen::Matrix<double, -1, -1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:449:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:430:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:437:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:879:62:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
[ 11%] Building CXX object Thirdparty/g2o/CMakeFiles/g2o.dir/g2o/core/solver.cpp.o
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 16 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:571:22:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; Derived = Eigen::Matrix<double, -1, -1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:449:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:430:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:437:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:879:62:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Src = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Src = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 17 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:571:22:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; Derived = Eigen::Matrix<double, -1, -1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:449:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:430:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:437:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:879:62:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 17 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:571:22:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; Derived = Eigen::Matrix<double, -1, -1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:449:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:430:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:437:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:879:62:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> > > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> > > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> > >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> > >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> > >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 18 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:571:22:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; Derived = Eigen::Matrix<double, -1, -1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:449:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h:430:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:437:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:879:62:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/solver.h:32,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/solver.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false> >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false> >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>; SrcXprType = Eigen::Matrix<double, -1, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>; SrcXprType = Eigen::Matrix<double, -1, 1>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Src = Eigen::Matrix<double, -1, 1>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:797:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/solver.h:32,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/solver.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/solver.h:32,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/solver.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > > >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > > >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/solver.h:32,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/solver.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/solver.h:32,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/solver.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/solver.h:32,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/solver.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/solver.h:32,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/solver.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Matrix<double, -1, 1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Matrix<double, -1, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Src = Eigen::Matrix<double, -1, 1>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Src = Eigen::Matrix<double, -1, 1>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/solver.h:32,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/solver.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/solver.h:32,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/solver.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1> > >, Eigen::internal::evaluator<Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1> > >, Eigen::internal::evaluator<Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1> >; SrcXprType = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1> >; SrcXprType = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1> >; Src = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1> >; Src = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; OtherDerived = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Src = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:68:76:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/solver.h:32,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/solver.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/solver.h:32,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/solver.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/solver.h:32,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/solver.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/solver.h:32,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/solver.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/solver.h:32,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/solver.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
[ 12%] Building CXX object Thirdparty/g2o/CMakeFiles/g2o.dir/g2o/core/optimization_algorithm_factory.cpp.o
[ 13%] Building CXX object Thirdparty/g2o/CMakeFiles/g2o.dir/g2o/core/estimate_propagator.cpp.o
[ 14%] Building CXX object Thirdparty/g2o/CMakeFiles/g2o.dir/g2o/core/factory.cpp.o
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/estimate_propagator.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/estimate_propagator.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false> >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false> >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; SrcXprType = Eigen::Matrix<double, -1, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; SrcXprType = Eigen::Matrix<double, -1, 1>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Src = Eigen::Matrix<double, -1, 1>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:797:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/estimate_propagator.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/estimate_propagator.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
[ 15%] Building CXX object Thirdparty/g2o/CMakeFiles/g2o.dir/g2o/core/sparse_optimizer.cpp.o
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/estimate_propagator.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/estimate_propagator.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > > >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > > >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/estimate_propagator.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/estimate_propagator.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/estimate_propagator.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/estimate_propagator.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/estimate_propagator.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/estimate_propagator.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/estimate_propagator.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/estimate_propagator.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Matrix<double, -1, 1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Matrix<double, -1, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Src = Eigen::Matrix<double, -1, 1>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Src = Eigen::Matrix<double, -1, 1>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/estimate_propagator.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/estimate_propagator.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/estimate_propagator.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/estimate_propagator.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; OtherDerived = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Src = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:68:76:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/estimate_propagator.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/estimate_propagator.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/estimate_propagator.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/estimate_propagator.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/estimate_propagator.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/estimate_propagator.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/estimate_propagator.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/estimate_propagator.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/estimate_propagator.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/estimate_propagator.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
[ 16%] Building CXX object Thirdparty/g2o/CMakeFiles/g2o.dir/g2o/core/hyper_dijkstra.cpp.o
[ 17%] Building CXX object Thirdparty/g2o/CMakeFiles/g2o.dir/g2o/core/parameter_container.cpp.o
[ 18%] Building CXX object Thirdparty/g2o/CMakeFiles/g2o.dir/g2o/core/optimization_algorithm.cpp.o
[ 19%] Building CXX object Thirdparty/g2o/CMakeFiles/g2o.dir/g2o/core/optimization_algorithm_with_hessian.cpp.o
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_optimizer.h:32,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_optimizer.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false> >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false> >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; SrcXprType = Eigen::Matrix<double, -1, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; SrcXprType = Eigen::Matrix<double, -1, 1>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Src = Eigen::Matrix<double, -1, 1>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:797:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_optimizer.h:32,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_optimizer.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_optimizer.h:32,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_optimizer.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > > >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > > >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_optimizer.h:32,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_optimizer.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_optimizer.h:32,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_optimizer.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_optimizer.h:32,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_optimizer.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_optimizer.h:32,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_optimizer.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Matrix<double, -1, 1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Matrix<double, -1, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Src = Eigen::Matrix<double, -1, 1>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Src = Eigen::Matrix<double, -1, 1>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_optimizer.h:32,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_optimizer.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_optimizer.h:32,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_optimizer.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; OtherDerived = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Src = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:68:76:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_optimizer.h:32,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_optimizer.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_optimizer.h:32,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_optimizer.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_optimizer.h:32,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_optimizer.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_optimizer.h:32,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_optimizer.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimizable_graph.h:41,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_optimizer.h:32,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_optimizer.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
[ 20%] Building CXX object Thirdparty/g2o/CMakeFiles/g2o.dir/g2o/core/optimization_algorithm_levenberg.cpp.o
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false> >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false> >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>; SrcXprType = Eigen::Matrix<double, -1, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>; SrcXprType = Eigen::Matrix<double, -1, 1>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Src = Eigen::Matrix<double, -1, 1>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:797:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > > >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > > >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Matrix<double, -1, 1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Matrix<double, -1, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Src = Eigen::Matrix<double, -1, 1>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Src = Eigen::Matrix<double, -1, 1>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1> > >, Eigen::internal::evaluator<Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1> > >, Eigen::internal::evaluator<Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1> >; SrcXprType = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1> >; SrcXprType = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1> >; Src = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1> >; Src = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; OtherDerived = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Src = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:68:76:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false> >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false> >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>; SrcXprType = Eigen::Matrix<double, -1, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>; SrcXprType = Eigen::Matrix<double, -1, 1>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Src = Eigen::Matrix<double, -1, 1>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:797:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
[ 21%] Building CXX object Thirdparty/g2o/CMakeFiles/g2o.dir/g2o/core/optimization_algorithm_gauss_newton.cpp.o
[ 22%] Building CXX object Thirdparty/g2o/CMakeFiles/g2o.dir/g2o/core/jacobian_workspace.cpp.o
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > > >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > > >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Matrix<double, -1, 1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Matrix<double, -1, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Src = Eigen::Matrix<double, -1, 1>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Src = Eigen::Matrix<double, -1, 1>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1> > >, Eigen::internal::evaluator<Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1> > >, Eigen::internal::evaluator<Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1> >; SrcXprType = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1> >; SrcXprType = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1> >; Src = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1> >; Src = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; OtherDerived = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Src = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:68:76:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.cpp:30:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false> >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false> >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>; SrcXprType = Eigen::Matrix<double, -1, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>; SrcXprType = Eigen::Matrix<double, -1, 1>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Src = Eigen::Matrix<double, -1, 1>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:797:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.cpp:30:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
[ 23%] Building CXX object Thirdparty/g2o/CMakeFiles/g2o.dir/g2o/core/robust_kernel.cpp.o
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.cpp:30:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > > >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > > >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.cpp:30:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.cpp:30:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.cpp:30:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.cpp:30:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Matrix<double, -1, 1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Matrix<double, -1, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Src = Eigen::Matrix<double, -1, 1>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Src = Eigen::Matrix<double, -1, 1>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.cpp:30:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.cpp:30:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1> > >, Eigen::internal::evaluator<Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1> > >, Eigen::internal::evaluator<Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1> >; SrcXprType = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1> >; SrcXprType = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1> >; Src = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1> >; Src = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; OtherDerived = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Src = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:68:76:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.cpp:30:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.cpp:30:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.cpp:30:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.cpp:30:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.cpp:30:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
[ 24%] Building CXX object Thirdparty/g2o/CMakeFiles/g2o.dir/g2o/core/robust_kernel_factory.cpp.o
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:710:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:327:20:   required from ‘Derived& Eigen::DenseBase<Derived>::setConstant(const Scalar&) [with Derived = Eigen::Matrix<double, -1, 1>; Eigen::DenseBase<Derived>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:501:21:   required from ‘Derived& Eigen::DenseBase<Derived>::setZero() [with Derived = Eigen::Matrix<double, -1, 1>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.cpp:54:17:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::Matrix<double, -1, 1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::Matrix<double, -1, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::Matrix<double, -1, 1>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:278:27:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/c++/7/bits/alloc_traits.h:344:16:   required from ‘static decltype (_S_construct(__a, __p, (forward<_Args>)(std::allocator_traits::construct::__args)...)) std::allocator_traits<_Alloc>::construct(_Alloc&, _Tp*, _Args&& ...) [with _Tp = Eigen::Matrix<double, -1, 1>; _Args = {Eigen::Matrix<double, -1, 1, 0, -1, 1>}; _Alloc = Eigen::aligned_allocator<Eigen::Matrix<double, -1, 1> >; decltype (_S_construct(__a, __p, (forward<_Args>)(std::allocator_traits::construct::__args)...)) = <type error>]’
/usr/include/c++/7/bits/stl_uninitialized.h:275:25:   required from ‘_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = std::move_iterator<Eigen::Matrix<double, -1, 1>*>; _ForwardIterator = Eigen::Matrix<double, -1, 1>*; _Allocator = Eigen::aligned_allocator<Eigen::Matrix<double, -1, 1> >]’
/usr/include/c++/7/bits/stl_uninitialized.h:311:2:   required from ‘_ForwardIterator std::__uninitialized_move_if_noexcept_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = Eigen::Matrix<double, -1, 1>*; _ForwardIterator = Eigen::Matrix<double, -1, 1>*; _Allocator = Eigen::aligned_allocator<Eigen::Matrix<double, -1, 1> >]’
/usr/include/c++/7/bits/vector.tcc:578:44:   required from ‘void std::vector<_Tp, _Alloc>::_M_default_append(std::vector<_Tp, _Alloc>::size_type) [with _Tp = Eigen::Matrix<double, -1, 1>; _Alloc = Eigen::aligned_allocator<Eigen::Matrix<double, -1, 1> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int]’
/usr/include/c++/7/bits/stl_vector.h:692:21:   required from ‘void std::vector<_Tp, _Alloc>::resize(std::vector<_Tp, _Alloc>::size_type) [with _Tp = Eigen::Matrix<double, -1, 1>; _Alloc = Eigen::aligned_allocator<Eigen::Matrix<double, -1, 1> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.cpp:51:36:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/jacobian_workspace.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_gauss_newton.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_gauss_newton.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false> >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false> >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>; SrcXprType = Eigen::Matrix<double, -1, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>; SrcXprType = Eigen::Matrix<double, -1, 1>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Src = Eigen::Matrix<double, -1, 1>; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:797:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_gauss_newton.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_gauss_newton.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
[ 24%] Building CXX object Thirdparty/g2o/CMakeFiles/g2o.dir/g2o/core/robust_kernel_impl.cpp.o
[ 25%] Building CXX object Thirdparty/g2o/CMakeFiles/g2o.dir/g2o/stuff/timeutil.cpp.o
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_gauss_newton.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_gauss_newton.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > > >, Eigen::internal::add_assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > > >, Eigen::internal::add_assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >; Func = Eigen::internal::add_assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_gauss_newton.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_gauss_newton.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_gauss_newton.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_gauss_newton.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_gauss_newton.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_gauss_newton.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_gauss_newton.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_gauss_newton.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Matrix<double, -1, 1>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Matrix<double, -1, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Src = Eigen::Matrix<double, -1, 1>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Src = Eigen::Matrix<double, -1, 1>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_gauss_newton.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_gauss_newton.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_gauss_newton.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_gauss_newton.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1> > >, Eigen::internal::evaluator<Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false> >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1> > >, Eigen::internal::evaluator<Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false> >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1> >; SrcXprType = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1> >; SrcXprType = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1> >; Src = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1> >; Src = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; OtherDerived = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Src = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:68:76:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_gauss_newton.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_gauss_newton.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_gauss_newton.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_gauss_newton.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_gauss_newton.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_gauss_newton.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_gauss_newton.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_gauss_newton.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double> >’:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:812:7:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1> >, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1> >, -1, 1, false>]’
/home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:443:0,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/sparse_block_matrix.h:36,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm.h:37,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_gauss_newton.h:30,
                 from /home/craters/craters-inference/slam/ORB_SLAM3/Thirdparty/g2o/g2o/core/optimization_algorithm_gauss_newton.cpp:27:
/usr/local/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
[ 26%] Building C object Thirdparty/g2o/CMakeFiles/g2o.dir/g2o/stuff/os_specific.c.o
cc1: warning: command line option ‘-std=c++14’ is valid for C++/ObjC++ but not for C
[ 27%] Building CXX object Thirdparty/g2o/CMakeFiles/g2o.dir/g2o/stuff/string_tools.cpp.o
[ 28%] Building CXX object Thirdparty/g2o/CMakeFiles/g2o.dir/g2o/stuff/property.cpp.o
[ 29%] Linking CXX shared library ../../../Thirdparty/g2o/lib/libg2o.so
[ 29%] Built target g2o
Makefile:83: recipe for target 'all' failed
make: *** [all] Error 2
